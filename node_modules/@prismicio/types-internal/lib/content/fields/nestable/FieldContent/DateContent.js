"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateContent = exports.DateLegacy = exports.isDateContent = void 0;
const tslib_1 = require("tslib");
const fp_ts_1 = require("fp-ts");
const function_1 = require("fp-ts/lib/function");
const t = (0, tslib_1.__importStar)(require("io-ts"));
const widgets_1 = require("../../../../customtypes/widgets");
const TrimmedString_1 = (0, tslib_1.__importDefault)(require("../../../../validators/TrimmedString"));
const utils_1 = require("../../../utils");
const common_1 = require("./common");
const isDateContent = (u) => (0, utils_1.hasContentType)(u) &&
    u.__TYPE__ === common_1.FieldContentType &&
    (0, utils_1.hasFieldContentType)(u) &&
    u.type === "Date";
exports.isDateContent = isDateContent;
const DateLegacy = (ctx) => new t.Type("DateLegacy", exports.isDateContent, (u) => {
    return (0, function_1.pipe)(TrimmedString_1.default.decode(u), fp_ts_1.either.map((f) => exports.DateContent.encode({
        value: f,
        type: widgets_1.DateFieldType,
        __TYPE__: common_1.FieldContentType,
    })));
}, (b) => {
    return {
        content: b.value,
        types: { [ctx.keyOfType]: widgets_1.DateFieldType },
    };
});
exports.DateLegacy = DateLegacy;
exports.DateContent = t.strict({
    type: t.literal(widgets_1.DateFieldType),
    value: TrimmedString_1.default,
    __TYPE__: t.literal(common_1.FieldContentType),
});
