"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextContent = exports.TextLegacy = exports.isTextContent = void 0;
const tslib_1 = require("tslib");
const fp_ts_1 = require("fp-ts");
const function_1 = require("fp-ts/lib/function");
const t = (0, tslib_1.__importStar)(require("io-ts"));
const widgets_1 = require("../../../../customtypes/widgets");
const TrimmedString_1 = (0, tslib_1.__importDefault)(require("../../../../validators/TrimmedString"));
const utils_1 = require("../../../utils");
const common_1 = require("./common");
const isTextContent = (u) => (0, utils_1.hasContentType)(u) &&
    u.__TYPE__ === common_1.FieldContentType &&
    (0, utils_1.hasFieldContentType)(u) &&
    u.type === "Text";
exports.isTextContent = isTextContent;
const TextLegacy = (ctx) => new t.Type("TextLegacy", exports.isTextContent, (u) => {
    return (0, function_1.pipe)(TrimmedString_1.default.decode(u), fp_ts_1.either.map((f) => exports.TextContent.encode({
        value: f,
        type: widgets_1.TextFieldType,
        __TYPE__: common_1.FieldContentType,
    })));
}, (b) => {
    return {
        content: b.value,
        types: { [ctx.keyOfType]: widgets_1.TextFieldType },
    };
});
exports.TextLegacy = TextLegacy;
exports.TextContent = t.strict({
    type: t.literal(widgets_1.TextFieldType),
    value: TrimmedString_1.default,
    __TYPE__: t.literal(common_1.FieldContentType),
});
