"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelectContentDefaultValue = exports.SelectContent = exports.SelectLegacy = exports.isSelectContent = void 0;
const tslib_1 = require("tslib");
const fp_ts_1 = require("fp-ts");
const function_1 = require("fp-ts/lib/function");
const t = (0, tslib_1.__importStar)(require("io-ts"));
const widgets_1 = require("../../../../customtypes/widgets");
const TrimmedString_1 = (0, tslib_1.__importDefault)(require("../../../../validators/TrimmedString"));
const utils_1 = require("../../../utils");
const common_1 = require("./common");
const isSelectContent = (u) => (0, utils_1.hasContentType)(u) &&
    u.__TYPE__ === common_1.FieldContentType &&
    (0, utils_1.hasFieldContentType)(u) &&
    u.type === "Select";
exports.isSelectContent = isSelectContent;
const SelectLegacy = (ctx) => new t.Type("SelectLegacy", exports.isSelectContent, (u) => {
    return (0, function_1.pipe)(TrimmedString_1.default.decode(u), fp_ts_1.either.map((f) => exports.SelectContent.encode({
        value: f,
        type: widgets_1.SelectFieldType,
        __TYPE__: common_1.FieldContentType,
    })));
}, (b) => {
    return {
        content: b.value,
        types: { [ctx.keyOfType]: widgets_1.SelectFieldType },
    };
});
exports.SelectLegacy = SelectLegacy;
exports.SelectContent = t.strict({
    type: t.literal(widgets_1.SelectFieldType),
    value: TrimmedString_1.default,
    __TYPE__: t.literal(common_1.FieldContentType),
});
const SelectContentDefaultValue = (field) => {
    var _a;
    return ((_a = field.config) === null || _a === void 0 ? void 0 : _a.default_value)
        ? {
            __TYPE__: common_1.FieldContentType,
            type: widgets_1.SelectFieldType,
            value: field.config.default_value || "",
        }
        : undefined;
};
exports.SelectContentDefaultValue = SelectContentDefaultValue;
