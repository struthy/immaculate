import * as t from "io-ts";
import type { LegacyContentCtx, WithTypes } from "../../LegacyContentCtx";
export declare const ImageLinkType = "ImageLink";
export declare const ImageLinkContent: t.IntersectionC<[t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"ImageLink">;
}>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    id: t.StringC;
    url: t.StringC;
    height: t.StringC;
    width: t.StringC;
    size: t.StringC;
    name: t.StringC;
    kind: t.StringC;
}>, t.PartialC<{
    date: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>]>;
export declare type ImageLinkContent = t.TypeOf<typeof ImageLinkContent>;
export declare const FileLinkType = "FileLink";
export declare const FileLinkContent: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
    id: t.StringC;
    url: t.StringC;
    name: t.StringC;
    kind: t.StringC;
    size: t.StringC;
}>, t.PartialC<{
    date: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    __TYPE__: t.LiteralC<"FileLink">;
}>, t.PartialC<{
    size: t.StringC;
}>]>>]>;
export declare type FileLinkContent = t.TypeOf<typeof FileLinkContent>;
export declare const DocumentLinkType = "DocumentLink";
export declare const DocumentLinkContent: t.IntersectionC<[t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"DocumentLink">;
}>>, t.ExactC<t.TypeC<{
    id: t.Type<string, string, unknown>;
}>>]>;
export declare type DocumentLinkContent = t.TypeOf<typeof DocumentLinkContent>;
export declare const ExternalLinkType = "ExternalLink";
export declare const ExternalLinkContent: t.IntersectionC<[t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"ExternalLink">;
}>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    url: t.StringC;
}>, t.PartialC<{
    kind: t.LiteralC<"web">;
    target: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    preview: t.UnionC<[t.Type<{
        title?: string;
    }, {
        title?: string;
    }, unknown>, t.NullC, t.UndefinedC]>;
}>]>>]>;
export declare type ExternalLinkContent = t.TypeOf<typeof ExternalLinkContent>;
export declare const LinkContentType = "LinkContent";
export declare const isLinkContent: (u: unknown) => u is {
    __TYPE__: "LinkContent";
    value: ({
        __TYPE__: "ImageLink";
    } & {
        id: string;
        url: string;
        height: string;
        width: string;
        size: string;
        name: string;
        kind: string;
    } & {
        date?: string | null | undefined;
    }) | ({
        id: string;
        url: string;
        name: string;
        kind: string;
        size: string;
    } & {
        date?: string | null | undefined;
    } & {
        __TYPE__: "FileLink";
    } & {
        size?: string;
    }) | ({
        __TYPE__: "DocumentLink";
    } & {
        id: string;
    }) | ({
        __TYPE__: "ExternalLink";
    } & {
        url: string;
    } & {
        kind?: "web";
        target?: string | null | undefined;
        preview?: {
            title?: string;
        } | null | undefined;
    });
};
export declare const LinkLegacy: t.UnionC<[t.Type<{
    __TYPE__: "ImageLink";
} & {
    id: string;
    url: string;
    height: string;
    width: string;
    size: string;
    name: string;
    kind: string;
} & {
    date?: string | null | undefined;
}, {
    id: string;
    url: string;
    height: string;
    width: string;
    size: string;
    name: string;
    kind: string;
} & {
    date?: string | null | undefined;
}, unknown>, t.Type<{
    id: string;
    url: string;
    name: string;
    kind: string;
    size: string;
} & {
    date?: string | null | undefined;
} & {
    __TYPE__: "FileLink";
} & {
    size?: string;
}, {
    id: string;
    url: string;
    name: string;
    kind: string;
    size: string;
} & {
    date?: string | null | undefined;
}, unknown>, t.Type<{
    __TYPE__: "DocumentLink";
} & {
    id: string;
}, {
    id: string;
}, unknown>, t.Type<{
    __TYPE__: "ExternalLink";
} & {
    url: string;
} & {
    kind?: "web";
    target?: string | null | undefined;
    preview?: {
        title?: string;
    } | null | undefined;
}, {
    url: string;
} & {
    kind?: "web";
    target?: string | null | undefined;
    preview?: {
        title?: string;
    } | null | undefined;
}, unknown>]>;
export declare const LinkContentLegacy: (ctx: LegacyContentCtx) => t.Type<{
    __TYPE__: "LinkContent";
    value: ({
        __TYPE__: "ImageLink";
    } & {
        id: string;
        url: string;
        height: string;
        width: string;
        size: string;
        name: string;
        kind: string;
    } & {
        date?: string | null | undefined;
    }) | ({
        id: string;
        url: string;
        name: string;
        kind: string;
        size: string;
    } & {
        date?: string | null | undefined;
    } & {
        __TYPE__: "FileLink";
    } & {
        size?: string;
    }) | ({
        __TYPE__: "DocumentLink";
    } & {
        id: string;
    }) | ({
        __TYPE__: "ExternalLink";
    } & {
        url: string;
    } & {
        kind?: "web";
        target?: string | null | undefined;
        preview?: {
            title?: string;
        } | null | undefined;
    });
}, WithTypes<({
    id: string;
    url: string;
    height: string;
    width: string;
    size: string;
    name: string;
    kind: string;
} & {
    date?: string | null | undefined;
}) | ({
    id: string;
    url: string;
    name: string;
    kind: string;
    size: string;
} & {
    date?: string | null | undefined;
}) | {
    id: string;
} | ({
    url: string;
} & {
    kind?: "web";
    target?: string | null | undefined;
    preview?: {
        title?: string;
    } | null | undefined;
})>, unknown>;
export declare const Link: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"ImageLink">;
}>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    id: t.StringC;
    url: t.StringC;
    height: t.StringC;
    width: t.StringC;
    size: t.StringC;
    name: t.StringC;
    kind: t.StringC;
}>, t.PartialC<{
    date: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>]>, t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
    id: t.StringC;
    url: t.StringC;
    name: t.StringC;
    kind: t.StringC;
    size: t.StringC;
}>, t.PartialC<{
    date: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    __TYPE__: t.LiteralC<"FileLink">;
}>, t.PartialC<{
    size: t.StringC;
}>]>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"DocumentLink">;
}>>, t.ExactC<t.TypeC<{
    id: t.Type<string, string, unknown>;
}>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"ExternalLink">;
}>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    url: t.StringC;
}>, t.PartialC<{
    kind: t.LiteralC<"web">;
    target: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    preview: t.UnionC<[t.Type<{
        title?: string;
    }, {
        title?: string;
    }, unknown>, t.NullC, t.UndefinedC]>;
}>]>>]>]>;
export declare const LinkContent: t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"LinkContent">;
    value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"ImageLink">;
    }>>, t.ExactC<t.IntersectionC<[t.TypeC<{
        id: t.StringC;
        url: t.StringC;
        height: t.StringC;
        width: t.StringC;
        size: t.StringC;
        name: t.StringC;
        kind: t.StringC;
    }>, t.PartialC<{
        date: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>]>, t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        id: t.StringC;
        url: t.StringC;
        name: t.StringC;
        kind: t.StringC;
        size: t.StringC;
    }>, t.PartialC<{
        date: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
        __TYPE__: t.LiteralC<"FileLink">;
    }>, t.PartialC<{
        size: t.StringC;
    }>]>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"DocumentLink">;
    }>>, t.ExactC<t.TypeC<{
        id: t.Type<string, string, unknown>;
    }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"ExternalLink">;
    }>>, t.ExactC<t.IntersectionC<[t.TypeC<{
        url: t.StringC;
    }>, t.PartialC<{
        kind: t.LiteralC<"web">;
        target: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        preview: t.UnionC<[t.Type<{
            title?: string;
        }, {
            title?: string;
        }, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>]>]>;
}>>;
export declare type LinkContent = t.TypeOf<typeof LinkContent>;
export declare type LinksTypes = LinkContent["__TYPE__"] | LinkContent["value"]["__TYPE__"];
