import * as t from "io-ts";
import type { LegacyContentCtx } from "../../../LegacyContentCtx";
import { GroupContent } from "../../GroupContent";
export declare const RepeatableWidgetsLegacy: (ctx: LegacyContentCtx) => t.ArrayC<t.Type<import("../../GroupContent").GroupItemContent, import("../../../LegacyContentCtx").WithTypes<{
    [x: string]: unknown;
}>, unknown>>;
export declare const RepeatableWidgets: t.ArrayC<t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"GroupItemContent">;
    value: t.ArrayC<t.TupleC<[t.StringC, t.UnionC<[t.UnionC<[t.ExactC<t.TypeC<{
        type: t.StringC;
        __TYPE__: t.LiteralC<"EmptyContent">;
    }>>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"BooleanContent">;
        value: t.BooleanC;
    }>>, t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        embed_url: t.StringC;
        type: t.StringC;
    }>, t.PartialC<{
        version: t.UnionC<[t.StringC, t.NumberC, t.NullC]>;
        title: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        author_name: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        author_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        provider_name: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        provider_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        cache_age: t.UnionC<[t.StringC, t.NumberC, t.NullC]>;
        thumbnail_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        thumbnail_width: t.UnionC<[t.Type<number, number, unknown>, t.NullC, t.UndefinedC]>;
        thumbnail_height: t.UnionC<[t.Type<number, number, unknown>, t.NullC, t.UndefinedC]>;
        html: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"EmbedContent">;
        all: t.UnknownC;
    }>>]>, t.ExactC<t.TypeC<{
        type: t.LiteralC<"Text">;
        value: t.Type<string, string, unknown>;
        __TYPE__: t.LiteralC<"FieldContent">;
    }>>, t.ExactC<t.TypeC<{
        type: t.LiteralC<"Timestamp">;
        value: t.Type<string, string, unknown>;
        __TYPE__: t.LiteralC<"FieldContent">;
    }>>, t.ExactC<t.TypeC<{
        type: t.LiteralC<"Select">;
        value: t.Type<string, string, unknown>;
        __TYPE__: t.LiteralC<"FieldContent">;
    }>>, t.ExactC<t.TypeC<{
        type: t.LiteralC<"Range">;
        value: t.Type<string, string, unknown>;
        __TYPE__: t.LiteralC<"FieldContent">;
    }>>, t.ExactC<t.TypeC<{
        type: t.LiteralC<"Number">;
        value: t.Type<string, string, unknown>;
        __TYPE__: t.LiteralC<"FieldContent">;
    }>>, t.ExactC<t.TypeC<{
        type: t.LiteralC<"Date">;
        value: t.Type<string, string, unknown>;
        __TYPE__: t.LiteralC<"FieldContent">;
    }>>, t.ExactC<t.TypeC<{
        type: t.LiteralC<"Color">;
        value: t.Type<string, string, unknown>;
        __TYPE__: t.LiteralC<"FieldContent">;
    }>>, t.IntersectionC<[t.ExactC<t.TypeC<{
        position: t.ExactC<t.TypeC<{
            lat: t.NumberC;
            lng: t.NumberC;
        }>>;
    }>>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"GeoPointContent">;
    }>>]>, t.IntersectionC<[t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        origin: t.ExactC<t.TypeC<{
            id: t.StringC;
            url: t.StringC;
            width: t.NumberC;
            height: t.NumberC;
        }>>;
        width: t.NumberC;
        height: t.NumberC;
        edit: t.TypeC<{
            zoom: t.NumberC;
            crop: t.TypeC<{
                x: t.NumberC;
                y: t.NumberC;
            }>;
            background: t.StringC;
        }>;
    }>, t.PartialC<{
        url: t.StringC;
        credits: t.Type<string | null, string | null, unknown>;
        alt: t.Type<string | null, string | null, unknown>;
        provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.PartialC<{
        thumbnails: t.RecordC<t.StringC, t.ExactC<t.IntersectionC<[t.TypeC<{
            origin: t.ExactC<t.TypeC<{
                id: t.StringC;
                url: t.StringC;
                width: t.NumberC;
                height: t.NumberC;
            }>>;
            width: t.NumberC;
            height: t.NumberC;
            edit: t.TypeC<{
                zoom: t.NumberC;
                crop: t.TypeC<{
                    x: t.NumberC;
                    y: t.NumberC;
                }>;
                background: t.StringC;
            }>;
        }>, t.PartialC<{
            url: t.StringC;
            credits: t.Type<string | null, string | null, unknown>;
            alt: t.Type<string | null, string | null, unknown>;
            provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        }>]>>>;
    }>]>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"ImageContent">;
    }>>]>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"IntegrationFieldsContent">;
        value: t.StringC;
    }>>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"LinkContent">;
        value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"ImageLink">;
        }>>, t.ExactC<t.IntersectionC<[t.TypeC<{
            id: t.StringC;
            url: t.StringC;
            height: t.StringC;
            width: t.StringC;
            size: t.StringC;
            name: t.StringC;
            kind: t.StringC;
        }>, t.PartialC<{
            date: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        }>]>>]>, t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
            id: t.StringC;
            url: t.StringC;
            name: t.StringC;
            kind: t.StringC;
            size: t.StringC;
        }>, t.PartialC<{
            date: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
            __TYPE__: t.LiteralC<"FileLink">;
        }>, t.PartialC<{
            size: t.StringC;
        }>]>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"DocumentLink">;
        }>>, t.ExactC<t.TypeC<{
            id: t.Type<string, string, unknown>;
        }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"ExternalLink">;
        }>>, t.ExactC<t.IntersectionC<[t.TypeC<{
            url: t.StringC;
        }>, t.PartialC<{
            kind: t.LiteralC<"web">;
            target: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
            preview: t.UnionC<[t.Type<{
                title?: string;
            }, {
                title?: string;
            }, unknown>, t.NullC, t.UndefinedC]>;
        }>]>>]>]>;
    }>>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"StructuredTextContent">;
        value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
            type: t.LiteralC<"image">;
            data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                origin: t.ExactC<t.TypeC<{
                    id: t.StringC;
                    url: t.StringC;
                    width: t.NumberC;
                    height: t.NumberC;
                }>>;
                width: t.NumberC;
                height: t.NumberC;
                edit: t.TypeC<{
                    zoom: t.NumberC;
                    crop: t.TypeC<{
                        x: t.NumberC;
                        y: t.NumberC;
                    }>;
                    background: t.StringC;
                }>;
            }>, t.PartialC<{
                url: t.StringC;
                credits: t.Type<string | null, string | null, unknown>;
                alt: t.Type<string | null, string | null, unknown>;
                provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
            }>]>>, t.PartialC<{
                linkTo: t.UnionC<[t.Type<({
                    __TYPE__: "ImageLink";
                } & {
                    id: string;
                    url: string;
                    height: string;
                    width: string;
                    size: string;
                    name: string;
                    kind: string;
                } & {
                    date?: string | null | undefined;
                }) | ({
                    id: string;
                    url: string;
                    name: string;
                    kind: string;
                    size: string;
                } & {
                    date?: string | null | undefined;
                } & {
                    __TYPE__: "FileLink";
                } & {
                    size?: string;
                }) | ({
                    __TYPE__: "DocumentLink";
                } & {
                    id: string;
                }) | ({
                    __TYPE__: "ExternalLink";
                } & {
                    url: string;
                } & {
                    kind?: "web";
                    target?: string | null | undefined;
                    preview?: {
                        title?: string;
                    } | null | undefined;
                }), ({
                    __TYPE__: "ImageLink";
                } & {
                    id: string;
                    url: string;
                    height: string;
                    width: string;
                    size: string;
                    name: string;
                    kind: string;
                } & {
                    date?: string | null | undefined;
                }) | ({
                    id: string;
                    url: string;
                    name: string;
                    kind: string;
                    size: string;
                } & {
                    date?: string | null | undefined;
                } & {
                    __TYPE__: "FileLink";
                } & {
                    size?: string;
                }) | ({
                    __TYPE__: "DocumentLink";
                } & {
                    id: string;
                }) | ({
                    __TYPE__: "ExternalLink";
                } & {
                    url: string;
                } & {
                    kind?: "web";
                    target?: string | null | undefined;
                    preview?: {
                        title?: string;
                    } | null | undefined;
                }), unknown>, t.NullC, t.UndefinedC]>;
            }>]>;
        }>, t.PartialC<{
            label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
            direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
            type: t.LiteralC<"embed">;
            data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                embed_url: t.StringC;
                type: t.StringC;
            }>, t.PartialC<{
                version: t.UnionC<[t.StringC, t.NumberC, t.NullC]>;
                title: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                author_name: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                author_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                provider_name: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                provider_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                cache_age: t.UnionC<[t.StringC, t.NumberC, t.NullC]>;
                thumbnail_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                thumbnail_width: t.UnionC<[t.Type<number, number, unknown>, t.NullC, t.UndefinedC]>;
                thumbnail_height: t.UnionC<[t.Type<number, number, unknown>, t.NullC, t.UndefinedC]>;
                html: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
            }>]>>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"EmbedContent">;
                all: t.UnknownC;
            }>>]>;
        }>, t.PartialC<{
            label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
            direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
            type: t.Type<"image" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "embed" | "list-item" | "o-list-item" | "rtl", "image" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
            content: t.IntersectionC<[t.TypeC<{
                text: t.StringC;
            }>, t.PartialC<{
                spans: t.Type<({
                    data: ({
                        __TYPE__: "ImageLink";
                    } & {
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    }) | ({
                        id: string;
                        url: string;
                        name: string;
                        kind: string;
                        size: string;
                    } & {
                        date?: string | null | undefined;
                    } & {
                        __TYPE__: "FileLink";
                    } & {
                        size?: string;
                    }) | ({
                        __TYPE__: "DocumentLink";
                    } & {
                        id: string;
                    }) | ({
                        __TYPE__: "ExternalLink";
                    } & {
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    });
                    start: number;
                    end: number;
                    type: "hyperlink";
                } | {
                    data: string;
                    start: number;
                    end: number;
                    type: "label";
                } | {
                    start: number;
                    end: number;
                    type: "strong" | "em" | "list-item";
                })[], ({
                    data: ({
                        __TYPE__: "ImageLink";
                    } & {
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    }) | ({
                        id: string;
                        url: string;
                        name: string;
                        kind: string;
                        size: string;
                    } & {
                        date?: string | null | undefined;
                    } & {
                        __TYPE__: "FileLink";
                    } & {
                        size?: string;
                    }) | ({
                        __TYPE__: "DocumentLink";
                    } & {
                        id: string;
                    }) | ({
                        __TYPE__: "ExternalLink";
                    } & {
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    });
                    start: number;
                    end: number;
                    type: "hyperlink";
                } | {
                    data: string;
                    start: number;
                    end: number;
                    type: "label";
                } | {
                    start: number;
                    end: number;
                    type: "strong" | "em" | "list-item";
                })[], unknown>;
            }>]>;
        }>, t.PartialC<{
            label: t.StringC;
            direction: t.StringC;
        }>]>>]>>;
    }>>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"SeparatorContent">;
    }>>]>, t.Type<GroupContent, GroupContent, unknown>]>]>>;
}>>>;
