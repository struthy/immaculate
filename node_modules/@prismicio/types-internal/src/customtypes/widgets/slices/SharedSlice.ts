import * as t from "io-ts"
import { withFallback } from "io-ts-types/lib/withFallback"

import { WidgetKey } from "../../../common"
import { NestableWidget } from "../nestable/NestableWidget"
import type { SharedSliceRef } from "./SharedSliceRef"
import type { DynamicSlice, StaticSlice } from "./Slice"
import { SlicePrimaryWidget } from "./SlicePrimaryWidget"

const IMAGE_PLACEHOLDER_URL =
	"https://images.prismic.io/slice-machine/621a5ec4-0387-4bc5-9860-2dd46cbc07cd_default_ss.png?auto=compress,format"

export const Variation = t.exact(
	t.intersection([
		t.type({
			id: t.string,
			name: t.string,
			description: t.string,
			imageUrl: withFallback(t.string, IMAGE_PLACEHOLDER_URL),
			docURL: t.string,
			version: t.string,
		}),
		t.partial({
			display: t.string,
			primary: t.record(WidgetKey, SlicePrimaryWidget),
			items: t.record(WidgetKey, NestableWidget),
		}),
	]),
)

export type Variation = t.TypeOf<typeof Variation>

// VariationFields is used exclusively for the slices migration, LegacySlice -> SharedSlice
export type VariationFields = {
	type: "SharedSlice"
	sliceName: string
	variationId: string
	fields: Pick<Variation, "primary" | "items">
}

export const SharedSliceType = "SharedSlice"

const LegacyPath = t.string
const VariationId = t.string

export const SharedSlice = t.exact(
	t.intersection([
		t.type({
			id: t.string,
			type: t.literal(SharedSliceType),
			name: t.string,
			variations: t.readonlyArray(Variation),
		}),
		t.partial({
			description: t.string,
			legacyPaths: t.record(LegacyPath, VariationId),
		}),
	]),
)

export type SharedSlice = t.TypeOf<typeof SharedSlice>

export function isStaticSharedSlice(slice: StaticSlice): slice is SharedSlice {
	return slice.type === "SharedSlice"
}

export function isDynamicSharedSlice(
	slice: DynamicSlice,
): slice is SharedSliceRef {
	return slice.type === "SharedSlice"
}
