import * as t from "io-ts"

import type { LegacyContentCtx, WithTypes } from "../../LegacyContentCtx"
import { hasContentType } from "../../utils"

export const SeparatorContentType = "SeparatorContent"

export const isSeparatorContent = (u: unknown): u is SeparatorContent =>
	hasContentType(u) && u.__TYPE__ === SeparatorContentType

export const SeparatorLegacy = (ctx: LegacyContentCtx) =>
	new t.Type<SeparatorContent, WithTypes<unknown>, unknown>(
		"SeparatorLegacy",
		isSeparatorContent,
		() => {
			return t.success(
				SeparatorContent.encode({ __TYPE__: SeparatorContentType }),
			)
		},

		() => {
			return {
				content: {},
				types: { [ctx.keyOfType]: "Separator" },
			}
		},
	)

export const SeparatorContent = t.strict({
	__TYPE__: t.literal(SeparatorContentType),
})

export type SeparatorContent = t.TypeOf<typeof SeparatorContent>
