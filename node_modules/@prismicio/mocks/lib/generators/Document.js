"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocumentMock = void 0;
const customtypes_1 = require("@prismicio/types-internal/lib/customtypes");
const _1 = require(".");
const SliceZone_1 = require("./widgets/SliceZone");
function randomWidgetContent(fieldDef, sharedSlices, config) {
    switch (fieldDef.type) {
        case "Choice":
        case "Slices":
            return SliceZone_1.SliceZoneMock.generate(fieldDef, sharedSlices, config);
        case "Group":
            return _1.GroupMock.generate(fieldDef, config);
        case "UID":
            return _1.UIDMock.generate(fieldDef, config);
        default:
            return _1.NestableWidgetMock.generate(fieldDef, config);
    }
}
function random(customType, sharedSlices, config) {
    return (0, customtypes_1.flattenWidgets)(customType)
        .map(([fieldKey, fieldDef]) => {
        const fieldMockConfig = (config === null || config === void 0 ? void 0 : config.value) && config.value[fieldKey];
        const content = randomWidgetContent(fieldDef, sharedSlices, fieldMockConfig);
        return [fieldKey, content];
    })
        .reduce((acc, [k, v]) => ({ ...acc, [k]: v }), {});
}
exports.DocumentMock = {
    generate(def, sharedSlices = {}, config) {
        return random(def, sharedSlices, config);
    },
};
