"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BooleanMock = void 0;
const content_1 = require("@prismicio/types-internal/lib/content");
const diff_1 = require("@prismicio/types-internal/lib/customtypes/diff");
function random() {
    return Math.random() < 0.5 ? true : false;
}
exports.BooleanMock = {
    generate(_def, config) {
        const value = (() => {
            if ("boolean" === typeof (config === null || config === void 0 ? void 0 : config.value))
                return config.value;
            return random();
        })();
        return {
            __TYPE__: content_1.BooleanContentType,
            value,
        };
    },
    patch(diff, _content, config) {
        switch (diff.op) {
            case diff_1.DiffOperation.Removed:
                return;
            case diff_1.DiffOperation.Updated:
            case diff_1.DiffOperation.Added:
                return this.generate(diff.value, config);
        }
    },
    applyPatch(data) {
        var _a;
        if (data.diff.op === diff_1.DiffOperation.Removed)
            return { result: undefined };
        if (data.diff.value.type === "Boolean") {
            const patched = this.patch(data.diff, !data.content || data.content.__TYPE__ === content_1.BooleanContentType
                ? data.content
                : undefined, ((_a = data.config) === null || _a === void 0 ? void 0 : _a.type) === "Boolean" ? data.config : undefined);
            return { result: patched };
        }
        return;
    },
};
