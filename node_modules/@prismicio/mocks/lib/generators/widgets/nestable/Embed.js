"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmbedMock = void 0;
const tslib_1 = require("tslib");
const content_1 = require("@prismicio/types-internal/lib/content");
const diff_1 = require("@prismicio/types-internal/lib/customtypes/diff");
const embed_json_1 = (0, tslib_1.__importDefault)(require("../../dataset/embed.json"));
function random(content) {
    var _a;
    const embed = content ||
        ((_a = embed_json_1.default[Math.floor(Math.random() * embed_json_1.default.length)]) === null || _a === void 0 ? void 0 : _a.oembed);
    if (!embed)
        throw new Error("Something happened during Embed generation.");
    return { ...embed, all: embed, __TYPE__: content_1.EmbedContentType };
}
exports.EmbedMock = {
    generate(_def, config) {
        return random(config === null || config === void 0 ? void 0 : config.value);
    },
    applyPatch(data) {
        var _a;
        if (data.diff.op === diff_1.DiffOperation.Removed)
            return { result: undefined };
        if (data.diff.value.type === "Embed") {
            const patched = this.patch(data.diff, (0, content_1.isEmbedContent)(data.content) ? data.content : undefined, ((_a = data.config) === null || _a === void 0 ? void 0 : _a.type) === "Embed" ? data.config : undefined);
            return { result: patched };
        }
        return;
    },
    patch(diff, _content, config) {
        switch (diff.op) {
            case diff_1.DiffOperation.Removed:
                return;
            case diff_1.DiffOperation.Updated:
            case diff_1.DiffOperation.Added:
                return this.generate(diff.value, config);
        }
    },
};
