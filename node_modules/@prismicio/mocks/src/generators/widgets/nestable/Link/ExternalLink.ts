import {
	ExternalLinkContent,
	ExternalLinkType,
} from "@prismicio/types-internal/lib/content"
import type { Link } from "@prismicio/types-internal/lib/customtypes"

import dataset from "../../../dataset/weblinks.json"
import type { MockConfig } from "../../../MockConfig"

export type ExternalLinkConfig = MockConfig<Link["type"], string>

function random(): ExternalLinkContent {
	const webLinks = dataset as ReadonlyArray<string>
	const randomIndex = Math.floor(Math.random() * webLinks.length)
	const url = webLinks[randomIndex]
	if (!url) throw new Error("Something happened during Web link generation.")
	return { __TYPE__: ExternalLinkType, url }
}

export const ExternalLinkMock = {
	generate(_def: Link, config?: ExternalLinkConfig): ExternalLinkContent {
		const value: ExternalLinkContent =
			(config?.value && { __TYPE__: ExternalLinkType, url: config.value }) ||
			random()
		return ExternalLinkContent.encode(value)
	},
}
