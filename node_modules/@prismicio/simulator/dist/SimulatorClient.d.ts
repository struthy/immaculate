import { APITransactions, ClientRequestType, ClientTransactions } from "./types";
import { SimulatorAPIOptions } from "./SimulatorAPI";
import { AllChannelEmitterOptions, ChannelEmitter, TransactionMethod, TransactionsHandlers, TransactionsMethods } from "./channel";
export declare const simulatorClientDefaultOptions: Partial<AllChannelEmitterOptions>;
export declare class SimulatorClient extends ChannelEmitter<APITransactions, Partial<AllChannelEmitterOptions>, SimulatorAPIOptions> implements TransactionsMethods<ClientTransactions> {
    constructor(target: HTMLIFrameElement, requestHandlers?: Partial<TransactionsHandlers<APITransactions>>, options?: Partial<AllChannelEmitterOptions>);
    [ClientRequestType.Ping]: TransactionMethod<ClientTransactions[ClientRequestType.Ping]>;
    [ClientRequestType.SetSliceZone]: TransactionMethod<ClientTransactions[ClientRequestType.SetSliceZone]>;
    [ClientRequestType.ScrollToSlice]: TransactionMethod<ClientTransactions[ClientRequestType.ScrollToSlice]>;
}
