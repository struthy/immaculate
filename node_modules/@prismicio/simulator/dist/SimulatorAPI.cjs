"use strict";
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var _a, _b;
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const types = require("./types.cjs");
require("statuses");
require("./channel/types.cjs");
const ChannelReceiver = require("./channel/ChannelReceiver.cjs");
const simulatorAPIDefaultOptions = {
  requestIDPrefix: "api-",
  activeSliceAPI: false,
  sliceZoneSizeAPI: false
};
class SimulatorAPI extends ChannelReceiver.ChannelReceiver {
  constructor(requestHandlers, options) {
    var _a2, _b2;
    const debug = (options == null ? void 0 : options.debug) || /[?&]debug=true/i.test(decodeURIComponent(window.location.search));
    super({
      [types.ClientRequestType.Ping]: (_req, res) => {
        return res.success("pong");
      },
      ...requestHandlers
    }, {
      ...simulatorAPIDefaultOptions,
      ...options,
      debug
    });
    __publicField(this, _a, async (data) => {
      return await this.postFormattedRequest(types.APIRequestType.SetActiveSlice, data);
    });
    __publicField(this, _b, async (data) => {
      return await this.postFormattedRequest(types.APIRequestType.SetSliceZoneSize, data);
    });
    if (debug) {
      window.prismic || (window.prismic = {});
      (_a2 = window.prismic).sliceSimulator || (_a2.sliceSimulator = {});
      (_b2 = window.prismic.sliceSimulator).api || (_b2.api = []);
      window.prismic.sliceSimulator.api.push(this);
    }
  }
}
_a = types.APIRequestType.SetActiveSlice, _b = types.APIRequestType.SetSliceZoneSize;
exports.SimulatorAPI = SimulatorAPI;
exports.simulatorAPIDefaultOptions = simulatorAPIDefaultOptions;
//# sourceMappingURL=SimulatorAPI.cjs.map
