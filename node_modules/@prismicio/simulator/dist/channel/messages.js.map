{"version":3,"file":"messages.js","sources":["../../../src/channel/messages.ts"],"sourcesContent":["import statuses from \"statuses\";\n\nimport {\n\tErrorResponseMessage,\n\tRequestMessage,\n\tSuccessResponseMessage,\n\tUnknownErrorResponseMessage,\n\tUnknownMessage,\n\tUnknownRequestMessage,\n\tUnknownResponseMessage,\n\tUnknownSuccessResponseMessage,\n} from \"./types\";\n\nlet requestID = 0;\n\nexport const createRequestMessage = <\n\tTType extends string = string,\n\tTData = undefined,\n>(\n\ttype: TType,\n\tdata: TData,\n\tprefix = \"\",\n): RequestMessage<TType, TData> => {\n\treturn {\n\t\trequestID: `${prefix}${requestID++}`,\n\t\ttype,\n\t\tdata,\n\t};\n};\n\nexport const createSuccessResponseMessage = <TData = undefined>(\n\trequestID: string,\n\tdata: TData,\n\tstatus: keyof typeof statuses.message = 200,\n): SuccessResponseMessage<TData> => {\n\tif (status >= 400) {\n\t\tthrow new TypeError(\n\t\t\t`Invalid success status code, expected status to be within \\`[100;400[\\`, got \\`${status}\\``,\n\t\t);\n\t}\n\n\treturn {\n\t\trequestID,\n\t\tstatus,\n\t\tmsg: statuses.message[status]?.replace(/\\.$/, \"\").toLowerCase() ?? \"\",\n\t\tdata,\n\t};\n};\n\nexport const createErrorResponseMessage = <TError = undefined>(\n\trequestID: string,\n\terror: TError,\n\tstatus: keyof typeof statuses.message = 400,\n): ErrorResponseMessage<TError> => {\n\tif (status < 400) {\n\t\tthrow new TypeError(\n\t\t\t`Invalid error status code, expected status to be within \\`[500;600[\\`, got \\`${status}\\``,\n\t\t);\n\t}\n\n\treturn {\n\t\trequestID,\n\t\tstatus,\n\t\tmsg: statuses.message[status]?.replace(/\\.$/, \"\").toLowerCase() ?? \"\",\n\t\terror,\n\t};\n};\n\nexport const validateMessage = (message: unknown): UnknownMessage => {\n\tif (typeof message !== \"object\" || message === null) {\n\t\tthrow new TypeError(\n\t\t\t`Invalid message received, expected message to be of type \\`object\\`, got \\`${typeof message}\\``,\n\t\t);\n\t} else if (\n\t\t!Object.keys(message).every((key) =>\n\t\t\t[\"requestID\", \"type\", \"data\", \"status\", \"msg\", \"error\"].includes(key),\n\t\t)\n\t) {\n\t\tthrow new TypeError(`Invalid message received: ${JSON.stringify(message)}`);\n\t} else if (\n\t\ttypeof (message as Record<string, unknown>).requestID !== \"string\"\n\t) {\n\t\tthrow new TypeError(\n\t\t\t`Invalid message received, expected \\`message.requestID\\` to be of type \\`string\\`, got \\`${typeof (\n\t\t\t\tmessage as Record<string, unknown>\n\t\t\t).id}\\``,\n\t\t);\n\t}\n\n\treturn message as UnknownMessage;\n};\n\nexport const isRequestMessage = (\n\tmessage: UnknownMessage,\n): message is UnknownRequestMessage => {\n\treturn \"type\" in message;\n};\n\nexport const isResponseMessage = (\n\tmessage: UnknownMessage,\n): message is UnknownResponseMessage => {\n\treturn !(\"type\" in message);\n};\n\nexport const isSuccessResponseMessage = (\n\tmessage: UnknownMessage,\n): message is UnknownSuccessResponseMessage => {\n\treturn isResponseMessage(message) && !(\"error\" in message);\n};\n\nexport const isErrorResponseMessage = (\n\tmessage: UnknownMessage,\n): message is UnknownErrorResponseMessage => {\n\treturn isResponseMessage(message) && !(\"data\" in message);\n};\n"],"names":["requestID"],"mappings":";AAaA,IAAI,YAAY;AAET,MAAM,uBAAuB,CAInC,MACA,MACA,SAAS,OACwB;AAC1B,SAAA;AAAA,IACN,WAAW,GAAG,SAAS;AAAA,IACvB;AAAA,IACA;AAAA,EAAA;AAEF;AAEO,MAAM,+BAA+B,CAC3CA,YACA,MACA,SAAwC,QACN;;AAClC,MAAI,UAAU,KAAK;AACZ,UAAA,IAAI,UACT,kFAAkF,UAAU;AAAA,EAE7F;AAEM,SAAA;AAAA,IACN,WAAAA;AAAAA,IACA;AAAA,IACA,OAAK,cAAS,QAAQ,MAAM,MAAvB,mBAA0B,QAAQ,OAAO,IAAI,kBAAiB;AAAA,IACnE;AAAA,EAAA;AAEF;AAEO,MAAM,6BAA6B,CACzCA,YACA,OACA,SAAwC,QACP;;AACjC,MAAI,SAAS,KAAK;AACX,UAAA,IAAI,UACT,gFAAgF,UAAU;AAAA,EAE3F;AAEM,SAAA;AAAA,IACN,WAAAA;AAAAA,IACA;AAAA,IACA,OAAK,cAAS,QAAQ,MAAM,MAAvB,mBAA0B,QAAQ,OAAO,IAAI,kBAAiB;AAAA,IACnE;AAAA,EAAA;AAEF;AAEa,MAAA,kBAAkB,CAAC,YAAoC;AACnE,MAAI,OAAO,YAAY,YAAY,YAAY,MAAM;AACpD,UAAM,IAAI,UACT,8EAA8E,OAAO,WAAW;AAAA,EAAA,WAGjG,CAAC,OAAO,KAAK,OAAO,EAAE,MAAM,CAAC,QAC5B,CAAC,aAAa,QAAQ,QAAQ,UAAU,OAAO,OAAO,EAAE,SAAS,GAAG,CAAC,GAErE;AACD,UAAM,IAAI,UAAU,6BAA6B,KAAK,UAAU,OAAO,GAAG;AAAA,EAE1E,WAAA,OAAQ,QAAoC,cAAc,UACzD;AACD,UAAM,IAAI,UACT,4FAA4F,OAC3F,QACC,MAAM;AAAA,EAET;AAEM,SAAA;AACR;AAEa,MAAA,mBAAmB,CAC/B,YACqC;AACrC,SAAO,UAAU;AAClB;AAEa,MAAA,oBAAoB,CAChC,YACsC;AACtC,SAAO,EAAE,UAAU;AACpB;AAEa,MAAA,2BAA2B,CACvC,YAC6C;AAC7C,SAAO,kBAAkB,OAAO,KAAK,EAAE,WAAW;AACnD;AAEa,MAAA,yBAAyB,CACrC,YAC2C;AAC3C,SAAO,kBAAkB,OAAO,KAAK,EAAE,UAAU;AAClD;"}