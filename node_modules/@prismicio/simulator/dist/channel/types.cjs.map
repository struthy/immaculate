{"version":3,"file":"types.cjs","sources":["../../../src/channel/types.ts"],"sourcesContent":["// Messages\nexport type MessageBase = {\n\trequestID: string;\n};\n\nexport type RequestMessage<TType extends string = string, TData = void> = {\n\ttype: TType;\n\tdata: TData;\n} & MessageBase;\n\nexport type ResponseMessageBase = {\n\tstatus: number;\n\tmsg: string;\n} & MessageBase;\n\nexport type SuccessResponseMessage<TData = void> = {\n\tdata: TData;\n\terror?: never;\n} & ResponseMessageBase;\n\nexport type ErrorResponseMessage<TError = unknown> = {\n\tdata?: never;\n\terror: unknown | TError;\n} & ResponseMessageBase;\n\nexport type ResponseMessage<TData = void, TError = unknown> =\n\t| SuccessResponseMessage<TData>\n\t| ErrorResponseMessage<TError>;\n\nexport type ExtractSuccessResponseMessage<\n\tTResponse extends UnknownResponseMessage,\n> = Extract<TResponse, { error?: never }>;\n\nexport type ExtractErrorResponseMessage<\n\tTResponse extends UnknownResponseMessage,\n> = Extract<TResponse, { data?: never }>;\n\n// Unknown messages\nexport type UnknownRequestMessage = RequestMessage<string, unknown>;\n\nexport type UnknownSuccessResponseMessage = SuccessResponseMessage<unknown>;\n\nexport type UnknownErrorResponseMessage = ErrorResponseMessage<unknown>;\n\nexport type UnknownResponseMessage =\n\t| UnknownSuccessResponseMessage\n\t| UnknownErrorResponseMessage;\n\nexport type UnknownMessage = UnknownRequestMessage | UnknownResponseMessage;\n\n// Transactions\nexport type Transaction<\n\tTRequest extends UnknownRequestMessage,\n\tTResponse extends UnknownResponseMessage = ResponseMessage<void>,\n> = {\n\trequest: TRequest;\n\tresponse: TResponse;\n};\n\nexport type TransactionMethod<\n\tTTransaction extends Transaction<\n\t\tUnknownRequestMessage,\n\t\tUnknownResponseMessage\n\t>,\n> = (\n\tdata: TTransaction[\"request\"][\"data\"],\n) => Promise<ExtractSuccessResponseMessage<TTransaction[\"response\"]>>;\n\nexport type TransactionHandler<\n\tTTransaction extends Transaction<\n\t\tUnknownRequestMessage,\n\t\tUnknownResponseMessage\n\t>,\n> = (\n\trequest: TTransaction[\"request\"],\n\tresponse: {\n\t\tsuccess: (\n\t\t\tdata: ExtractSuccessResponseMessage<TTransaction[\"response\"]>[\"data\"],\n\t\t\tstatus?: number,\n\t\t) => ExtractSuccessResponseMessage<TTransaction[\"response\"]>;\n\t\terror: (\n\t\t\terror: ExtractErrorResponseMessage<TTransaction[\"response\"]>[\"error\"],\n\t\t\tstatus?: number,\n\t\t) => ExtractErrorResponseMessage<TTransaction[\"response\"]>;\n\t},\n) => Promise<TTransaction[\"response\"]> | TTransaction[\"response\"];\n\nexport type TransactionsMethods<\n\tTTransactions extends Record<string, UnknownTransaction>,\n> = {\n\t[Key in keyof TTransactions]: TransactionMethod<TTransactions[Key]>;\n};\n\nexport type TransactionsHandlers<\n\tTTransactions extends Record<string, UnknownTransaction>,\n> = {\n\t[Key in keyof TTransactions]: TransactionHandler<TTransactions[Key]>;\n};\n\n// Unknown transactions\nexport type UnknownTransaction = Transaction<\n\tUnknownRequestMessage,\n\tUnknownResponseMessage\n>;\n\nexport type UnknownTransactionMethod = TransactionMethod<UnknownTransaction>;\n\nexport type UnknownTransactionHandler = TransactionHandler<UnknownTransaction>;\n\n// Emitter\nexport enum InternalEmitterRequestType {\n\tConnect = \"connect\",\n}\n\nexport type InternalEmitterTransactions<\n\tTReceiverOptions extends Record<string, unknown> = Record<string, unknown>,\n> = {\n\t[InternalEmitterRequestType.Connect]: Transaction<\n\t\tRequestMessage<\n\t\t\tInternalEmitterRequestType.Connect,\n\t\t\t| Partial<\n\t\t\t\t\tOmit<TReceiverOptions, \"debug\" | \"requestIDPrefix\" | \"readyTimeout\">\n\t\t\t  >\n\t\t\t| undefined\n\t\t>\n\t>;\n};\n\n// Receiver\nexport enum InternalReceiverRequestType {\n\tReady = \"ready\",\n}\n\nexport type InternalReceiverTransactions = {\n\t[InternalReceiverRequestType.Ready]: Transaction<\n\t\tRequestMessage<InternalReceiverRequestType.Ready>\n\t>;\n};\n"],"names":["InternalEmitterRequestType","InternalReceiverRequestType"],"mappings":";;AA8GYA,QAAA,6BAAA;AAAA,CAAZ,SAAYA,6BAA0B;AACrCA,8BAAA,SAAA,IAAA;AACD,GAFYA,uCAAAA,QAAAA,6BAEX,CAAA,EAAA;AAiBWC,QAAA,8BAAA;AAAA,CAAZ,SAAYA,8BAA2B;AACtCA,+BAAA,OAAA,IAAA;AACD,GAFYA,QAAA,gCAAAA,sCAEX,CAAA,EAAA;"}