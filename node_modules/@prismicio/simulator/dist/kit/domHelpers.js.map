{"version":3,"file":"domHelpers.js","sources":["../../../src/kit/domHelpers.ts"],"sourcesContent":["export const simulatorClass = \"slice-simulator\";\nexport const simulatorRootClass = \"slice-simulator--root\";\n\nexport const getSimulatorDOM = (): Element | null => {\n\treturn document.querySelector(`.${simulatorClass}`);\n};\n\nexport const getSimulatorRootDOM = (): Element | null => {\n\treturn document.querySelector(`.${simulatorRootClass}`);\n};\n\nexport const getSliceZoneDOM = (\n\texpectedNumberOfChildren: number,\n): Element | null => {\n\t// If SliceZone has been tagged (#5)\n\tlet node = document.querySelector(`.${simulatorClass} [data-slice-zone]`);\n\tif (node) {\n\t\tif (node.children.length !== expectedNumberOfChildren) {\n\t\t\tconsole.warn(\n\t\t\t\t`Flagged SliceZone has an unexpected number of children, found ${node.children.length} but expected ${expectedNumberOfChildren}. This might lead to unexpected behaviors. Are you sure you tagged the right element?`,\n\t\t\t);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t// Start searching\n\tnode = document.querySelector(`.${simulatorClass} .${simulatorRootClass}`);\n\n\tif (!node) {\n\t\treturn null;\n\t}\n\n\tconst searchDepth = 5;\n\tfor (let i = 0; i < searchDepth; i++) {\n\t\tif (node.children.length === expectedNumberOfChildren) {\n\t\t\t// Return the first node that matches the expected number of children\n\t\t\treturn node;\n\t\t} else if (node.children.length) {\n\t\t\t// Continue searching if current node has children\n\t\t\tnode = node.children[0];\n\t\t} else {\n\t\t\t// Stop searching if current node has no children\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Failed to find SliceZone\n\treturn null;\n};\n\nexport const getActiveSliceDOM = (\n\t$sliceZone: Element,\n\tmouse: { x: number; y: number },\n): Element | null => {\n\t// Raycast cursor position on DOM\n\tconst raycast = document.elementsFromPoint(mouse.x, mouse.y).reverse();\n\n\t// Find SliceZone in raycast\n\tconst sliceZoneIndex = raycast.indexOf($sliceZone);\n\n\t// SliceZone is not part of raycast\n\tif (sliceZoneIndex === -1) {\n\t\treturn null;\n\t}\n\n\tconst $slice = raycast[sliceZoneIndex + 1];\n\n\t// Slice is not part of raycast\n\tif (!$slice) {\n\t\treturn null;\n\t}\n\n\treturn $slice;\n};\n"],"names":[],"mappings":"AAAO,MAAM,iBAAiB;AACvB,MAAM,qBAAqB;AAE3B,MAAM,kBAAkB,MAAqB;AAC5C,SAAA,SAAS,cAAc,IAAI,gBAAgB;AACnD;AAEO,MAAM,sBAAsB,MAAqB;AAChD,SAAA,SAAS,cAAc,IAAI,oBAAoB;AACvD;AAEa,MAAA,kBAAkB,CAC9B,6BACmB;AAEnB,MAAI,OAAO,SAAS,cAAc,IAAI,kCAAkC;AACxE,MAAI,MAAM;AACL,QAAA,KAAK,SAAS,WAAW,0BAA0B;AACtD,cAAQ,KACP,iEAAiE,KAAK,SAAS,uBAAuB,+GAA+G;AAAA,IAEtN;AAEM,WAAA;AAAA,EACP;AAGD,SAAO,SAAS,cAAc,IAAI,mBAAmB,oBAAoB;AAEzE,MAAI,CAAC,MAAM;AACH,WAAA;AAAA,EACP;AAED,QAAM,cAAc;AACpB,WAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACjC,QAAA,KAAK,SAAS,WAAW,0BAA0B;AAE/C,aAAA;AAAA,IAAA,WACG,KAAK,SAAS,QAAQ;AAEzB,aAAA,KAAK,SAAS,CAAC;AAAA,IAAA,OAChB;AAEN;AAAA,IACA;AAAA,EACD;AAGM,SAAA;AACR;AAEa,MAAA,oBAAoB,CAChC,YACA,UACmB;AAEb,QAAA,UAAU,SAAS,kBAAkB,MAAM,GAAG,MAAM,CAAC,EAAE;AAGvD,QAAA,iBAAiB,QAAQ,QAAQ,UAAU;AAGjD,MAAI,mBAAmB,IAAI;AACnB,WAAA;AAAA,EACP;AAEK,QAAA,SAAS,QAAQ,iBAAiB,CAAC;AAGzC,MAAI,CAAC,QAAQ;AACL,WAAA;AAAA,EACP;AAEM,SAAA;AACR;"}