var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class EventEmitter {
  constructor() {
    __publicField(this, "_listeners", {});
  }
  on(event, listener, key = null) {
    this._listeners[event] = [
      ...this._listeners[event] ?? [],
      [listener, key]
    ];
  }
  off(event, listenerOrKey) {
    this._listeners[event] = (this._listeners[event] ?? []).filter(([listener, key]) => typeof listenerOrKey === "function" ? listener !== listenerOrKey : key !== listenerOrKey);
  }
  emit(event, payload) {
    (this._listeners[event] ?? []).forEach((listener) => listener[0](payload));
  }
}
export {
  EventEmitter
};
//# sourceMappingURL=EventEmitter.js.map
