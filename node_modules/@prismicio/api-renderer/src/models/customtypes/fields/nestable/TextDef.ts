import { Text } from "@prismicio/types-internal/lib/customtypes"
import { either } from "fp-ts"
import { pipe } from "fp-ts/lib/function"
import * as t from "io-ts"

import { isFieldDef, WithKey } from "../../utils"

const codec = t.strict({
	text: t.string,
})

export const TextDef = new t.Type<WithKey<Text>>(
	"TextDef",
	(u: unknown): u is WithKey<Text> => isFieldDef(u) && Text.is(u.def),
	(u: unknown) => {
		return pipe(
			codec.decode(u),
			either.map(
				({ text }): WithKey<Text> => ({
					key: text,
					def: {
						type: "Text",
					},
				}),
			),
		)
	},
	(n) => n,
)
