import { either } from "fp-ts"
import { pipe } from "fp-ts/lib/function"
import * as t from "io-ts"

const codec = t.partial({
	select: t.union([t.literal("any"), t.null, t.undefined]),
})

export type AnyLinkDef = {
	select: null
}
export const AnyLinkDef = new t.Type<AnyLinkDef>(
	"AnyLinkDef",
	(u: unknown): u is AnyLinkDef => (u as AnyLinkDef).select === "any",
	(u: unknown) => {
		return pipe(
			codec.decode(u),
			either.map(() => {
				return {
					select: null,
				}
			}),
		)
	},
	(l) => l,
)

export function defaultAnyLinkDef(): AnyLinkDef {
	return {
		select: null,
	}
}
