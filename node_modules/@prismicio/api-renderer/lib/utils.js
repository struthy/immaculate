"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEmpty = exports.formatDate = exports.formatDateTime = exports.filterDouble = exports.writeEmptyStringOrNull = exports.renderIfNoFetchOrFetchDefined = void 0;
const tslib_1 = require("tslib");
const O = tslib_1.__importStar(require("fp-ts/lib/Option"));
function renderIfNoFetchOrFetchDefined(fetch, name, renderer) {
    if (fetch === undefined) {
        return renderer(undefined);
    }
    else {
        const f = fetch[name];
        if (f === undefined) {
            return O.none;
        }
        else {
            return renderer(f);
        }
    }
}
exports.renderIfNoFetchOrFetchDefined = renderIfNoFetchOrFetchDefined;
function writeEmptyStringOrNull(s, emptyStringInsteadOfNull) {
    if (s === null || s === undefined) {
        return emptyStringInsteadOfNull ? "" : null;
    }
    else {
        return s;
    }
}
exports.writeEmptyStringOrNull = writeEmptyStringOrNull;
function filterDouble(value) {
    if (value === "") {
        return null;
    }
    const result = Number(value);
    return Number.isNaN(result) ? null : result;
}
exports.filterDouble = filterDouble;
function formatDateTime(date) {
    return date.toISOString().replace(/\.\d{3}Z$/, "+0000");
}
exports.formatDateTime = formatDateTime;
function formatDate(date) {
    return date.toISOString().replace(/T.*/, "");
}
exports.formatDate = formatDate;
function isEmpty(obj) {
    for (const _x in obj) {
        return false;
    }
    return true;
}
exports.isEmpty = isEmpty;
