"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BROKEN_CUSTOM_TYPE = void 0;
const models_1 = require("../../../models");
exports.BROKEN_CUSTOM_TYPE = "broken_type";
function brokenLinkV2(id) {
    return {
        id: id,
        type: exports.BROKEN_CUSTOM_TYPE,
        tags: [],
        isBroken: true,
    };
}
function brokenLinkV1(id) {
    return {
        value: brokenLinkV2(id),
    };
}
const DocumentLinkRenderer = (ctx) => ({
    renderV1(link, fetch) {
        //todo check fetch type
        try {
            const id = ctx.Extension.DocEncoder.encodeDocId(link.id, fetch === null || fetch === void 0 ? void 0 : fetch.uuid);
            return {
                type: "Link.document",
                value: ctx.Extension.encoders.documentLinks.encode(id),
            };
        }
        catch (e) {
            return brokenLinkV1(link.id);
        }
    },
    renderV2(_def, link, fetch) {
        //todo check fetch type
        try {
            const id = ctx.Extension.DocEncoder.encodeDocId(link.id, fetch === null || fetch === void 0 ? void 0 : fetch.uuid);
            return ctx.Extension.encoders.documentLinks.encode(id);
        }
        catch (e) {
            return brokenLinkV2(link.id);
        }
    },
    renderMocks(def, link) {
        const type = (models_1.DocumentLinkDef.is(def) && def.customtypes[0]) || "mock";
        return {
            id: link.id,
            link_type: "Document",
            type,
            tags: [],
            lang: "en-us",
            slug: null,
            first_publication_date: "1970-01-01T00:00:01+0000",
            last_publication_date: "1970-01-01T01:00:00+0000",
        };
    },
});
exports.default = DocumentLinkRenderer;
