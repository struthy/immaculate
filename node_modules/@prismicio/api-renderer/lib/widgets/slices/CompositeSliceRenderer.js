"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fetch_1 = require("../../models/fetch");
const utils_1 = require("../../utils");
const StaticWidgetRenderer_1 = tslib_1.__importDefault(require("../StaticWidgetRenderer"));
const CompositeSliceRenderer = (ctx) => ({
    renderV1(content, fetch) {
        var _a, _b;
        const repeatFetch = (_a = fetch === null || fetch === void 0 ? void 0 : fetch.repeat) === null || _a === void 0 ? void 0 : _a.fields;
        const nonRepeatFetch = (_b = fetch === null || fetch === void 0 ? void 0 : fetch.nonRepeat) === null || _b === void 0 ? void 0 : _b.fields;
        const itemsValue = content.repeat.flatMap((groupItem) => {
            const rendered = (0, StaticWidgetRenderer_1.default)(ctx).renderV1Object(groupItem.value, repeatFetch);
            if ((0, utils_1.isEmpty)(rendered)) {
                return [];
            }
            return [rendered];
        });
        const primaryValue = (0, StaticWidgetRenderer_1.default)(ctx).renderV1Object(content.nonRepeat, nonRepeatFetch);
        return {
            "non-repeat": primaryValue,
            repeat: itemsValue,
        };
    },
    renderV2(def, content, fetch) {
        var _a;
        const repeatFetch = fetch === undefined
            ? undefined
            : {
                TYPE: fetch_1.GroupType,
                name: def.type,
                fields: fetch.repeat.fields,
            };
        const nonRepeatFetch = (_a = fetch === null || fetch === void 0 ? void 0 : fetch.nonRepeat) === null || _a === void 0 ? void 0 : _a.fields;
        const itemsValue = (() => {
            return content.repeat.map((items) => {
                return (0, StaticWidgetRenderer_1.default)(ctx).renderV2Object(items.value, repeatFetch === null || repeatFetch === void 0 ? void 0 : repeatFetch.fields, def.repeat || {}, {
                    withFetch: "default",
                }, {
                    default: "render",
                    withFetch: "filter",
                    withFetchField: "render",
                });
            });
        })();
        const primaryValue = (() => {
            return (0, StaticWidgetRenderer_1.default)(ctx).renderV2Object(content.nonRepeat, nonRepeatFetch, def["non-repeat"] || {}, {
                withFetch: "default",
            }, {
                default: "render",
                withFetch: "filter",
                withFetchField: "render",
            });
        })();
        return {
            primary: primaryValue,
            items: itemsValue,
        };
    },
    renderDefault(_def) {
        return {};
    },
    renderMocks(def, content) {
        const itemsValue = content.repeat.map((items) => {
            return (0, StaticWidgetRenderer_1.default)(ctx).renderMocksObject(items.value, def.repeat || {});
        });
        const primaryValue = (0, StaticWidgetRenderer_1.default)(ctx).renderMocksObject(content.nonRepeat, def["non-repeat"] || {});
        return {
            primary: primaryValue,
            items: itemsValue,
        };
    },
});
exports.default = CompositeSliceRenderer;
