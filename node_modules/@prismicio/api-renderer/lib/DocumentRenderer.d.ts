import { WidgetContent } from "@prismicio/types-internal/lib/content";
import { StaticWidget } from "@prismicio/types-internal/lib/customtypes";
import { type ApiDocument, type LinkResolver, type RelatedDocument, type RenderContext, CustomTypeDef, Fetch } from "./models";
declare const DocumentRenderer: (ctx: RenderContext) => {
    renderV1: (doc: ApiDocument, content: [string, WidgetContent][], masterLang: string, searchURL: string, i18n: {
        [k: string]: ({
            typ: string;
            id: string;
            language: string;
            groupLangId: string;
        } & {
            uid?: string | null | undefined;
        })[];
    }, withMeta: boolean, brokenRoute?: string, linkResolver?: LinkResolver, fetchDoc?: Fetch.Doc) => {
        title?: string | undefined;
        description?: string | undefined;
        imageURL?: string | null | undefined;
        id: string;
        uid: string | null;
        url: string | null;
        type: string;
        href: string;
        tags: string[];
        first_publication_date: string | null;
        last_publication_date: string | null;
        slugs: readonly string[];
        linked_documents: never[];
        lang: string;
        alternate_languages: object[];
        data: unknown;
    };
    renderWidgetV1: (content: WidgetContent, fetchOpt: Fetch.Field | undefined) => unknown;
    renderWidgetV2: (mask: StaticWidget, content: WidgetContent, fetchOpt: Fetch.Field | undefined) => unknown;
    renderV2: (mask: CustomTypeDef, doc: ApiDocument, masterLang: string, content: [string, WidgetContent][], searchURL: string, i18n: {
        [k: string]: ({
            typ: string;
            id: string;
            language: string;
            groupLangId: string;
        } & {
            uid?: string | null | undefined;
        })[];
    }, withMeta: boolean, brokenRoute?: string, linkResolver?: LinkResolver, fetchDoc?: Fetch.Doc) => {
        title?: string | undefined;
        description?: string | undefined;
        imageURL?: string | null | undefined;
        id: string;
        uid: string | null;
        url: string | null;
        type: string;
        href: string;
        tags: string[];
        first_publication_date: string | null;
        last_publication_date: string | null;
        slugs: readonly string[];
        linked_documents: never[];
        lang: string;
        alternate_languages: object[];
        data: {
            [_: string]: unknown;
        };
    };
    renderMocks: (mask: CustomTypeDef, content: [string, WidgetContent][]) => {
        id: string;
        uid: string | undefined;
        url: string | null;
        type: string;
        href: null;
        tags: never[];
        first_publication_date: string;
        last_publication_date: string;
        slugs: never[];
        linked_documents: never[];
        lang: string;
        alternate_languages: never[];
        data: {
            [_: string]: unknown;
        };
    };
    renderDefaultWidget: (widgetDef: StaticWidget) => unknown;
};
export default DocumentRenderer;
