"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.customParam = exports.langParam = exports.uidParam = exports.staticParam = exports.LinkResolver = exports.Rule = void 0;
const tslib_1 = require("tslib");
const t = tslib_1.__importStar(require("io-ts"));
const CustomParam = t.type({
    isOptional: t.boolean,
    name: t.string,
    type: t.literal("custom"),
});
const UIDParam = t.type({
    isOptional: t.boolean,
    type: t.literal("uid"),
});
const LangParam = t.type({
    isOptional: t.boolean,
    type: t.literal("lang"),
});
//TODO: think about removing dynamic param
const DynamicParam = t.union([CustomParam, UIDParam, LangParam]);
const StaticParam = t.type({
    value: t.string,
    type: t.literal("static"),
});
const URLParam = t.union([StaticParam, DynamicParam]);
const URLPattern = t.type({
    trailingSlash: t.boolean,
    params: t.array(URLParam),
});
const Relation = t.type({
    customTypeID: t.string,
    relationName: t.string,
    targetCustomTypeID: t.string,
});
const URLResolver = t.record(t.string, t.array(Relation));
exports.Rule = t.type({
    pattern: URLPattern,
    resolvers: URLResolver,
});
exports.LinkResolver = t.record(t.string, t.record(t.string, t.record(t.string, exports.Rule)));
function staticParam(value) {
    return {
        value,
        type: "static",
    };
}
exports.staticParam = staticParam;
function uidParam(isOptional) {
    return {
        isOptional,
        type: "uid",
    };
}
exports.uidParam = uidParam;
function langParam(isOptional) {
    return {
        isOptional,
        type: "lang",
    };
}
exports.langParam = langParam;
function customParam(name, isOptional) {
    return {
        name,
        isOptional,
        type: "custom",
    };
}
exports.customParam = customParam;
