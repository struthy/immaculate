"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupDef = exports.NestedGroupDef = void 0;
const tslib_1 = require("tslib");
const customtypes_1 = require("@prismicio/types-internal/lib/customtypes");
const fp_ts_1 = require("fp-ts");
const function_1 = require("fp-ts/lib/function");
const t = tslib_1.__importStar(require("io-ts"));
const utils_1 = require("../utils");
const NestableDef_1 = require("./nestable/NestableDef");
exports.NestedGroupDef = createGroupDef(customtypes_1.NestedGroup, NestableDef_1.NestableDef);
exports.GroupDef = createGroupDef(customtypes_1.Group, t.union([NestableDef_1.NestableDef, exports.NestedGroupDef]));
const GroupDefType = "Group";
function createGroupDef(groupCodec, fieldsDef) {
    return new t.Type("GroupDef", (u) => (0, utils_1.isFieldDef)(u) && groupCodec.is(u.def), (u) => {
        const codec = t.strict({
            name: t.string,
            fields: t.array(fieldsDef),
        });
        return (0, function_1.pipe)(codec.decode(u), fp_ts_1.either.map(({ name, fields }) => ({
            key: name,
            def: {
                type: GroupDefType,
                config: {
                    fields: fields.reduce((acc, field) => ({ ...acc, [field.key]: field.def }), {}),
                },
            },
        })));
    }, (n) => n);
}
