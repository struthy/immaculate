{"version":3,"file":"sentryFrontendTunnel.cjs","sources":["../../../src/lib/sentryFrontendTunnel.ts"],"sourcesContent":["// We tunnel the Sentry calls via the Express server to avoid ad blockers\n// adapted from https://github.com/getsentry/examples/blob/0e2f17c5914f28ccae931e51801b7d9760d34cbe/tunneling/nextjs/pages/api/tunnel.js\n\nimport type { RequestHandler } from \"express\";\nimport * as Sentry from \"@sentry/node\";\nimport fetch from \"node-fetch\";\n\nexport const sentryFrontendTunnel: RequestHandler = async (req, res) => {\n\ttry {\n\t\tconst envelope = req.body;\n\n\t\tif (envelope) {\n\t\t\tconst pieces = envelope.split(\"\\n\");\n\t\t\tconst header = JSON.parse(pieces[0]);\n\t\t\tconst { host, pathname } = new URL(header.dsn);\n\n\t\t\t// Remove start or end slashes from the pathname\n\t\t\tconst projectId = pathname?.replace(/^\\/|\\/$/g, \"\") ?? \"\";\n\n\t\t\tconst sentryUrl = `https://${host}/api/${projectId}/envelope/`;\n\n\t\t\tconst response = await fetch(sentryUrl, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: envelope,\n\t\t\t});\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorMessage = await response.text();\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\tSentry.captureException(e);\n\t} finally {\n\t\treturn res.status(202).send();\n\t}\n};\n"],"names":["fetch","Sentry.captureException"],"mappings":";;;;AAOa,MAAA,uBAAuC,OAAO,KAAK,QAAO;AAClE,MAAA;AACH,UAAM,WAAW,IAAI;AAErB,QAAI,UAAU;AACP,YAAA,SAAS,SAAS,MAAM,IAAI;AAClC,YAAM,SAAS,KAAK,MAAM,OAAO,CAAC,CAAC;AACnC,YAAM,EAAE,MAAM,aAAa,IAAI,IAAI,OAAO,GAAG;AAG7C,YAAM,aAAY,qCAAU,QAAQ,YAAY,QAAO;AAEjD,YAAA,YAAY,WAAW,YAAY;AAEnC,YAAA,WAAW,MAAMA,MAAA,QAAM,WAAW;AAAA,QACvC,QAAQ;AAAA,QACR,MAAM;AAAA,MAAA,CACN;AAEG,UAAA,CAAC,SAAS,IAAI;AACX,cAAA,eAAe,MAAM,SAAS;AAC9B,cAAA,IAAI,MAAM,YAAY;AAAA,MAC5B;AAAA,IACD;AAAA,WACO;AACRC,+BAAwB,CAAC;AAAA,EAAA,UAChB;AACT,WAAO,IAAI,OAAO,GAAG,EAAE,KAAI;AAAA,EAC3B;AACF;;"}