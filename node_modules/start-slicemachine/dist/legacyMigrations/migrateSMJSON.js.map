{"version":3,"file":"migrateSMJSON.js","sources":["../../../src/legacyMigrations/migrateSMJSON.ts"],"sourcesContent":["import * as path from \"node:path\";\nimport * as fs from \"node:fs/promises\";\n\nimport chalk from \"chalk\";\nimport semver from \"semver\";\n\nimport { SliceMachineManager, SliceMachineConfig } from \"@slicemachine/manager\";\n\nimport { locateFileUpward } from \"../lib/locateFileUpward\";\nimport {\n\tFramework,\n\tFRAMEWORKS,\n\tUNIVERSAL,\n\tdetectFramework,\n} from \"./detectFramework\";\n\nexport const migrateSMJSON = async (\n\tmanager: SliceMachineManager,\n): Promise<void> => {\n\tlet smJSONPath: string | undefined;\n\n\ttry {\n\t\tsmJSONPath = await locateFileUpward(\"sm.json\", { startDir: manager.cwd });\n\t} catch (error) {\n\t\t// noop - sm.json does not exists\n\t}\n\n\t// Exit if sm.json is not found\n\tif (!smJSONPath) {\n\t\treturn;\n\t}\n\n\tconst smJSON = JSON.parse(await fs.readFile(smJSONPath, \"utf-8\"));\n\n\t// Exit if sm.json was migrated\n\tif (\"//\" in smJSON && !(\"libraries\" in smJSON)) {\n\t\t// eslint-disable-next-line no-console\n\t\treturn console.log(`\n${chalk.bgYellow(` ${chalk.black(\"WARN\")} `)} ${chalk.magenta(\n\t\t\t\"sm.json\",\n\t\t)} is deprecated!\n\n  - If you were importing values from this file, please now import\n    them from ${chalk.magenta(\"slicemachine.config.json\")}.\n    You can safely delete this file after to suppress this warning.\n\n  - If you weren't, you can safely delete this file to suppress\n    this warning.\n`);\n\t}\n\n\t// TODO: Decide on how to handle really old migrations (1+ year)\n\t// Warn on old latest\n\tif (smJSON._latest && !semver.satisfies(smJSON._latest, \">0.3.0\")) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(\n\t\t\t`\\n${chalk.bgYellow(` ${chalk.black(\"WARN\")} `)} ${chalk.magenta(\n\t\t\t\t\"sm.json\",\n\t\t\t)} was last migrated before ${chalk.magenta(\n\t\t\t\t\"0.3.0\",\n\t\t\t)}, migration might be incomplete`,\n\t\t);\n\t}\n\n\t// eslint-disable-next-line no-console\n\tconsole.log(\n\t\t`\\n${chalk.bgCyan(\n\t\t\t` ${chalk.black(\"INFO\")} `,\n\t\t)} Detected deprecated ${chalk.magenta(\"sm.json\")}, beginning migration...`,\n\t);\n\n\t// Define new slicemachine.config.json\n\tlet framework: Framework;\n\tif (smJSON.framework) {\n\t\tframework = FRAMEWORKS[smJSON.framework] || UNIVERSAL;\n\t} else {\n\t\tframework = await detectFramework(path.dirname(smJSONPath));\n\t}\n\n\tconst libraries: string[] =\n\t\tsmJSON.libraries.map((library: string) => {\n\t\t\t// Migrate `@/` and `~/` libraries to `./`\n\t\t\tif (/^[@~]\\//.test(library)) {\n\t\t\t\treturn library.replace(/^[@~]\\//, \"./\");\n\t\t\t}\n\n\t\t\treturn library;\n\t\t}) || [];\n\n\tconst sliceMachineConfig: SliceMachineConfig = {\n\t\tapiEndpoint: smJSON.apiEndpoint,\n\t\t// Infer repository name from API endpoint\n\t\trepositoryName: new URL(smJSON.apiEndpoint).host.split(\".\")[0],\n\t\tadapter: framework.adapterName,\n\t\tlibraries,\n\t};\n\n\tif (smJSON.localSliceSimulatorURL) {\n\t\tsliceMachineConfig.localSliceSimulatorURL = smJSON.localSliceSimulatorURL;\n\t}\n\n\t// Write new slicemachine.config.json\n\tconst sliceMachineConfigPath =\n\t\tawait manager.project.suggestSliceMachineConfigPath();\n\n\tawait manager.project.writeSliceMachineConfig({\n\t\tconfig: sliceMachineConfig,\n\t\tpath: sliceMachineConfigPath,\n\t});\n\n\t// Update old sm.json\n\tawait fs.writeFile(\n\t\tsmJSONPath,\n\t\tJSON.stringify(\n\t\t\t{\n\t\t\t\t\"//\": \"sm.json is deprecated, if you were importing values from this file please now import them from slicemachine.config.json, else you can safely delete this file\",\n\t\t\t\t// We keep API endpoint in it because users might have been importing it from this file.\n\t\t\t\tapiEndpoint: smJSON.apiEndpoint,\n\t\t\t},\n\t\t\tundefined,\n\t\t\t\"\t\",\n\t\t),\n\t);\n\n\t// Installing adapter\n\ttry {\n\t\tconst { execaProcess } = await manager.project.installDependencies({\n\t\t\tdependencies: {\n\t\t\t\t[framework.adapterName]: framework.adapterVersion,\n\t\t\t},\n\t\t\tdev: true,\n\t\t\tlog: () => {\n\t\t\t\t/* ... */\n\t\t\t},\n\t\t});\n\t\tawait execaProcess;\n\t} catch (error) {\n\t\tif (\n\t\t\terror instanceof Error &&\n\t\t\t\"shortMessage\" in error &&\n\t\t\t\"stderr\" in error\n\t\t) {\n\t\t\tthrow new Error(`${error.shortMessage}\\n\\n${error.stderr}`, {\n\t\t\t\tcause: error,\n\t\t\t});\n\t\t}\n\t\tthrow error;\n\t}\n\n\tif (framework.runProjectInitHook) {\n\t\tawait manager.plugins.initPlugins();\n\t\tawait manager.project.initProject({\n\t\t\tlog: () => {\n\t\t\t\t/* Init silently, will throw if any error */\n\t\t\t},\n\t\t});\n\t}\n\n\t// Warn about old sm.json\n\t// eslint-disable-next-line no-console\n\treturn console.log(`\n${chalk.bgCyan(` ${chalk.black(\"INFO\")} `)} Your ${chalk.magenta(\n\t\t\"sm.json\",\n\t)} content was automatically migrated to ${chalk.magenta(\n\t\t\"slicemachine.config.json\",\n\t)}\n\n  - If you were importing values from this file, please now import\n    them from ${chalk.magenta(\"slicemachine.config.json\")}.\n    You can safely delete this file after.\n\n  - If you weren't, you can safely delete this file.\n`);\n};\n"],"names":[],"mappings":";;;;;;AAgBa,MAAA,gBAAgB,OAC5B,YACkB;AACd,MAAA;AAEA,MAAA;AACH,iBAAa,MAAM,iBAAiB,WAAW,EAAE,UAAU,QAAQ,KAAK;AAAA,WAChE;EAER;AAGD,MAAI,CAAC,YAAY;AAChB;AAAA,EACA;AAEK,QAAA,SAAS,KAAK,MAAM,MAAM,GAAG,SAAS,YAAY,OAAO,CAAC;AAGhE,MAAI,QAAQ,UAAU,EAAE,eAAe,SAAS;AAE/C,WAAO,QAAQ,IAAI;AAAA,EACnB,MAAM,SAAS,IAAI,MAAM,MAAM,MAAM,IAAI,KAAK,MAAM,QACnD,SAAS;AAAA;AAAA;AAAA,gBAII,MAAM,QAAQ,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA,CAKvD;AAAA,EACC;AAIG,MAAA,OAAO,WAAW,CAAC,OAAO,UAAU,OAAO,SAAS,QAAQ,GAAG;AAElE,YAAQ,IACP;AAAA,EAAK,MAAM,SAAS,IAAI,MAAM,MAAM,MAAM,IAAI,KAAK,MAAM,QACxD,SAAS,8BACoB,MAAM,QACnC,OAAO,kCAC0B;AAAA,EAEnC;AAGD,UAAQ,IACP;AAAA,EAAK,MAAM,OACV,IAAI,MAAM,MAAM,MAAM,IAAI,yBACF,MAAM,QAAQ,SAAS,2BAA2B;AAIxE,MAAA;AACJ,MAAI,OAAO,WAAW;AACT,gBAAA,WAAW,OAAO,SAAS,KAAK;AAAA,EAAA,OACtC;AACN,gBAAY,MAAM,gBAAgB,KAAK,QAAQ,UAAU,CAAC;AAAA,EAC1D;AAED,QAAM,YACL,OAAO,UAAU,IAAI,CAAC,YAAmB;AAEpC,QAAA,UAAU,KAAK,OAAO,GAAG;AACrB,aAAA,QAAQ,QAAQ,WAAW,IAAI;AAAA,IACtC;AAEM,WAAA;AAAA,EACP,CAAA,KAAK,CAAA;AAEP,QAAM,qBAAyC;AAAA,IAC9C,aAAa,OAAO;AAAA;AAAA,IAEpB,gBAAgB,IAAI,IAAI,OAAO,WAAW,EAAE,KAAK,MAAM,GAAG,EAAE,CAAC;AAAA,IAC7D,SAAS,UAAU;AAAA,IACnB;AAAA,EAAA;AAGD,MAAI,OAAO,wBAAwB;AAClC,uBAAmB,yBAAyB,OAAO;AAAA,EACnD;AAGD,QAAM,yBACL,MAAM,QAAQ,QAAQ,8BAA6B;AAE9C,QAAA,QAAQ,QAAQ,wBAAwB;AAAA,IAC7C,QAAQ;AAAA,IACR,MAAM;AAAA,EAAA,CACN;AAGD,QAAM,GAAG,UACR,YACA,KAAK,UACJ;AAAA,IACC,MAAM;AAAA;AAAA,IAEN,aAAa,OAAO;AAAA,EAAA,GAErB,QACA,GAAG,CACH;AAIE,MAAA;AACH,UAAM,EAAE,aAAY,IAAK,MAAM,QAAQ,QAAQ,oBAAoB;AAAA,MAClE,cAAc;AAAA,QACb,CAAC,UAAU,WAAW,GAAG,UAAU;AAAA,MACnC;AAAA,MACD,KAAK;AAAA,MACL,KAAK,MAAK;AAAA,MAEV;AAAA,IAAA,CACA;AACK,UAAA;AAAA,WACE;AACR,QACC,iBAAiB,SACjB,kBAAkB,SAClB,YAAY,OACX;AACK,YAAA,IAAI,MAAM,GAAG,MAAM;AAAA;AAAA,EAAmB,MAAM,UAAU;AAAA,QAC3D,OAAO;AAAA,MAAA,CACP;AAAA,IACD;AACK,UAAA;AAAA,EACN;AAED,MAAI,UAAU,oBAAoB;AAC3B,UAAA,QAAQ,QAAQ;AAChB,UAAA,QAAQ,QAAQ,YAAY;AAAA,MACjC,KAAK,MAAK;AAAA,MAEV;AAAA,IAAA,CACA;AAAA,EACD;AAID,SAAO,QAAQ,IAAI;AAAA,EAClB,MAAM,OAAO,IAAI,MAAM,MAAM,MAAM,IAAI,UAAU,MAAM,QACvD,SAAS,2CACiC,MAAM,QAChD,0BAA0B;AAAA;AAAA;AAAA,gBAIZ,MAAM,QAAQ,0BAA0B;AAAA;AAAA;AAAA;AAAA,CAIvD;AACD;"}