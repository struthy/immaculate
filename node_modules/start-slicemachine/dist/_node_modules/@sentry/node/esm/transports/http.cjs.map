{"version":3,"file":"http.cjs","sources":["../../../../../../../../node_modules/@sentry/node/esm/transports/http.js"],"sourcesContent":["import { _nullishCoalesce } from '@sentry/utils';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { Readable } from 'stream';\nimport { URL } from 'url';\nimport { createGzip } from 'zlib';\nimport { createTransport } from '@sentry/core';\nimport { consoleSandbox } from '@sentry/utils';\nimport { HttpsProxyAgent } from '../proxy/index.js';\n\n// Estimated maximum size for reasonable standalone event\nconst GZIP_THRESHOLD = 1024 * 32;\n\n/**\n * Gets a stream from a Uint8Array or string\n * Readable.from is ideal but was added in node.js v12.3.0 and v10.17.0\n */\nfunction streamFromBody(body) {\n  return new Readable({\n    read() {\n      this.push(body);\n      this.push(null);\n    },\n  });\n}\n\n/**\n * Creates a Transport that uses native the native 'http' and 'https' modules to send events to Sentry.\n */\nfunction makeNodeTransport(options) {\n  let urlSegments;\n\n  try {\n    urlSegments = new URL(options.url);\n  } catch (e) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used.',\n      );\n    });\n    return createTransport(options, () => Promise.resolve({}));\n  }\n\n  const isHttps = urlSegments.protocol === 'https:';\n\n  // Proxy prioritization: http => `options.proxy` | `process.env.http_proxy`\n  // Proxy prioritization: https => `options.proxy` | `process.env.https_proxy` | `process.env.http_proxy`\n  const proxy = applyNoProxyOption(\n    urlSegments,\n    options.proxy || (isHttps ? process.env.https_proxy : undefined) || process.env.http_proxy,\n  );\n\n  const nativeHttpModule = isHttps ? https : http;\n  const keepAlive = options.keepAlive === undefined ? false : options.keepAlive;\n\n  // TODO(v7): Evaluate if we can set keepAlive to true. This would involve testing for memory leaks in older node\n  // versions(>= 8) as they had memory leaks when using it: #2555\n  const agent = proxy\n    ? (new HttpsProxyAgent(proxy) )\n    : new nativeHttpModule.Agent({ keepAlive, maxSockets: 30, timeout: 2000 });\n\n  const requestExecutor = createRequestExecutor(options, _nullishCoalesce(options.httpModule, () => ( nativeHttpModule)), agent);\n  return createTransport(options, requestExecutor);\n}\n\n/**\n * Honors the `no_proxy` env variable with the highest priority to allow for hosts exclusion.\n *\n * @param transportUrl The URL the transport intends to send events to.\n * @param proxy The client configured proxy.\n * @returns A proxy the transport should use.\n */\nfunction applyNoProxyOption(transportUrlSegments, proxy) {\n  const { no_proxy } = process.env;\n\n  const urlIsExemptFromProxy =\n    no_proxy &&\n    no_proxy\n      .split(',')\n      .some(\n        exemption => transportUrlSegments.host.endsWith(exemption) || transportUrlSegments.hostname.endsWith(exemption),\n      );\n\n  if (urlIsExemptFromProxy) {\n    return undefined;\n  } else {\n    return proxy;\n  }\n}\n\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createRequestExecutor(\n  options,\n  httpModule,\n  agent,\n) {\n  const { hostname, pathname, port, protocol, search } = new URL(options.url);\n  return function makeRequest(request) {\n    return new Promise((resolve, reject) => {\n      let body = streamFromBody(request.body);\n\n      const headers = { ...options.headers };\n\n      if (request.body.length > GZIP_THRESHOLD) {\n        headers['content-encoding'] = 'gzip';\n        body = body.pipe(createGzip());\n      }\n\n      const req = httpModule.request(\n        {\n          method: 'POST',\n          agent,\n          headers,\n          hostname,\n          path: `${pathname}${search}`,\n          port,\n          protocol,\n          ca: options.caCerts,\n        },\n        res => {\n          res.on('data', () => {\n            // Drain socket\n          });\n\n          res.on('end', () => {\n            // Drain socket\n          });\n\n          res.setEncoding('utf8');\n\n          // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n          // https://nodejs.org/api/http.html#http_message_headers\n          const retryAfterHeader = _nullishCoalesce(res.headers['retry-after'], () => ( null));\n          const rateLimitsHeader = _nullishCoalesce(res.headers['x-sentry-rate-limits'], () => ( null));\n\n          resolve({\n            statusCode: res.statusCode,\n            headers: {\n              'retry-after': retryAfterHeader,\n              'x-sentry-rate-limits': Array.isArray(rateLimitsHeader) ? rateLimitsHeader[0] : rateLimitsHeader,\n            },\n          });\n        },\n      );\n\n      req.on('error', reject);\n      body.pipe(req);\n    });\n  };\n}\n\nexport { makeNodeTransport };\n//# sourceMappingURL=http.js.map\n"],"names":["Readable","URL","consoleSandbox","createTransport","https","http","HttpsProxyAgent","_nullishCoalesce","createGzip"],"mappings":"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","x_google_ignoreList":[0]}