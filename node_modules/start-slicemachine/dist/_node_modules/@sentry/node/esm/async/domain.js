import * as domain from "domain";
import { setAsyncContextStrategy, ensureHubOnCarrier, getHubFromCarrier, setHubOnCarrier } from './../../_node_modules/@sentry/core/esm/hub.js';
import { _optionalChain } from './../../_node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js';
function getActiveDomain() {
  return domain.active;
}
function getCurrentHub() {
  const activeDomain = getActiveDomain();
  if (!activeDomain) {
    return void 0;
  }
  ensureHubOnCarrier(activeDomain);
  return getHubFromCarrier(activeDomain);
}
function createNewHub(parent) {
  const carrier = {};
  ensureHubOnCarrier(carrier, parent);
  return getHubFromCarrier(carrier);
}
function runWithAsyncContext(callback, options) {
  const activeDomain = getActiveDomain();
  if (activeDomain && _optionalChain([options, "optionalAccess", (_) => _.reuseExisting])) {
    return callback();
  }
  const local = domain.create();
  const parentHub = activeDomain ? getHubFromCarrier(activeDomain) : void 0;
  const newHub = createNewHub(parentHub);
  setHubOnCarrier(local, newHub);
  return local.bind(() => {
    return callback();
  })();
}
function setDomainAsyncContextStrategy() {
  setAsyncContextStrategy({ getCurrentHub, runWithAsyncContext });
}
export {
  setDomainAsyncContextStrategy
};
//# sourceMappingURL=domain.js.map
