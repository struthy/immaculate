"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const os = require("os");
const util = require("util");
const serverRuntimeClient = require('./../_node_modules/@sentry/core/esm/server-runtime-client.cjs');
const sdkMetadata = require('./../_node_modules/@sentry/core/esm/utils/sdkMetadata.cjs');
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const os__namespace = /* @__PURE__ */ _interopNamespaceDefault(os);
class NodeClient extends serverRuntimeClient.ServerRuntimeClient {
  /**
   * Creates a new Node SDK instance.
   * @param options Configuration options for this SDK.
   */
  constructor(options) {
    sdkMetadata.applySdkMetadata(options, "node");
    options.transportOptions = {
      textEncoder: new util.TextEncoder(),
      ...options.transportOptions
    };
    const clientOptions = {
      ...options,
      platform: "node",
      runtime: { name: "node", version: global.process.version },
      serverName: options.serverName || global.process.env.SENTRY_NAME || os__namespace.hostname()
    };
    super(clientOptions);
  }
}
exports.NodeClient = NodeClient;
//# sourceMappingURL=client.cjs.map
