import { existsSync, readFileSync } from "fs";
import { dirname, join } from "path";
import { defineIntegration, convertIntegrationFnToClass } from './../../_node_modules/@sentry/core/esm/integration.js';
let moduleCache;
const INTEGRATION_NAME = "Modules";
function getPaths() {
  try {
    return require.cache ? Object.keys(require.cache) : [];
  } catch (e) {
    return [];
  }
}
function collectModules() {
  const mainPaths = require.main && require.main.paths || [];
  const paths = getPaths();
  const infos = {};
  const seen = {};
  paths.forEach((path) => {
    let dir = path;
    const updir = () => {
      const orig = dir;
      dir = dirname(orig);
      if (!dir || orig === dir || seen[orig]) {
        return void 0;
      }
      if (mainPaths.indexOf(dir) < 0) {
        return updir();
      }
      const pkgfile = join(orig, "package.json");
      seen[orig] = true;
      if (!existsSync(pkgfile)) {
        return updir();
      }
      try {
        const info = JSON.parse(readFileSync(pkgfile, "utf8"));
        infos[info.name] = info.version;
      } catch (_oO) {
      }
    };
    updir();
  });
  return infos;
}
function _getModules() {
  if (!moduleCache) {
    moduleCache = collectModules();
  }
  return moduleCache;
}
const _modulesIntegration = () => {
  return {
    name: INTEGRATION_NAME,
    // TODO v8: Remove this
    setupOnce() {
    },
    // eslint-disable-line @typescript-eslint/no-empty-function
    processEvent(event) {
      event.modules = {
        ...event.modules,
        ..._getModules()
      };
      return event;
    }
  };
};
const modulesIntegration = defineIntegration(_modulesIntegration);
convertIntegrationFnToClass(INTEGRATION_NAME, modulesIntegration);
export {
  modulesIntegration
};
//# sourceMappingURL=modules.js.map
