{"version":3,"file":"errorhandling.js","sources":["../../../../../../../../../node_modules/@sentry/node/esm/integrations/utils/errorhandling.js"],"sourcesContent":["import { getClient } from '@sentry/core';\nimport { consoleSandbox, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../debug-build.js';\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nfunction logAndExitProcess(error) {\n  consoleSandbox(() => {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  });\n\n  const client = getClient();\n\n  if (client === undefined) {\n    DEBUG_BUILD && logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(\n    (result) => {\n      if (!result) {\n        DEBUG_BUILD && logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    },\n    error => {\n      DEBUG_BUILD && logger.error(error);\n    },\n  );\n}\n\nexport { logAndExitProcess };\n//# sourceMappingURL=errorhandling.js.map\n"],"names":["error"],"mappings":";;;AAIA,MAAM,2BAA2B;AAKjC,SAAS,kBAAkB,OAAO;AAChC,iBAAe,MAAM;AAEnB,YAAQ,MAAM,KAAK;AAAA,EACvB,CAAG;AAED,QAAM,SAAS;AAEf,MAAI,WAAW,QAAW;AACxB,mBAAe,OAAO,KAAK,4DAA4D;AACvF,WAAO,QAAQ,KAAK,CAAC;AAAA,EACtB;AAED,QAAM,UAAU,OAAO;AACvB,QAAM,UACH,WAAW,QAAQ,mBAAmB,QAAQ,kBAAkB,KAAK,QAAQ,mBAC9E;AACF,SAAO,MAAM,OAAO,EAAE;AAAA,IACpB,CAAC,WAAW;AACV,UAAI,CAAC,QAAQ;AACX,uBAAe,OAAO,KAAK,4EAA4E;AAAA,MACxG;AACD,aAAO,QAAQ,KAAK,CAAC;AAAA,IACtB;AAAA,IACD,CAAAA,WAAS;AACP,qBAAe,OAAO,MAAMA,MAAK;AAAA,IAClC;AAAA,EACL;AACA;","x_google_ignoreList":[0]}