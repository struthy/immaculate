"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const util = require("util");
const integration = require('./../../_node_modules/@sentry/core/esm/integration.cjs');
const console = require('./../../_node_modules/@sentry/utils/esm/instrument/console.cjs');
const exports$1 = require('./../../_node_modules/@sentry/core/esm/exports.cjs');
const severity = require('./../../_node_modules/@sentry/utils/esm/severity.cjs');
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const util__namespace = /* @__PURE__ */ _interopNamespaceDefault(util);
const INTEGRATION_NAME = "Console";
const _consoleIntegration = () => {
  return {
    name: INTEGRATION_NAME,
    // TODO v8: Remove this
    setupOnce() {
    },
    // eslint-disable-line @typescript-eslint/no-empty-function
    setup(client) {
      console.addConsoleInstrumentationHandler(({ args, level }) => {
        if (exports$1.getClient() !== client) {
          return;
        }
        exports$1.addBreadcrumb(
          {
            category: "console",
            level: severity.severityLevelFromString(level),
            message: util__namespace.format.apply(void 0, args)
          },
          {
            input: [...args],
            level
          }
        );
      });
    }
  };
};
const consoleIntegration = integration.defineIntegration(_consoleIntegration);
integration.convertIntegrationFnToClass(INTEGRATION_NAME, consoleIntegration);
exports.consoleIntegration = consoleIntegration;
//# sourceMappingURL=console.cjs.map
