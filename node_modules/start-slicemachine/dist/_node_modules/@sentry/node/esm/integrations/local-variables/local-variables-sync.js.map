{"version":3,"file":"local-variables-sync.js","sources":["../../../../../../../../../node_modules/@sentry/node/esm/integrations/local-variables/local-variables-sync.js"],"sourcesContent":["import { _optionalChain } from '@sentry/utils';\nimport { defineIntegration, convertIntegrationFnToClass, getClient } from '@sentry/core';\nimport { LRUMap, logger } from '@sentry/utils';\nimport { NODE_VERSION } from '../../nodeVersion.js';\nimport { createRateLimiter, hashFromStack, hashFrames, functionNamesMatch } from './common.js';\n\n/* eslint-disable max-lines */\n\n/** Creates a container for callbacks to be called sequentially */\nfunction createCallbackList(complete) {\n  // A collection of callbacks to be executed last to first\n  let callbacks = [];\n\n  let completedCalled = false;\n  function checkedComplete(result) {\n    callbacks = [];\n    if (completedCalled) {\n      return;\n    }\n    completedCalled = true;\n    complete(result);\n  }\n\n  // complete should be called last\n  callbacks.push(checkedComplete);\n\n  function add(fn) {\n    callbacks.push(fn);\n  }\n\n  function next(result) {\n    const popped = callbacks.pop() || checkedComplete;\n\n    try {\n      popped(result);\n    } catch (_) {\n      // If there is an error, we still want to call the complete callback\n      checkedComplete(result);\n    }\n  }\n\n  return { add, next };\n}\n\n/**\n * Promise API is available as `Experimental` and in Node 19 only.\n *\n * Callback-based API is `Stable` since v14 and `Experimental` since v8.\n * Because of that, we are creating our own `AsyncSession` class.\n *\n * https://nodejs.org/docs/latest-v19.x/api/inspector.html#promises-api\n * https://nodejs.org/docs/latest-v14.x/api/inspector.html\n */\nclass AsyncSession  {\n\n  /** Throws if inspector API is not available */\n   constructor() {\n    /*\n    TODO: We really should get rid of this require statement below for a couple of reasons:\n    1. It makes the integration unusable in the SvelteKit SDK, as it's not possible to use `require`\n       in SvelteKit server code (at least not by default).\n    2. Throwing in a constructor is bad practice\n\n    More context for a future attempt to fix this:\n    We already tried replacing it with import but didn't get it to work because of async problems.\n    We still called import in the constructor but assigned to a promise which we \"awaited\" in\n    `configureAndConnect`. However, this broke the Node integration tests as no local variables\n    were reported any more. We probably missed a place where we need to await the promise, too.\n    */\n\n    // Node can be built without inspector support so this can throw\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { Session } = require('inspector');\n    this._session = new Session();\n  }\n\n  /** @inheritdoc */\n   configureAndConnect(onPause, captureAll) {\n    this._session.connect();\n\n    this._session.on('Debugger.paused', event => {\n      onPause(event, () => {\n        // After the pause work is complete, resume execution or the exception context memory is leaked\n        this._session.post('Debugger.resume');\n      });\n    });\n\n    this._session.post('Debugger.enable');\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n   setPauseOnExceptions(captureAll) {\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  /** @inheritdoc */\n   getLocalVariables(objectId, complete) {\n    this._getProperties(objectId, props => {\n      const { add, next } = createCallbackList(complete);\n\n      for (const prop of props) {\n        if (_optionalChain([prop, 'optionalAccess', _2 => _2.value, 'optionalAccess', _3 => _3.objectId]) && _optionalChain([prop, 'optionalAccess', _4 => _4.value, 'access', _5 => _5.className]) === 'Array') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollArray(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _6 => _6.value, 'optionalAccess', _7 => _7.objectId]) && _optionalChain([prop, 'optionalAccess', _8 => _8.value, 'optionalAccess', _9 => _9.className]) === 'Object') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollObject(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _10 => _10.value, 'optionalAccess', _11 => _11.value]) != null || _optionalChain([prop, 'optionalAccess', _12 => _12.value, 'optionalAccess', _13 => _13.description]) != null) {\n          add(vars => this._unrollOther(prop, vars, next));\n        }\n      }\n\n      next({});\n    });\n  }\n\n  /**\n   * Gets all the PropertyDescriptors of an object\n   */\n   _getProperties(objectId, next) {\n    this._session.post(\n      'Runtime.getProperties',\n      {\n        objectId,\n        ownProperties: true,\n      },\n      (err, params) => {\n        if (err) {\n          next([]);\n        } else {\n          next(params.result);\n        }\n      },\n    );\n  }\n\n  /**\n   * Unrolls an array property\n   */\n   _unrollArray(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .filter(v => v.name !== 'length' && !isNaN(parseInt(v.name, 10)))\n        .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))\n        .map(v => _optionalChain([v, 'optionalAccess', _14 => _14.value, 'optionalAccess', _15 => _15.value]));\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls an object property\n   */\n   _unrollObject(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .map(v => [v.name, _optionalChain([v, 'optionalAccess', _16 => _16.value, 'optionalAccess', _17 => _17.value])])\n        .reduce((obj, [key, val]) => {\n          obj[key] = val;\n          return obj;\n        }, {} );\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls other properties\n   */\n   _unrollOther(prop, vars, next) {\n    if (_optionalChain([prop, 'optionalAccess', _18 => _18.value, 'optionalAccess', _19 => _19.value]) != null) {\n      vars[prop.name] = prop.value.value;\n    } else if (_optionalChain([prop, 'optionalAccess', _20 => _20.value, 'optionalAccess', _21 => _21.description]) != null && _optionalChain([prop, 'optionalAccess', _22 => _22.value, 'optionalAccess', _23 => _23.type]) !== 'function') {\n      vars[prop.name] = `<${prop.value.description}>`;\n    }\n\n    next(vars);\n  }\n}\n\n/**\n * When using Vercel pkg, the inspector module is not available.\n * https://github.com/getsentry/sentry-javascript/issues/6769\n */\nfunction tryNewAsyncSession() {\n  try {\n    return new AsyncSession();\n  } catch (e) {\n    return undefined;\n  }\n}\n\nconst INTEGRATION_NAME = 'LocalVariables';\n\n/**\n * Adds local variables to exception frames\n */\nconst _localVariablesSyncIntegration = ((\n  options = {},\n  session = tryNewAsyncSession(),\n) => {\n  const cachedFrames = new LRUMap(20);\n  let rateLimiter;\n  let shouldProcessEvent = false;\n\n  function handlePaused(\n    stackParser,\n    { params: { reason, data, callFrames } },\n    complete,\n  ) {\n    if (reason !== 'exception' && reason !== 'promiseRejection') {\n      complete();\n      return;\n    }\n\n    _optionalChain([rateLimiter, 'optionalCall', _24 => _24()]);\n\n    // data.description contains the original error.stack\n    const exceptionHash = hashFromStack(stackParser, _optionalChain([data, 'optionalAccess', _25 => _25.description]));\n\n    if (exceptionHash == undefined) {\n      complete();\n      return;\n    }\n\n    const { add, next } = createCallbackList(frames => {\n      cachedFrames.set(exceptionHash, frames);\n      complete();\n    });\n\n    // Because we're queuing up and making all these calls synchronously, we can potentially overflow the stack\n    // For this reason we only attempt to get local variables for the first 5 frames\n    for (let i = 0; i < Math.min(callFrames.length, 5); i++) {\n      const { scopeChain, functionName, this: obj } = callFrames[i];\n\n      const localScope = scopeChain.find(scope => scope.type === 'local');\n\n      // obj.className is undefined in ESM modules\n      const fn = obj.className === 'global' || !obj.className ? functionName : `${obj.className}.${functionName}`;\n\n      if (_optionalChain([localScope, 'optionalAccess', _26 => _26.object, 'access', _27 => _27.objectId]) === undefined) {\n        add(frames => {\n          frames[i] = { function: fn };\n          next(frames);\n        });\n      } else {\n        const id = localScope.object.objectId;\n        add(frames =>\n          _optionalChain([session, 'optionalAccess', _28 => _28.getLocalVariables, 'call', _29 => _29(id, vars => {\n            frames[i] = { function: fn, vars };\n            next(frames);\n          })]),\n        );\n      }\n    }\n\n    next([]);\n  }\n\n  function addLocalVariablesToException(exception) {\n    const hash = hashFrames(_optionalChain([exception, 'optionalAccess', _30 => _30.stacktrace, 'optionalAccess', _31 => _31.frames]));\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // remove is identical to get but also removes the entry from the cache\n    const cachedFrame = cachedFrames.remove(hash);\n\n    if (cachedFrame === undefined) {\n      return;\n    }\n\n    // Filter out frames where the function name is `new Promise` since these are in the error.stack frames\n    // but do not appear in the debugger call frames\n    const frames = (_optionalChain([exception, 'access', _32 => _32.stacktrace, 'optionalAccess', _33 => _33.frames]) || []).filter(frame => frame.function !== 'new Promise');\n\n    for (let i = 0; i < frames.length; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frames.length - i - 1;\n\n      // Drop out if we run out of frames to match up\n      if (!frames[frameIndex] || !cachedFrame[i]) {\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrame[i].vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        frames[frameIndex].in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(frames[frameIndex].function, cachedFrame[i].function)\n      ) {\n        continue;\n      }\n\n      frames[frameIndex].vars = cachedFrame[i].vars;\n    }\n  }\n\n  function addLocalVariablesToEvent(event) {\n    for (const exception of _optionalChain([event, 'optionalAccess', _34 => _34.exception, 'optionalAccess', _35 => _35.values]) || []) {\n      addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      const client = getClient();\n      const clientOptions = _optionalChain([client, 'optionalAccess', _36 => _36.getOptions, 'call', _37 => _37()]);\n\n      if (session && _optionalChain([clientOptions, 'optionalAccess', _38 => _38.includeLocalVariables])) {\n        // Only setup this integration if the Node version is >= v18\n        // https://github.com/getsentry/sentry-javascript/issues/7697\n        const unsupportedNodeVersion = NODE_VERSION.major < 18;\n\n        if (unsupportedNodeVersion) {\n          logger.log('The `LocalVariables` integration is only supported on Node >= v18.');\n          return;\n        }\n\n        const captureAll = options.captureAllExceptions !== false;\n\n        session.configureAndConnect(\n          (ev, complete) =>\n            handlePaused(clientOptions.stackParser, ev , complete),\n          captureAll,\n        );\n\n        if (captureAll) {\n          const max = options.maxExceptionsPerSecond || 50;\n\n          rateLimiter = createRateLimiter(\n            max,\n            () => {\n              logger.log('Local variables rate-limit lifted.');\n              _optionalChain([session, 'optionalAccess', _39 => _39.setPauseOnExceptions, 'call', _40 => _40(true)]);\n            },\n            seconds => {\n              logger.log(\n                `Local variables rate-limit exceeded. Disabling capturing of caught exceptions for ${seconds} seconds.`,\n              );\n              _optionalChain([session, 'optionalAccess', _41 => _41.setPauseOnExceptions, 'call', _42 => _42(false)]);\n            },\n          );\n        }\n\n        shouldProcessEvent = true;\n      }\n    },\n    processEvent(event) {\n      if (shouldProcessEvent) {\n        return addLocalVariablesToEvent(event);\n      }\n\n      return event;\n    },\n    // These are entirely for testing\n    _getCachedFramesCount() {\n      return cachedFrames.size;\n    },\n    _getFirstCachedFrame() {\n      return cachedFrames.values()[0];\n    },\n  };\n}) ;\n\nconst localVariablesSyncIntegration = defineIntegration(_localVariablesSyncIntegration);\n\n/**\n * Adds local variables to exception frames.\n * @deprecated Use `localVariablesSyncIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LocalVariablesSync = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  localVariablesSyncIntegration,\n)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { LocalVariablesSync, createCallbackList, localVariablesSyncIntegration };\n//# sourceMappingURL=local-variables-sync.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}