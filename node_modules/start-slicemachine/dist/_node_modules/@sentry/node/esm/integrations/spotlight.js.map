{"version":3,"file":"spotlight.js","sources":["../../../../../../../../node_modules/@sentry/node/esm/integrations/spotlight.js"],"sourcesContent":["import * as http from 'http';\nimport { URL } from 'url';\nimport { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { logger, serializeEnvelope } from '@sentry/utils';\n\nconst INTEGRATION_NAME = 'Spotlight';\n\nconst _spotlightIntegration = ((options = {}) => {\n  const _options = {\n    sidecarUrl: options.sidecarUrl || 'http://localhost:8969/stream',\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (typeof process === 'object' && process.env && process.env.NODE_ENV !== 'development') {\n        logger.warn(\"[Spotlight] It seems you're not in dev mode. Do you really want to have Spotlight enabled?\");\n      }\n      connectToSpotlight(client, _options);\n    },\n  };\n}) ;\n\nconst spotlightIntegration = defineIntegration(_spotlightIntegration);\n\n/**\n * Use this integration to send errors and transactions to Spotlight.\n *\n * Learn more about spotlight at https://spotlightjs.com\n *\n * Important: This integration only works with Node 18 or newer.\n *\n * @deprecated Use `spotlightIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Spotlight = convertIntegrationFnToClass(INTEGRATION_NAME, spotlightIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\nfunction connectToSpotlight(client, options) {\n  const spotlightUrl = parseSidecarUrl(options.sidecarUrl);\n  if (!spotlightUrl) {\n    return;\n  }\n\n  let failedRequests = 0;\n\n  if (typeof client.on !== 'function') {\n    logger.warn('[Spotlight] Cannot connect to spotlight due to missing method on SDK client (`client.on`)');\n    return;\n  }\n\n  client.on('beforeEnvelope', (envelope) => {\n    if (failedRequests > 3) {\n      logger.warn('[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests');\n      return;\n    }\n\n    const serializedEnvelope = serializeEnvelope(envelope);\n\n    const request = getNativeHttpRequest();\n    const req = request(\n      {\n        method: 'POST',\n        path: spotlightUrl.pathname,\n        hostname: spotlightUrl.hostname,\n        port: spotlightUrl.port,\n        headers: {\n          'Content-Type': 'application/x-sentry-envelope',\n        },\n      },\n      res => {\n        res.on('data', () => {\n          // Drain socket\n        });\n\n        res.on('end', () => {\n          // Drain socket\n        });\n        res.setEncoding('utf8');\n      },\n    );\n\n    req.on('error', () => {\n      failedRequests++;\n      logger.warn('[Spotlight] Failed to send envelope to Spotlight Sidecar');\n    });\n    req.write(serializedEnvelope);\n    req.end();\n  });\n}\n\nfunction parseSidecarUrl(url) {\n  try {\n    return new URL(`${url}`);\n  } catch (e) {\n    logger.warn(`[Spotlight] Invalid sidecar URL: ${url}`);\n    return undefined;\n  }\n}\n\n/**\n * We want to get an unpatched http request implementation to avoid capturing our own calls.\n */\nfunction getNativeHttpRequest() {\n  const { request } = http;\n  if (isWrapped(request)) {\n    return request.__sentry_original__;\n  }\n\n  return request;\n}\n\nfunction isWrapped(impl) {\n  return '__sentry_original__' in impl;\n}\n\nexport { Spotlight, getNativeHttpRequest, spotlightIntegration };\n//# sourceMappingURL=spotlight.js.map\n"],"names":[],"mappings":";;;;;AAKA,MAAM,mBAAmB;AAEzB,MAAM,wBAAyB,CAAC,UAAU,OAAO;AAC/C,QAAM,WAAW;AAAA,IACf,YAAY,QAAQ,cAAc;AAAA,EACtC;AAEE,SAAO;AAAA,IACL,MAAM;AAAA;AAAA,IAEN,YAAY;AAAA,IAAE;AAAA;AAAA,IACd,MAAM,QAAQ;AACZ,UAAI,OAAO,YAAY,YAAY,QAAQ,OAAO,QAAQ,IAAI,aAAa,eAAe;AACxF,eAAO,KAAK,4FAA4F;AAAA,MACzG;AACD,yBAAmB,QAAQ,QAAQ;AAAA,IACpC;AAAA,EACL;AACA;AAEK,MAAC,uBAAuB,kBAAkB,qBAAqB;AAYlD,4BAA4B,kBAAkB,oBAAoB;AAMpF,SAAS,mBAAmB,QAAQ,SAAS;AAC3C,QAAM,eAAe,gBAAgB,QAAQ,UAAU;AACvD,MAAI,CAAC,cAAc;AACjB;AAAA,EACD;AAED,MAAI,iBAAiB;AAErB,MAAI,OAAO,OAAO,OAAO,YAAY;AACnC,WAAO,KAAK,2FAA2F;AACvG;AAAA,EACD;AAED,SAAO,GAAG,kBAAkB,CAAC,aAAa;AACxC,QAAI,iBAAiB,GAAG;AACtB,aAAO,KAAK,sFAAsF;AAClG;AAAA,IACD;AAED,UAAM,qBAAqB,kBAAkB,QAAQ;AAErD,UAAM,UAAU;AAChB,UAAM,MAAM;AAAA,MACV;AAAA,QACE,QAAQ;AAAA,QACR,MAAM,aAAa;AAAA,QACnB,UAAU,aAAa;AAAA,QACvB,MAAM,aAAa;AAAA,QACnB,SAAS;AAAA,UACP,gBAAgB;AAAA,QACjB;AAAA,MACF;AAAA,MACD,SAAO;AACL,YAAI,GAAG,QAAQ,MAAM;AAAA,QAE7B,CAAS;AAED,YAAI,GAAG,OAAO,MAAM;AAAA,QAE5B,CAAS;AACD,YAAI,YAAY,MAAM;AAAA,MACvB;AAAA,IACP;AAEI,QAAI,GAAG,SAAS,MAAM;AACpB;AACA,aAAO,KAAK,0DAA0D;AAAA,IAC5E,CAAK;AACD,QAAI,MAAM,kBAAkB;AAC5B,QAAI,IAAG;AAAA,EACX,CAAG;AACH;AAEA,SAAS,gBAAgB,KAAK;AAC5B,MAAI;AACF,WAAO,IAAI,IAAI,GAAG,KAAK;AAAA,EACxB,SAAQ,GAAP;AACA,WAAO,KAAK,oCAAoC,KAAK;AACrD,WAAO;AAAA,EACR;AACH;AAKA,SAAS,uBAAuB;AAC9B,QAAM,EAAE,QAAS,IAAG;AACpB,MAAI,UAAU,OAAO,GAAG;AACtB,WAAO,QAAQ;AAAA,EAChB;AAED,SAAO;AACT;AAEA,SAAS,UAAU,MAAM;AACvB,SAAO,yBAAyB;AAClC;","x_google_ignoreList":[0]}