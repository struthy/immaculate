{"version":3,"file":"console.cjs","sources":["../../../../../../../../../../../node_modules/@sentry/node/node_modules/@sentry/utils/esm/instrument/console.js"],"sourcesContent":["import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n"],"names":["addHandler","maybeInstrument","GLOBAL_OBJ","CONSOLE_LEVELS","fill","originalConsoleMethods","triggerHandlers"],"mappings":";;;;;;AAWA,SAAS,iCAAiC,SAAS;AACjD,QAAM,OAAO;AACbA,uBAAW,MAAM,OAAO;AACxBC,4BAAgB,MAAM,iBAAiB;AACzC;AAEA,SAAS,oBAAoB;AAC3B,MAAI,EAAE,aAAaC,UAAAA,aAAa;AAC9B;AAAA,EACD;AAEDC,wBAAe,QAAQ,SAAU,OAAO;AACtC,QAAI,EAAE,SAASD,qBAAW,UAAU;AAClC;AAAA,IACD;AAEDE,WAAAA,KAAKF,UAAAA,WAAW,SAAS,OAAO,SAAU,uBAAuB;AAC/DG,oCAAuB,KAAK,IAAI;AAEhC,aAAO,YAAa,MAAM;AACxB,cAAM,cAAc,EAAE,MAAM;AAC5BC,kCAAgB,WAAW,WAAW;AAEtC,cAAM,MAAMD,8BAAuB,KAAK;AACxC,eAAO,IAAI,MAAMH,UAAU,WAAC,SAAS,IAAI;AAAA,MACjD;AAAA,IACA,CAAK;AAAA,EACL,CAAG;AACH;;","x_google_ignoreList":[0]}