{"version":3,"file":"hubextensions.cjs","sources":["../../../../../../../../../../../node_modules/@sentry/node/node_modules/@sentry/core/esm/tracing/hubextensions.js"],"sourcesContent":["import { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getMainCarrier } from '../hub.js';\nimport { spanToTraceHeader } from '../utils/spanUtils.js';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { sampleTransaction } from './sampling.js';\nimport { Transaction } from './transaction.js';\n\n/** Returns all trace headers that are currently on the top scope. */\n// eslint-disable-next-line deprecation/deprecation\nfunction traceHeaders() {\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = this.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': spanToTraceHeader(span),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n\n  transactionContext,\n  customSamplingContext,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    DEBUG_BUILD &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    // eslint-disable-next-line deprecation/deprecation\n    transactionContext.sampled = false;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n  delayAutoFinishUntilSignal = false,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new IdleTransaction(\n    transactionContext,\n    hub,\n    idleTimeout,\n    finalTimeout,\n    heartbeatInterval,\n    onScope,\n    delayAutoFinishUntilSignal,\n  );\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n\nexport { addTracingExtensions, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n"],"names":["spanToTraceHeader","DEBUG_BUILD","logger","transaction","Transaction","sampleTransaction","getMainCarrier","registerErrorInstrumentation"],"mappings":";;;;;;;;;AAWA,SAAS,eAAe;AAEtB,QAAM,QAAQ,KAAK;AAEnB,QAAM,OAAO,MAAM;AAEnB,SAAO,OACH;AAAA,IACE,gBAAgBA,UAAiB,kBAAC,IAAI;AAAA,EACvC,IACD;AACN;AAiBA,SAAS,kBAGP,oBACA,uBACA;AAEA,QAAM,SAAS,KAAK;AACpB,QAAM,UAAW,UAAU,OAAO,WAAU,KAAO,CAAA;AAEnD,QAAM,qBAAqB,QAAQ,gBAAgB;AACnD,QAAM,0BAA0B,mBAAmB,gBAAgB;AAEnE,MAAI,uBAAuB,yBAAyB;AAClDC,eAAW,eACTC,OAAAA,OAAO;AAAA,MACL,iDAAiD,mEAAmE;AAAA,sDACtE;AAAA,IACtD;AAGI,uBAAmB,UAAU;AAAA,EAC9B;AAGD,MAAIC,gBAAc,IAAIC,YAAAA,YAAY,oBAAoB,IAAI;AAC1DD,kBAAcE,SAAAA,kBAAkBF,eAAa,SAAS;AAAA,IACpD,MAAM,mBAAmB;AAAA,IACzB,eAAe,mBAAmB;AAAA,IAClC;AAAA,IACA,YAAY;AAAA;AAAA,MAEV,GAAG,mBAAmB;AAAA,MACtB,GAAG,mBAAmB;AAAA,IACvB;AAAA,IACD,GAAG;AAAA,EACP,CAAG;AACD,MAAIA,cAAY,eAAe;AAC7BA,kBAAY,iBAAiB,QAAQ,gBAAiB,QAAQ,aAAa,QAAU;AAAA,EACtF;AACD,MAAI,UAAU,OAAO,MAAM;AACzB,WAAO,KAAK,oBAAoBA,aAAW;AAAA,EAC5C;AACD,SAAOA;AACT;AAqDA,SAAS,uBAAuB;AAC9B,QAAM,UAAUG,IAAAA;AAChB,MAAI,CAAC,QAAQ,YAAY;AACvB;AAAA,EACD;AACD,UAAQ,WAAW,aAAa,QAAQ,WAAW,cAAc;AACjE,MAAI,CAAC,QAAQ,WAAW,WAAW,kBAAkB;AACnD,YAAQ,WAAW,WAAW,mBAAmB;AAAA,EAClD;AACD,MAAI,CAAC,QAAQ,WAAW,WAAW,cAAc;AAC/C,YAAQ,WAAW,WAAW,eAAe;AAAA,EAC9C;AAEDC,SAAAA;AACF;;","x_google_ignoreList":[0]}