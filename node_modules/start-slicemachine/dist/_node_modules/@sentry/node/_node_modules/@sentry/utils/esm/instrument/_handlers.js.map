{"version":3,"file":"_handlers.js","sources":["../../../../../../../../../../../node_modules/@sentry/node/node_modules/@sentry/utils/esm/instrument/_handlers.js"],"sourcesContent":["import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=_handlers.js.map\n"],"names":[],"mappings":";;;AAKA,MAAM,WAAW,CAAA;AACjB,MAAM,eAAe,CAAA;AAGrB,SAAS,WAAW,MAAM,SAAS;AACjC,WAAS,IAAI,IAAI,SAAS,IAAI,KAAK,CAAA;AACnC,EAAC,SAAS,IAAI,EAAI,KAAK,OAAO;AAChC;AAaA,SAAS,gBAAgB,MAAM,cAAc;AAC3C,MAAI,CAAC,aAAa,IAAI,GAAG;AACvB;AACA,iBAAa,IAAI,IAAI;AAAA,EACtB;AACH;AAGA,SAAS,gBAAgB,MAAM,MAAM;AACnC,QAAM,eAAe,QAAQ,SAAS,IAAI;AAC1C,MAAI,CAAC,cAAc;AACjB;AAAA,EACD;AAED,aAAW,WAAW,cAAc;AAClC,QAAI;AACF,cAAQ,IAAI;AAAA,IACb,SAAQ,GAAP;AACA,qBACE,OAAO;AAAA,QACL;AAAA,QAA0D;AAAA,QAAe,gBAAgB,OAAO;AAAA;AAAA,QAChG;AAAA,MACV;AAAA,IACK;AAAA,EACF;AACH;","x_google_ignoreList":[0]}