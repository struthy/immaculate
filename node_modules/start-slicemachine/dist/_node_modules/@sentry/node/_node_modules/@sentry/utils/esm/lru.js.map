{"version":3,"file":"lru.js","sources":["../../../../../../../../../../node_modules/@sentry/node/node_modules/@sentry/utils/esm/lru.js"],"sourcesContent":["/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\nexport { LRUMap };\n//# sourceMappingURL=lru.js.map\n"],"names":[],"mappings":"AACA,MAAM,OAAO;AAAA,EAEV,YAAc,UAAU;AAAC,SAAK,WAAW;AACxC,SAAK,SAAS,oBAAI;EACnB;AAAA;AAAA,EAGA,IAAI,OAAO;AACV,WAAO,KAAK,OAAO;AAAA,EACpB;AAAA;AAAA,EAGA,IAAI,KAAK;AACR,UAAM,QAAQ,KAAK,OAAO,IAAI,GAAG;AACjC,QAAI,UAAU,QAAW;AACvB,aAAO;AAAA,IACR;AAED,SAAK,OAAO,OAAO,GAAG;AACtB,SAAK,OAAO,IAAI,KAAK,KAAK;AAC1B,WAAO;AAAA,EACR;AAAA;AAAA,EAGA,IAAI,KAAK,OAAO;AACf,QAAI,KAAK,OAAO,QAAQ,KAAK,UAAU;AAErC,WAAK,OAAO,OAAO,KAAK,OAAO,OAAO,OAAO,KAAK;AAAA,IACnD;AACD,SAAK,OAAO,IAAI,KAAK,KAAK;AAAA,EAC3B;AAAA;AAAA,EAGA,OAAO,KAAK;AACX,UAAM,QAAQ,KAAK,OAAO,IAAI,GAAG;AACjC,QAAI,OAAO;AACT,WAAK,OAAO,OAAO,GAAG;AAAA,IACvB;AACD,WAAO;AAAA,EACR;AAAA;AAAA,EAGA,QAAQ;AACP,SAAK,OAAO;EACb;AAAA;AAAA,EAGA,OAAO;AACN,WAAO,MAAM,KAAK,KAAK,OAAO,KAAM,CAAA;AAAA,EACrC;AAAA;AAAA,EAGA,SAAS;AACR,UAAM,SAAS,CAAA;AACf,SAAK,OAAO,QAAQ,WAAS,OAAO,KAAK,KAAK,CAAC;AAC/C,WAAO;AAAA,EACR;AACH;","x_google_ignoreList":[0]}