import { defineIntegration, convertIntegrationFnToClass } from "../integration.js";
import { applyAggregateErrorsToEvent } from "../../../utils/esm/aggregate-errors.js";
import { exceptionFromError } from "../../../utils/esm/eventbuilder.js";
const DEFAULT_KEY = "cause";
const DEFAULT_LIMIT = 5;
const INTEGRATION_NAME = "LinkedErrors";
const _linkedErrorsIntegration = (options = {}) => {
  const limit = options.limit || DEFAULT_LIMIT;
  const key = options.key || DEFAULT_KEY;
  return {
    name: INTEGRATION_NAME,
    // TODO v8: Remove this
    setupOnce() {
    },
    // eslint-disable-line @typescript-eslint/no-empty-function
    preprocessEvent(event, hint, client) {
      const options2 = client.getOptions();
      applyAggregateErrorsToEvent(
        exceptionFromError,
        options2.stackParser,
        options2.maxValueLength,
        key,
        limit,
        event,
        hint
      );
    }
  };
};
const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);
convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration);
export {
  linkedErrorsIntegration
};
//# sourceMappingURL=linkederrors.js.map
