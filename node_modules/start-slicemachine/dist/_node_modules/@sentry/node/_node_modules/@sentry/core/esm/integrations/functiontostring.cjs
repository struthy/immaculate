"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const exports$1 = require("../exports.cjs");
const integration = require("../integration.cjs");
const object = require("../../../utils/esm/object.cjs");
let originalFunctionToString;
const INTEGRATION_NAME = "FunctionToString";
const SETUP_CLIENTS = /* @__PURE__ */ new WeakMap();
const _functionToStringIntegration = () => {
  return {
    name: INTEGRATION_NAME,
    setupOnce() {
      originalFunctionToString = Function.prototype.toString;
      try {
        Function.prototype.toString = function(...args) {
          const originalFunction = object.getOriginalFunction(this);
          const context = SETUP_CLIENTS.has(exports$1.getClient()) && originalFunction !== void 0 ? originalFunction : this;
          return originalFunctionToString.apply(context, args);
        };
      } catch (e) {
      }
    },
    setup(client) {
      SETUP_CLIENTS.set(client, true);
    }
  };
};
const functionToStringIntegration = integration.defineIntegration(_functionToStringIntegration);
integration.convertIntegrationFnToClass(
  INTEGRATION_NAME,
  functionToStringIntegration
);
exports.functionToStringIntegration = functionToStringIntegration;
//# sourceMappingURL=functiontostring.cjs.map
