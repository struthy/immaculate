"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const debugBuild = require("../debug-build.cjs");
const utils = require("./utils.cjs");
const globalError = require("../../../utils/esm/instrument/globalError.cjs");
const globalUnhandledRejection = require("../../../utils/esm/instrument/globalUnhandledRejection.cjs");
const logger = require("../../../utils/esm/logger.cjs");
let errorsInstrumented = false;
function registerErrorInstrumentation() {
  if (errorsInstrumented) {
    return;
  }
  errorsInstrumented = true;
  globalError.addGlobalErrorInstrumentationHandler(errorCallback);
  globalUnhandledRejection.addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);
}
function errorCallback() {
  const activeTransaction = utils.getActiveTransaction();
  if (activeTransaction) {
    const status = "internal_error";
    debugBuild.DEBUG_BUILD && logger.logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);
    activeTransaction.setStatus(status);
  }
}
errorCallback.tag = "sentry_tracingErrorCallback";
exports.registerErrorInstrumentation = registerErrorInstrumentation;
//# sourceMappingURL=errors.cjs.map
