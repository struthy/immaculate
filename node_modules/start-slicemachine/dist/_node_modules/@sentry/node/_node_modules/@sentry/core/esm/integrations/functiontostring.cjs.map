{"version":3,"file":"functiontostring.cjs","sources":["../../../../../../../../../../../node_modules/@sentry/node/node_modules/@sentry/core/esm/integrations/functiontostring.js"],"sourcesContent":["import { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports.js';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) ;\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { FunctionToString, functionToStringIntegration };\n//# sourceMappingURL=functiontostring.js.map\n"],"names":["getOriginalFunction","getClient","defineIntegration","convertIntegrationFnToClass"],"mappings":";;;;;AAIA,IAAI;AAEJ,MAAM,mBAAmB;AAEzB,MAAM,gBAAgB,oBAAI;AAE1B,MAAM,+BAAgC,MAAM;AAC1C,SAAO;AAAA,IACL,MAAM;AAAA,IACN,YAAY;AAEV,iCAA2B,SAAS,UAAU;AAI9C,UAAI;AAEF,iBAAS,UAAU,WAAW,YAAc,MAAM;AAChD,gBAAM,mBAAmBA,2BAAoB,IAAI;AACjD,gBAAM,UACJ,cAAc,IAAIC,oBAAW,CAAA,KAAM,qBAAqB,SAAY,mBAAmB;AACzF,iBAAO,yBAAyB,MAAM,SAAS,IAAI;AAAA,QAC7D;AAAA,MACO,SAAQ,GAAP;AAAA,MAED;AAAA,IACF;AAAA,IACD,MAAM,QAAQ;AACZ,oBAAc,IAAI,QAAQ,IAAI;AAAA,IAC/B;AAAA,EACL;AACA;AAaK,MAAC,8BAA8BC,YAAiB,kBAAC,4BAA4B;AAQzDC,YAA2B;AAAA,EAClD;AAAA,EACA;AACF;;","x_google_ignoreList":[0]}