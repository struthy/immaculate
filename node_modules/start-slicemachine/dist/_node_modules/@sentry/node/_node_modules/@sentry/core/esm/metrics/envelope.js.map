{"version":3,"file":"envelope.js","sources":["../../../../../../../../../../../node_modules/@sentry/node/node_modules/@sentry/core/esm/metrics/envelope.js"],"sourcesContent":["import { dsnToString, createEnvelope } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils.js';\n\n/**\n * Create envelope from a metric aggregate.\n */\nfunction createMetricEnvelope(\n  metricBucketItems,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems) {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n\nexport { createMetricEnvelope };\n//# sourceMappingURL=envelope.js.map\n"],"names":[],"mappings":";;;AAMA,SAAS,qBACP,mBACA,KACA,UACA,QACA;AACA,QAAM,UAAU;AAAA,IACd,UAAS,oBAAI,KAAM,GAAC,YAAa;AAAA,EACrC;AAEE,MAAI,YAAY,SAAS,KAAK;AAC5B,YAAQ,MAAM;AAAA,MACZ,MAAM,SAAS,IAAI;AAAA,MACnB,SAAS,SAAS,IAAI;AAAA,IAC5B;AAAA,EACG;AAED,MAAI,CAAC,CAAC,UAAU,KAAK;AACnB,YAAQ,MAAM,YAAY,GAAG;AAAA,EAC9B;AAED,QAAM,OAAO,yBAAyB,iBAAiB;AACvD,SAAO,eAAe,SAAS,CAAC,IAAI,CAAC;AACvC;AAEA,SAAS,yBAAyB,mBAAmB;AACnD,QAAM,UAAU,uBAAuB,iBAAiB;AACxD,QAAM,gBAAgB;AAAA,IACpB,MAAM;AAAA,IACN,QAAQ,QAAQ;AAAA,EACpB;AACE,SAAO,CAAC,eAAe,OAAO;AAChC;","x_google_ignoreList":[0]}