{"version":3,"file":"parse.js","sources":["../../../../../../node_modules/semver/functions/parse.js"],"sourcesContent":["const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n"],"names":["require$$0","require$$1","require$$2","require$$3"],"mappings":";;;;AAAA,MAAM,EAAE,WAAY,IAAGA;AACvB,MAAM,EAAE,IAAI,EAAC,IAAKC;AAClB,MAAM,SAASC;AAEf,MAAM,eAAeC;AACrB,MAAM,QAAQ,CAAC,SAAS,YAAY;AAClC,YAAU,aAAa,OAAO;AAE9B,MAAI,mBAAmB,QAAQ;AAC7B,WAAO;AAAA,EACR;AAED,MAAI,OAAO,YAAY,UAAU;AAC/B,WAAO;AAAA,EACR;AAED,MAAI,QAAQ,SAAS,YAAY;AAC/B,WAAO;AAAA,EACR;AAED,QAAM,IAAI,QAAQ,QAAQ,GAAG,EAAE,KAAK,IAAI,GAAG,EAAE,IAAI;AACjD,MAAI,CAAC,EAAE,KAAK,OAAO,GAAG;AACpB,WAAO;AAAA,EACR;AAED,MAAI;AACF,WAAO,IAAI,OAAO,SAAS,OAAO;AAAA,EACnC,SAAQ,IAAP;AACA,WAAO;AAAA,EACR;AACH;AAEA,IAAA,UAAiB;","x_google_ignoreList":[0]}