"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const eq$1 = require("./eq.cjs");
const neq$1 = require("./neq.cjs");
const gt$1 = require("./gt.cjs");
const gte$1 = require("./gte.cjs");
const lt$1 = require("./lt.cjs");
const lte$1 = require("./lte.cjs");
const eq = eq$1.eq_1;
const neq = neq$1.neq_1;
const gt = gt$1.gt_1;
const gte = gte$1.gte_1;
const lt = lt$1.lt_1;
const lte = lte$1.lte_1;
const cmp = (a, op, b, loose) => {
  switch (op) {
    case "===":
      if (typeof a === "object") {
        a = a.version;
      }
      if (typeof b === "object") {
        b = b.version;
      }
      return a === b;
    case "!==":
      if (typeof a === "object") {
        a = a.version;
      }
      if (typeof b === "object") {
        b = b.version;
      }
      return a !== b;
    case "":
    case "=":
    case "==":
      return eq(a, b, loose);
    case "!=":
      return neq(a, b, loose);
    case ">":
      return gt(a, b, loose);
    case ">=":
      return gte(a, b, loose);
    case "<":
      return lt(a, b, loose);
    case "<=":
      return lte(a, b, loose);
    default:
      throw new TypeError(`Invalid operator: ${op}`);
  }
};
var cmp_1 = cmp;
exports.cmp_1 = cmp_1;
//# sourceMappingURL=cmp.cjs.map
