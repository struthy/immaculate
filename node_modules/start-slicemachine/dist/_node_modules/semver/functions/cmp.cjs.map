{"version":3,"file":"cmp.cjs","sources":["../../../../../../node_modules/semver/functions/cmp.js"],"sourcesContent":["const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n"],"names":["require$$0","require$$1","require$$2","require$$3","require$$4","require$$5"],"mappings":";;;;;;;;AAAA,MAAM,KAAKA,KAAe;AAC1B,MAAM,MAAMC,MAAgB;AAC5B,MAAM,KAAKC,KAAe;AAC1B,MAAM,MAAMC,MAAgB;AAC5B,MAAM,KAAKC,KAAe;AAC1B,MAAM,MAAMC,MAAgB;AAE5B,MAAM,MAAM,CAAC,GAAG,IAAI,GAAG,UAAU;AAC/B,UAAQ,IAAE;AAAA,IACR,KAAK;AACH,UAAI,OAAO,MAAM,UAAU;AACzB,YAAI,EAAE;AAAA,MACP;AACD,UAAI,OAAO,MAAM,UAAU;AACzB,YAAI,EAAE;AAAA,MACP;AACD,aAAO,MAAM;AAAA,IAEf,KAAK;AACH,UAAI,OAAO,MAAM,UAAU;AACzB,YAAI,EAAE;AAAA,MACP;AACD,UAAI,OAAO,MAAM,UAAU;AACzB,YAAI,EAAE;AAAA,MACP;AACD,aAAO,MAAM;AAAA,IAEf,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO,GAAG,GAAG,GAAG,KAAK;AAAA,IAEvB,KAAK;AACH,aAAO,IAAI,GAAG,GAAG,KAAK;AAAA,IAExB,KAAK;AACH,aAAO,GAAG,GAAG,GAAG,KAAK;AAAA,IAEvB,KAAK;AACH,aAAO,IAAI,GAAG,GAAG,KAAK;AAAA,IAExB,KAAK;AACH,aAAO,GAAG,GAAG,GAAG,KAAK;AAAA,IAEvB,KAAK;AACH,aAAO,IAAI,GAAG,GAAG,KAAK;AAAA,IAExB;AACE,YAAM,IAAI,UAAU,qBAAqB,IAAI;AAAA,EAChD;AACH;AACA,IAAA,QAAiB;;","x_google_ignoreList":[0]}