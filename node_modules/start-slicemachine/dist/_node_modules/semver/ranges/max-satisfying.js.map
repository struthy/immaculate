{"version":3,"file":"max-satisfying.js","sources":["../../../../../../node_modules/semver/ranges/max-satisfying.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n"],"names":["require$$0","require$$1"],"mappings":";;AAAA,MAAM,SAASA;AACf,MAAM,QAAQC,aAA2B;AAEzC,MAAM,gBAAgB,CAAC,UAAU,OAAO,YAAY;AAClD,MAAI,MAAM;AACV,MAAI,QAAQ;AACZ,MAAI,WAAW;AACf,MAAI;AACF,eAAW,IAAI,MAAM,OAAO,OAAO;AAAA,EACpC,SAAQ,IAAP;AACA,WAAO;AAAA,EACR;AACD,WAAS,QAAQ,CAAC,MAAM;AACtB,QAAI,SAAS,KAAK,CAAC,GAAG;AAEpB,UAAI,CAAC,OAAO,MAAM,QAAQ,CAAC,MAAM,IAAI;AAEnC,cAAM;AACN,gBAAQ,IAAI,OAAO,KAAK,OAAO;AAAA,MAChC;AAAA,IACF;AAAA,EACL,CAAG;AACD,SAAO;AACT;AACA,IAAA,kBAAiB;","x_google_ignoreList":[0]}