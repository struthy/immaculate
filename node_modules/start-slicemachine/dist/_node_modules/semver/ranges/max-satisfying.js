import { s as semver } from "../classes/semver.js";
import { __require as requireRange } from "../classes/range.js";
const SemVer = semver;
const Range = requireRange();
const maxSatisfying = (versions, range, options) => {
  let max = null;
  let maxSV = null;
  let rangeObj = null;
  try {
    rangeObj = new Range(range, options);
  } catch (er) {
    return null;
  }
  versions.forEach((v) => {
    if (rangeObj.test(v)) {
      if (!max || maxSV.compare(v) === -1) {
        max = v;
        maxSV = new SemVer(max, options);
      }
    }
  });
  return max;
};
var maxSatisfying_1 = maxSatisfying;
export {
  maxSatisfying_1 as m
};
//# sourceMappingURL=max-satisfying.js.map
