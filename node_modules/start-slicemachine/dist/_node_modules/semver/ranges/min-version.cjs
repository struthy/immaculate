"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const semver = require("../classes/semver.cjs");
const range = require("../classes/range.cjs");
const gt$1 = require("../functions/gt.cjs");
const SemVer = semver.semver;
const Range = range.__require();
const gt = gt$1.gt_1;
const minVersion = (range2, loose) => {
  range2 = new Range(range2, loose);
  let minver = new SemVer("0.0.0");
  if (range2.test(minver)) {
    return minver;
  }
  minver = new SemVer("0.0.0-0");
  if (range2.test(minver)) {
    return minver;
  }
  minver = null;
  for (let i = 0; i < range2.set.length; ++i) {
    const comparators = range2.set[i];
    let setMin = null;
    comparators.forEach((comparator) => {
      const compver = new SemVer(comparator.semver.version);
      switch (comparator.operator) {
        case ">":
          if (compver.prerelease.length === 0) {
            compver.patch++;
          } else {
            compver.prerelease.push(0);
          }
          compver.raw = compver.format();
        case "":
        case ">=":
          if (!setMin || gt(compver, setMin)) {
            setMin = compver;
          }
          break;
        case "<":
        case "<=":
          break;
        default:
          throw new Error(`Unexpected operation: ${comparator.operator}`);
      }
    });
    if (setMin && (!minver || gt(minver, setMin))) {
      minver = setMin;
    }
  }
  if (minver && range2.test(minver)) {
    return minver;
  }
  return null;
};
var minVersion_1 = minVersion;
exports.minVersion_1 = minVersion_1;
//# sourceMappingURL=min-version.cjs.map
