"use strict";
const _commonjsHelpers = require("../../_virtual/_commonjsHelpers.cjs");
const re = require("./internal/re.cjs");
const constants$1 = require("./internal/constants.cjs");
const semver$2 = require("./classes/semver.cjs");
const identifiers$1 = require("./internal/identifiers.cjs");
const parse$1 = require("./functions/parse.cjs");
const valid$1 = require("./functions/valid.cjs");
const clean$1 = require("./functions/clean.cjs");
const inc$1 = require("./functions/inc.cjs");
const diff$1 = require("./functions/diff.cjs");
const major$1 = require("./functions/major.cjs");
const minor$1 = require("./functions/minor.cjs");
const patch$1 = require("./functions/patch.cjs");
const prerelease$1 = require("./functions/prerelease.cjs");
const compare$1 = require("./functions/compare.cjs");
const rcompare$1 = require("./functions/rcompare.cjs");
const compareLoose$1 = require("./functions/compare-loose.cjs");
const compareBuild$1 = require("./functions/compare-build.cjs");
const sort$1 = require("./functions/sort.cjs");
const rsort$1 = require("./functions/rsort.cjs");
const gt$1 = require("./functions/gt.cjs");
const lt$1 = require("./functions/lt.cjs");
const eq$1 = require("./functions/eq.cjs");
const neq$1 = require("./functions/neq.cjs");
const gte$1 = require("./functions/gte.cjs");
const lte$1 = require("./functions/lte.cjs");
const cmp$1 = require("./functions/cmp.cjs");
const coerce$1 = require("./functions/coerce.cjs");
const comparator = require("./classes/comparator.cjs");
const range = require("./classes/range.cjs");
const satisfies$1 = require("./functions/satisfies.cjs");
const toComparators$1 = require("./ranges/to-comparators.cjs");
const maxSatisfying$1 = require("./ranges/max-satisfying.cjs");
const minSatisfying$1 = require("./ranges/min-satisfying.cjs");
const minVersion$1 = require("./ranges/min-version.cjs");
const valid$2 = require("./ranges/valid.cjs");
const outside$1 = require("./ranges/outside.cjs");
const gtr$1 = require("./ranges/gtr.cjs");
const ltr$1 = require("./ranges/ltr.cjs");
const intersects$1 = require("./ranges/intersects.cjs");
const simplify = require("./ranges/simplify.cjs");
const subset$1 = require("./ranges/subset.cjs");
const internalRe = re.reExports;
const constants = constants$1.constants;
const SemVer = semver$2.semver;
const identifiers = identifiers$1.identifiers;
const parse = parse$1.parse_1;
const valid = valid$1.valid_1;
const clean = clean$1.clean_1;
const inc = inc$1.inc_1;
const diff = diff$1.diff_1;
const major = major$1.major_1;
const minor = minor$1.minor_1;
const patch = patch$1.patch_1;
const prerelease = prerelease$1.prerelease_1;
const compare = compare$1.compare_1;
const rcompare = rcompare$1.rcompare_1;
const compareLoose = compareLoose$1.compareLoose_1;
const compareBuild = compareBuild$1.compareBuild_1;
const sort = sort$1.sort_1;
const rsort = rsort$1.rsort_1;
const gt = gt$1.gt_1;
const lt = lt$1.lt_1;
const eq = eq$1.eq_1;
const neq = neq$1.neq_1;
const gte = gte$1.gte_1;
const lte = lte$1.lte_1;
const cmp = cmp$1.cmp_1;
const coerce = coerce$1.coerce_1;
const Comparator = comparator.__require();
const Range = range.__require();
const satisfies = satisfies$1.satisfies_1;
const toComparators = toComparators$1.toComparators_1;
const maxSatisfying = maxSatisfying$1.maxSatisfying_1;
const minSatisfying = minSatisfying$1.minSatisfying_1;
const minVersion = minVersion$1.minVersion_1;
const validRange = valid$2.valid;
const outside = outside$1.outside_1;
const gtr = gtr$1.gtr_1;
const ltr = ltr$1.ltr_1;
const intersects = intersects$1.intersects_1;
const simplifyRange = simplify.simplify;
const subset = subset$1.subset_1;
var semver = {
  parse,
  valid,
  clean,
  inc,
  diff,
  major,
  minor,
  patch,
  prerelease,
  compare,
  rcompare,
  compareLoose,
  compareBuild,
  sort,
  rsort,
  gt,
  lt,
  eq,
  neq,
  gte,
  lte,
  cmp,
  coerce,
  Comparator,
  Range,
  satisfies,
  toComparators,
  maxSatisfying,
  minSatisfying,
  minVersion,
  validRange,
  outside,
  gtr,
  ltr,
  intersects,
  simplifyRange,
  subset,
  SemVer,
  re: internalRe.re,
  src: internalRe.src,
  tokens: internalRe.t,
  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
  compareIdentifiers: identifiers.compareIdentifiers,
  rcompareIdentifiers: identifiers.rcompareIdentifiers
};
const semver$1 = /* @__PURE__ */ _commonjsHelpers.getDefaultExportFromCjs(semver);
module.exports = semver$1;
//# sourceMappingURL=index.cjs.map
