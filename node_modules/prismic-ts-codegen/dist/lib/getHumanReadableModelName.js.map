{"version":3,"file":"getHumanReadableModelName.js","sources":["../../../src/lib/getHumanReadableModelName.ts"],"sourcesContent":["import type {\n\tCustomTypeModel,\n\tCustomTypeModelField,\n\tCustomTypeModelSlice,\n\tSharedSliceModel,\n} from \"@prismicio/client\";\n\ntype GetModelHumanNameArgs = {\n\tname: string;\n\tmodel:\n\t\t| CustomTypeModel\n\t\t| SharedSliceModel\n\t\t| CustomTypeModelField\n\t\t| CustomTypeModelSlice;\n};\n\nexport const getHumanReadableModelName = (\n\targs: GetModelHumanNameArgs,\n): string => {\n\tif (\"json\" in args.model) {\n\t\t// Custom type model\n\n\t\treturn args.model.label || args.model.id;\n\t} else if (\"type\" in args.model && args.model.type === \"SharedSlice\") {\n\t\t// Shared Slice model\n\n\t\treturn args.model.name;\n\t} else if (\"type\" in args.model && args.model.type === \"Slice\") {\n\t\t// Legacy Slice model\n\n\t\treturn args.model.fieldset || args.name;\n\t} else if (\"type\" in args.model) {\n\t\t// Field model\n\n\t\tif (args.model.config && \"label\" in args.model.config) {\n\t\t\t// Non-Slice Zone fields\n\t\t\treturn args.model.config.label || args.name;\n\t\t} else if (args.model.config && \"fieldset\" in args.model) {\n\t\t\t// Slice Zone\n\t\t\treturn args.model.fieldset || args.name;\n\t\t}\n\t}\n\n\treturn `\\`${args.name}\\``;\n};\n"],"names":[],"mappings":"AAgBa,MAAA,4BAA4B,CACxC,SACW;AACP,MAAA,UAAU,KAAK,OAAO;AAGzB,WAAO,KAAK,MAAM,SAAS,KAAK,MAAM;AAAA,EAAA,WAC5B,UAAU,KAAK,SAAS,KAAK,MAAM,SAAS,eAAe;AAGrE,WAAO,KAAK,MAAM;AAAA,EAAA,WACR,UAAU,KAAK,SAAS,KAAK,MAAM,SAAS,SAAS;AAGxD,WAAA,KAAK,MAAM,YAAY,KAAK;AAAA,EAAA,WACzB,UAAU,KAAK,OAAO;AAGhC,QAAI,KAAK,MAAM,UAAU,WAAW,KAAK,MAAM,QAAQ;AAEtD,aAAO,KAAK,MAAM,OAAO,SAAS,KAAK;AAAA,IAAA,WAC7B,KAAK,MAAM,UAAU,cAAc,KAAK,OAAO;AAElD,aAAA,KAAK,MAAM,YAAY,KAAK;AAAA,IACnC;AAAA,EACD;AAED,SAAO,KAAK,KAAK;AAClB;"}