{"version":3,"file":"validate.js","sources":["../../../../node_modules/meow/source/validate.js"],"sourcesContent":["import process from 'node:process';\nimport {decamelizeFlagKey} from './utils.js';\n\nconst validateFlags = (flags, options) => {\n\tfor (const [flagKey, flagValue] of Object.entries(options.flags)) {\n\t\tif (flagKey !== '--' && !flagValue.isMultiple && Array.isArray(flags[flagKey])) {\n\t\t\tthrow new Error(`The flag --${flagKey} can only be set once.`);\n\t\t}\n\t}\n};\n\nconst validateChoicesByFlag = (flagKey, flagValue, receivedInput) => {\n\tconst {choices, isRequired} = flagValue;\n\n\tif (!choices) {\n\t\treturn;\n\t}\n\n\tconst valueMustBeOneOf = `Value must be one of: [\\`${choices.join('`, `')}\\`]`;\n\n\tif (!receivedInput) {\n\t\tif (isRequired) {\n\t\t\treturn `Flag \\`${decamelizeFlagKey(flagKey)}\\` has no value. ${valueMustBeOneOf}`;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (Array.isArray(receivedInput)) {\n\t\tconst unknownValues = receivedInput.filter(index => !choices.includes(index));\n\n\t\tif (unknownValues.length > 0) {\n\t\t\tconst valuesText = unknownValues.length > 1 ? 'values' : 'value';\n\n\t\t\treturn `Unknown ${valuesText} for flag \\`${decamelizeFlagKey(flagKey)}\\`: \\`${unknownValues.join('`, `')}\\`. ${valueMustBeOneOf}`;\n\t\t}\n\t} else if (!choices.includes(receivedInput)) {\n\t\treturn `Unknown value for flag \\`${decamelizeFlagKey(flagKey)}\\`: \\`${receivedInput}\\`. ${valueMustBeOneOf}`;\n\t}\n};\n\nconst validateChoices = (flags, receivedFlags) => {\n\tconst errors = [];\n\n\tfor (const [flagKey, flagValue] of Object.entries(flags)) {\n\t\tconst receivedInput = receivedFlags[flagKey];\n\t\tconst errorMessage = validateChoicesByFlag(flagKey, flagValue, receivedInput);\n\n\t\tif (errorMessage) {\n\t\t\terrors.push(errorMessage);\n\t\t}\n\t}\n\n\tif (errors.length > 0) {\n\t\tthrow new Error(`${errors.join('\\n')}`);\n\t}\n};\n\nexport const validate = (flags, options) => {\n\tvalidateFlags(flags, options);\n\tvalidateChoices(options.flags, flags);\n};\n\nconst reportUnknownFlags = unknownFlags => {\n\tconsole.error([\n\t\t`Unknown flag${unknownFlags.length > 1 ? 's' : ''}`,\n\t\t...unknownFlags,\n\t].join('\\n'));\n};\n\nexport const checkUnknownFlags = input => {\n\tconst unknownFlags = input.filter(item => typeof item === 'string' && item.startsWith('-'));\n\tif (unknownFlags.length > 0) {\n\t\treportUnknownFlags(unknownFlags);\n\t\tprocess.exit(2);\n\t}\n};\n\nconst isFlagMissing = (flagName, definedFlags, receivedFlags, input) => {\n\tconst flag = definedFlags[flagName];\n\tlet isFlagRequired = true;\n\n\tif (typeof flag.isRequired === 'function') {\n\t\tisFlagRequired = flag.isRequired(receivedFlags, input);\n\t\tif (typeof isFlagRequired !== 'boolean') {\n\t\t\tthrow new TypeError(`Return value for isRequired callback should be of type boolean, but ${typeof isFlagRequired} was returned.`);\n\t\t}\n\t}\n\n\tif (receivedFlags[flagName] === undefined) {\n\t\treturn isFlagRequired;\n\t}\n\n\treturn flag.isMultiple && receivedFlags[flagName].length === 0 && isFlagRequired;\n};\n\nconst reportMissingRequiredFlags = missingRequiredFlags => {\n\tconsole.error(`Missing required flag${missingRequiredFlags.length > 1 ? 's' : ''}`);\n\tfor (const flag of missingRequiredFlags) {\n\t\tconsole.error(`\\t${decamelizeFlagKey(flag.key)}${flag.shortFlag ? `, -${flag.shortFlag}` : ''}`);\n\t}\n};\n\nexport const checkMissingRequiredFlags = (flags, receivedFlags, input) => {\n\tconst missingRequiredFlags = [];\n\tif (flags === undefined) {\n\t\treturn [];\n\t}\n\n\tfor (const flagName of Object.keys(flags)) {\n\t\tif (flags[flagName].isRequired && isFlagMissing(flagName, flags, receivedFlags, input)) {\n\t\t\tmissingRequiredFlags.push({key: flagName, ...flags[flagName]});\n\t\t}\n\t}\n\n\tif (missingRequiredFlags.length > 0) {\n\t\treportMissingRequiredFlags(missingRequiredFlags);\n\t\tprocess.exit(2);\n\t}\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}