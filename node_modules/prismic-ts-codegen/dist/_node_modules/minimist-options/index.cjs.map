{"version":3,"file":"index.cjs","sources":["../../../node_modules/minimist-options/index.js"],"sourcesContent":["'use strict';\n\nconst isPlainObject = require('is-plain-obj');\nconst arrify = require('arrify');\nconst kindOf = require('kind-of');\n\nconst push = (obj, prop, value) => {\n\tif (!obj[prop]) {\n\t\tobj[prop] = [];\n\t}\n\n\tobj[prop].push(value);\n};\n\nconst insert = (obj, prop, key, value) => {\n\tif (!obj[prop]) {\n\t\tobj[prop] = {};\n\t}\n\n\tobj[prop][key] = value;\n};\n\nconst prettyPrint = output => {\n\treturn Array.isArray(output) ?\n\t\t`[${output.map(prettyPrint).join(', ')}]` :\n\t\tkindOf(output) === 'string' ? JSON.stringify(output) : output;\n};\n\nconst resolveType = value => {\n\tif (Array.isArray(value) && value.length > 0) {\n\t\tconst [element] = value;\n\t\treturn `${kindOf(element)}-array`;\n\t}\n\n\treturn kindOf(value);\n};\n\nconst normalizeExpectedType = (type, defaultValue) => {\n\tconst inferredType = type === 'array' ? 'string-array' : type;\n\n\tif (arrayTypes.includes(inferredType) && Array.isArray(defaultValue) && defaultValue.length === 0) {\n\t\treturn 'array';\n\t}\n\n\treturn inferredType;\n};\n\nconst passthroughOptions = ['stopEarly', 'unknown', '--'];\nconst primitiveTypes = ['string', 'boolean', 'number'];\nconst arrayTypes = primitiveTypes.map(t => `${t}-array`);\nconst availableTypes = [...primitiveTypes, 'array', ...arrayTypes];\n\nconst buildOptions = options => {\n\toptions = options || {};\n\n\tconst result = {};\n\n\tpassthroughOptions.forEach(key => {\n\t\tif (options[key]) {\n\t\t\tresult[key] = options[key];\n\t\t}\n\t});\n\n\tObject.keys(options).forEach(key => {\n\t\tlet value = options[key];\n\n\t\tif (key === 'arguments') {\n\t\t\tkey = '_';\n\t\t}\n\n\t\t// If short form is used\n\t\t// convert it to long form\n\t\t// e.g. { 'name': 'string' }\n\t\tif (typeof value === 'string') {\n\t\t\tvalue = {type: value};\n\t\t}\n\n\t\tif (isPlainObject(value)) {\n\t\t\tconst props = value;\n\t\t\tconst {type} = props;\n\n\t\t\tif (type) {\n\t\t\t\tif (!availableTypes.includes(type)) {\n\t\t\t\t\tthrow new TypeError(`Expected type of \"${key}\" to be one of ${prettyPrint(availableTypes)}, got ${prettyPrint(type)}`);\n\t\t\t\t}\n\n\t\t\t\tif (arrayTypes.includes(type)) {\n\t\t\t\t\tconst [elementType] = type.split('-');\n\t\t\t\t\tpush(result, 'array', {key, [elementType]: true});\n\t\t\t\t} else {\n\t\t\t\t\tpush(result, type, key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ({}.hasOwnProperty.call(props, 'default')) {\n\t\t\t\tconst {default: defaultValue} = props;\n\t\t\t\tconst defaultType = resolveType(defaultValue);\n\t\t\t\tconst expectedType = normalizeExpectedType(type, defaultValue);\n\n\t\t\t\tif (expectedType && expectedType !== defaultType) {\n\t\t\t\t\tthrow new TypeError(`Expected \"${key}\" default value to be of type \"${expectedType}\", got ${prettyPrint(defaultType)}`);\n\t\t\t\t}\n\n\t\t\t\tinsert(result, 'default', key, defaultValue);\n\t\t\t}\n\n\t\t\tarrify(props.alias).forEach(alias => {\n\t\t\t\tinsert(result, 'alias', alias, key);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn result;\n};\n\nmodule.exports = buildOptions;\nmodule.exports.default = buildOptions;\n"],"names":["require$$0","require$$1","require$$2","minimistOptionsModule"],"mappings":"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","x_google_ignoreList":[0]}