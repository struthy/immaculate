{"version":3,"file":"index.js","sources":["../../../../node_modules/lines-and-columns/build/index.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */ (function () {\n    function LinesAndColumns(string) {\n        this.string = string;\n        var offsets = [0];\n        for (var offset = 0; offset < string.length;) {\n            switch (string[offset]) {\n                case LF:\n                    offset += LF.length;\n                    offsets.push(offset);\n                    break;\n                case CR:\n                    offset += CR.length;\n                    if (string[offset] === LF) {\n                        offset += LF.length;\n                    }\n                    offsets.push(offset);\n                    break;\n                default:\n                    offset++;\n                    break;\n            }\n        }\n        this.offsets = offsets;\n    }\n    LinesAndColumns.prototype.locationForIndex = function (index) {\n        if (index < 0 || index > this.string.length) {\n            return null;\n        }\n        var line = 0;\n        var offsets = this.offsets;\n        while (offsets[line + 1] <= index) {\n            line++;\n        }\n        var column = index - offsets[line];\n        return { line: line, column: column };\n    };\n    LinesAndColumns.prototype.indexForLocation = function (location) {\n        var line = location.line, column = location.column;\n        if (line < 0 || line >= this.offsets.length) {\n            return null;\n        }\n        if (column < 0 || column > this.lengthOfLine(line)) {\n            return null;\n        }\n        return this.offsets[line] + column;\n    };\n    LinesAndColumns.prototype.lengthOfLine = function (line) {\n        var offset = this.offsets[line];\n        var nextOffset = line === this.offsets.length - 1\n            ? this.string.length\n            : this.offsets[line + 1];\n        return nextOffset - offset;\n    };\n    return LinesAndColumns;\n}());\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;\n"],"names":["LinesAndColumns"],"mappings":";;AACA,UAAA,aAAqB;AACrB,UAA0B,kBAAA;AAC1B,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI;AAAA;AAAA,IAAiC,WAAY;AAC7C,eAASA,iBAAgB,QAAQ;AAC7B,aAAK,SAAS;AACd,YAAI,UAAU,CAAC,CAAC;AAChB,iBAAS,SAAS,GAAG,SAAS,OAAO,UAAS;AAC1C,kBAAQ,OAAO,MAAM,GAAC;AAAA,YAClB,KAAK;AACD,wBAAU,GAAG;AACb,sBAAQ,KAAK,MAAM;AACnB;AAAA,YACJ,KAAK;AACD,wBAAU,GAAG;AACb,kBAAI,OAAO,MAAM,MAAM,IAAI;AACvB,0BAAU,GAAG;AAAA,cAChB;AACD,sBAAQ,KAAK,MAAM;AACnB;AAAA,YACJ;AACI;AACA;AAAA,UACP;AAAA,QACJ;AACD,aAAK,UAAU;AAAA,MAClB;AACD,MAAAA,iBAAgB,UAAU,mBAAmB,SAAU,OAAO;AAC1D,YAAI,QAAQ,KAAK,QAAQ,KAAK,OAAO,QAAQ;AACzC,iBAAO;AAAA,QACV;AACD,YAAI,OAAO;AACX,YAAI,UAAU,KAAK;AACnB,eAAO,QAAQ,OAAO,CAAC,KAAK,OAAO;AAC/B;AAAA,QACH;AACD,YAAI,SAAS,QAAQ,QAAQ,IAAI;AACjC,eAAO,EAAE,MAAY,OAAc;AAAA,MAC3C;AACI,MAAAA,iBAAgB,UAAU,mBAAmB,SAAU,UAAU;AAC7D,YAAI,OAAO,SAAS,MAAM,SAAS,SAAS;AAC5C,YAAI,OAAO,KAAK,QAAQ,KAAK,QAAQ,QAAQ;AACzC,iBAAO;AAAA,QACV;AACD,YAAI,SAAS,KAAK,SAAS,KAAK,aAAa,IAAI,GAAG;AAChD,iBAAO;AAAA,QACV;AACD,eAAO,KAAK,QAAQ,IAAI,IAAI;AAAA,MACpC;AACI,MAAAA,iBAAgB,UAAU,eAAe,SAAU,MAAM;AACrD,YAAI,SAAS,KAAK,QAAQ,IAAI;AAC9B,YAAI,aAAa,SAAS,KAAK,QAAQ,SAAS,IAC1C,KAAK,OAAO,SACZ,KAAK,QAAQ,OAAO,CAAC;AAC3B,eAAO,aAAa;AAAA,MAC5B;AACI,aAAOA;AAAA,IACV,EAAA;AAAA;AACD,UAAA,kBAA0B;AAC1B,UAAQ,SAAS,IAAI;;","x_google_ignoreList":[0]}