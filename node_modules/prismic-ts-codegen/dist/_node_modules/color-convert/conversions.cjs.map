{"version":3,"file":"conversions.cjs","sources":["../../../node_modules/color-convert/conversions.js"],"sourcesContent":["/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n"],"names":["require$$0","conversionsModule"],"mappings":"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","x_google_ignoreList":[0]}