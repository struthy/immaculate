{"version":3,"file":"index.cjs","sources":["../../../node_modules/validate-npm-package-license/index.js"],"sourcesContent":["var parse = require('spdx-expression-parse');\nvar correct = require('spdx-correct');\n\nvar genericWarning = (\n  'license should be ' +\n  'a valid SPDX license expression (without \"LicenseRef\"), ' +\n  '\"UNLICENSED\", or ' +\n  '\"SEE LICENSE IN <filename>\"'\n);\n\nvar fileReferenceRE = /^SEE LICEN[CS]E IN (.+)$/;\n\nfunction startsWith(prefix, string) {\n  return string.slice(0, prefix.length) === prefix;\n}\n\nfunction usesLicenseRef(ast) {\n  if (ast.hasOwnProperty('license')) {\n    var license = ast.license;\n    return (\n      startsWith('LicenseRef', license) ||\n      startsWith('DocumentRef', license)\n    );\n  } else {\n    return (\n      usesLicenseRef(ast.left) ||\n      usesLicenseRef(ast.right)\n    );\n  }\n}\n\nmodule.exports = function(argument) {\n  var ast;\n\n  try {\n    ast = parse(argument);\n  } catch (e) {\n    var match\n    if (\n      argument === 'UNLICENSED' ||\n      argument === 'UNLICENCED'\n    ) {\n      return {\n        validForOldPackages: true,\n        validForNewPackages: true,\n        unlicensed: true\n      };\n    } else if (match = fileReferenceRE.exec(argument)) {\n      return {\n        validForOldPackages: true,\n        validForNewPackages: true,\n        inFile: match[1]\n      };\n    } else {\n      var result = {\n        validForOldPackages: false,\n        validForNewPackages: false,\n        warnings: [genericWarning]\n      };\n      if (argument.trim().length !== 0) {\n        var corrected = correct(argument);\n        if (corrected) {\n          result.warnings.push(\n            'license is similar to the valid expression \"' + corrected + '\"'\n          );\n        }\n      }\n      return result;\n    }\n  }\n\n  if (usesLicenseRef(ast)) {\n    return {\n      validForNewPackages: false,\n      validForOldPackages: false,\n      spdx: true,\n      warnings: [genericWarning]\n    };\n  } else {\n    return {\n      validForNewPackages: true,\n      validForOldPackages: true,\n      spdx: true\n    };\n  }\n};\n"],"names":["require$$0","require$$1"],"mappings":";;;;AAAA,IAAI,QAAQA,MAAAA;AACZ,IAAI,UAAUC,QAAAA;AAEd,IAAI,iBACF;AAMF,IAAI,kBAAkB;AAEtB,SAAS,WAAW,QAAQ,QAAQ;AAClC,SAAO,OAAO,MAAM,GAAG,OAAO,MAAM,MAAM;AAC5C;AAEA,SAAS,eAAe,KAAK;AAC3B,MAAI,IAAI,eAAe,SAAS,GAAG;AACjC,QAAI,UAAU,IAAI;AAClB,WACE,WAAW,cAAc,OAAO,KAChC,WAAW,eAAe,OAAO;AAAA,EAEvC,OAAS;AACL,WACE,eAAe,IAAI,IAAI,KACvB,eAAe,IAAI,KAAK;AAAA,EAE3B;AACH;IAEA,4BAAiB,SAAS,UAAU;AAClC,MAAI;AAEJ,MAAI;AACF,UAAM,MAAM,QAAQ;AAAA,EACrB,SAAQ,GAAP;AACA,QAAI;AACJ,QACE,aAAa,gBACb,aAAa,cACb;AACA,aAAO;AAAA,QACL,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,YAAY;AAAA,MACpB;AAAA,IACK,WAAU,QAAQ,gBAAgB,KAAK,QAAQ,GAAG;AACjD,aAAO;AAAA,QACL,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,QAAQ,MAAM,CAAC;AAAA,MACvB;AAAA,IACA,OAAW;AACL,UAAI,SAAS;AAAA,QACX,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,UAAU,CAAC,cAAc;AAAA,MACjC;AACM,UAAI,SAAS,OAAO,WAAW,GAAG;AAChC,YAAI,YAAY,QAAQ,QAAQ;AAChC,YAAI,WAAW;AACb,iBAAO,SAAS;AAAA,YACd,iDAAiD,YAAY;AAAA,UACzE;AAAA,QACS;AAAA,MACF;AACD,aAAO;AAAA,IACR;AAAA,EACF;AAED,MAAI,eAAe,GAAG,GAAG;AACvB,WAAO;AAAA,MACL,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,MAAM;AAAA,MACN,UAAU,CAAC,cAAc;AAAA,IAC/B;AAAA,EACA,OAAS;AACL,WAAO;AAAA,MACL,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,MAAM;AAAA,IACZ;AAAA,EACG;AACH;;","x_google_ignoreList":[0]}