{"version":3,"file":"index.js","sources":["../../../node_modules/indent-string/index.js"],"sourcesContent":["export default function indentString(string, count = 1, options = {}) {\n\tconst {\n\t\tindent = ' ',\n\t\tincludeEmptyLines = false\n\t} = options;\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (count < 0) {\n\t\tthrow new RangeError(\n\t\t\t`Expected \\`count\\` to be at least 0, got \\`${count}\\``\n\t\t);\n\t}\n\n\tif (typeof indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, indent.repeat(count));\n}\n"],"names":[],"mappings":"AAAe,SAAS,aAAa,QAAQ,QAAQ,GAAG,UAAU,CAAA,GAAI;AACrE,QAAM;AAAA,IACL,SAAS;AAAA,IACT,oBAAoB;AAAA,EACpB,IAAG;AAEJ,MAAI,OAAO,WAAW,UAAU;AAC/B,UAAM,IAAI;AAAA,MACT,gDAAgD,OAAO;AAAA,IAC1D;AAAA,EACE;AAED,MAAI,OAAO,UAAU,UAAU;AAC9B,UAAM,IAAI;AAAA,MACT,gDAAgD,OAAO;AAAA,IAC1D;AAAA,EACE;AAED,MAAI,QAAQ,GAAG;AACd,UAAM,IAAI;AAAA,MACT,8CAA8C;AAAA,IACjD;AAAA,EACE;AAED,MAAI,OAAO,WAAW,UAAU;AAC/B,UAAM,IAAI;AAAA,MACT,yDAAyD,OAAO;AAAA,IACnE;AAAA,EACE;AAED,MAAI,UAAU,GAAG;AAChB,WAAO;AAAA,EACP;AAED,QAAM,QAAQ,oBAAoB,QAAQ;AAE1C,SAAO,OAAO,QAAQ,OAAO,OAAO,OAAO,KAAK,CAAC;AAClD;","x_google_ignoreList":[0]}