{"version":3,"file":"index.cjs","sources":["../../../node_modules/camelcase-keys/index.js"],"sourcesContent":["import mapObject from 'map-obj';\nimport camelCase from 'camelcase';\nimport QuickLru from 'quick-lru';\n\nconst has = (array, key) => array.some(element => {\n\tif (typeof element === 'string') {\n\t\treturn element === key;\n\t}\n\n\telement.lastIndex = 0;\n\n\treturn element.test(key);\n});\n\nconst cache = new QuickLru({maxSize: 100_000});\n\n// Reproduces behavior from `map-obj`.\nconst isObject = value =>\n\ttypeof value === 'object'\n\t\t&& value !== null\n\t\t&& !(value instanceof RegExp)\n\t\t&& !(value instanceof Error)\n\t\t&& !(value instanceof Date);\n\nconst camelCaseConvert = (input, options) => {\n\tif (!isObject(input)) {\n\t\treturn input;\n\t}\n\n\toptions = {\n\t\tdeep: false,\n\t\tpascalCase: false,\n\t\t...options,\n\t};\n\n\tconst {exclude, pascalCase, stopPaths, deep} = options;\n\n\tconst stopPathsSet = new Set(stopPaths);\n\n\tconst makeMapper = parentPath => (key, value) => {\n\t\tif (deep && isObject(value)) {\n\t\t\tconst path = parentPath === undefined ? key : `${parentPath}.${key}`;\n\n\t\t\tif (!stopPathsSet.has(path)) {\n\t\t\t\tvalue = mapObject(value, makeMapper(path));\n\t\t\t}\n\t\t}\n\n\t\tif (!(exclude && has(exclude, key))) {\n\t\t\tconst cacheKey = pascalCase ? `${key}_` : key;\n\n\t\t\tif (cache.has(cacheKey)) {\n\t\t\t\tkey = cache.get(cacheKey);\n\t\t\t} else {\n\t\t\t\tconst returnValue = camelCase(key, {pascalCase, locale: false});\n\n\t\t\t\tif (key.length < 100) { // Prevent abuse\n\t\t\t\t\tcache.set(cacheKey, returnValue);\n\t\t\t\t}\n\n\t\t\t\tkey = returnValue;\n\t\t\t}\n\t\t}\n\n\t\treturn [key, value];\n\t};\n\n\treturn mapObject(input, makeMapper(undefined));\n};\n\nexport default function camelcaseKeys(input, options) {\n\tif (Array.isArray(input)) {\n\t\treturn Object.keys(input).map(key => camelCaseConvert(input[key], options));\n\t}\n\n\treturn camelCaseConvert(input, options);\n}\n"],"names":["QuickLru","mapObject","camelCase"],"mappings":";;;;AAIA,MAAM,MAAM,CAAC,OAAO,QAAQ,MAAM,KAAK,aAAW;AACjD,MAAI,OAAO,YAAY,UAAU;AAChC,WAAO,YAAY;AAAA,EACnB;AAED,UAAQ,YAAY;AAEpB,SAAO,QAAQ,KAAK,GAAG;AACxB,CAAC;AAED,MAAM,QAAQ,IAAIA,MAAS,EAAC,SAAS,IAAO,CAAC;AAG7C,MAAM,WAAW,WAChB,OAAO,UAAU,YACb,UAAU,QACV,EAAE,iBAAiB,WACnB,EAAE,iBAAiB,UACnB,EAAE,iBAAiB;AAExB,MAAM,mBAAmB,CAAC,OAAO,YAAY;AAC5C,MAAI,CAAC,SAAS,KAAK,GAAG;AACrB,WAAO;AAAA,EACP;AAED,YAAU;AAAA,IACT,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,GAAG;AAAA,EACL;AAEC,QAAM,EAAC,SAAS,YAAY,WAAW,KAAI,IAAI;AAE/C,QAAM,eAAe,IAAI,IAAI,SAAS;AAEtC,QAAM,aAAa,gBAAc,CAAC,KAAK,UAAU;AAChD,QAAI,QAAQ,SAAS,KAAK,GAAG;AAC5B,YAAM,OAAO,eAAe,SAAY,MAAM,GAAG,cAAc;AAE/D,UAAI,CAAC,aAAa,IAAI,IAAI,GAAG;AAC5B,gBAAQC,QAAU,OAAO,WAAW,IAAI,CAAC;AAAA,MACzC;AAAA,IACD;AAED,QAAI,EAAE,WAAW,IAAI,SAAS,GAAG,IAAI;AACpC,YAAM,WAAW,aAAa,GAAG,SAAS;AAE1C,UAAI,MAAM,IAAI,QAAQ,GAAG;AACxB,cAAM,MAAM,IAAI,QAAQ;AAAA,MAC5B,OAAU;AACN,cAAM,cAAcC,QAAU,KAAK,EAAC,YAAY,QAAQ,MAAK,CAAC;AAE9D,YAAI,IAAI,SAAS,KAAK;AACrB,gBAAM,IAAI,UAAU,WAAW;AAAA,QAC/B;AAED,cAAM;AAAA,MACN;AAAA,IACD;AAED,WAAO,CAAC,KAAK,KAAK;AAAA,EACpB;AAEC,SAAOD,QAAU,OAAO,WAAW,MAAS,CAAC;AAC9C;AAEe,SAAS,cAAc,OAAO,SAAS;AACrD,MAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,WAAO,OAAO,KAAK,KAAK,EAAE,IAAI,SAAO,iBAAiB,MAAM,GAAG,GAAG,OAAO,CAAC;AAAA,EAC1E;AAED,SAAO,iBAAiB,OAAO,OAAO;AACvC;;","x_google_ignoreList":[0]}