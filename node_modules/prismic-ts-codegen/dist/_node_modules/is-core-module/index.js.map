{"version":3,"file":"index.js","sources":["../../../node_modules/is-core-module/index.js"],"sourcesContent":["'use strict';\n\nvar has = require('has');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn has(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n"],"names":["require$$0"],"mappings":";;AAEA,IAAI,MAAMA;AAEV,SAAS,kBAAkB,SAAS,WAAW;AAC9C,MAAI,YAAY,QAAQ,MAAM,GAAG;AACjC,MAAI,QAAQ,UAAU,MAAM,GAAG;AAC/B,MAAI,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AACvC,MAAI,gBAAgB,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,MAAM,GAAG;AAErE,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC3B,QAAI,MAAM,SAAS,UAAU,CAAC,KAAK,GAAG,EAAE;AACxC,QAAI,MAAM,SAAS,aAAa,CAAC,KAAK,GAAG,EAAE;AAC3C,QAAI,QAAQ,KAAK;AAChB;AAAA,IACA;AACD,QAAI,OAAO,KAAK;AACf,aAAO,MAAM;AAAA,IACb;AACD,QAAI,OAAO,MAAM;AAChB,aAAO,OAAO;AAAA,IACd;AACD,WAAO;AAAA,EACP;AACD,SAAO,OAAO;AACf;AAEA,SAAS,aAAa,SAAS,OAAO;AACrC,MAAI,aAAa,MAAM,MAAM,QAAQ;AACrC,MAAI,WAAW,WAAW,GAAG;AAC5B,WAAO;AAAA,EACP;AACD,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AAC3C,QAAI,CAAC,kBAAkB,SAAS,WAAW,CAAC,CAAC,GAAG;AAC/C,aAAO;AAAA,IACP;AAAA,EACD;AACD,SAAO;AACR;AAEA,SAAS,gBAAgB,aAAa,gBAAgB;AACrD,MAAI,OAAO,mBAAmB,WAAW;AACxC,WAAO;AAAA,EACP;AAED,MAAI,UAAU,OAAO,gBAAgB,cAClC,QAAQ,YAAY,QAAQ,SAAS,OACrC;AAEH,MAAI,OAAO,YAAY,UAAU;AAChC,UAAM,IAAI,UAAU,OAAO,gBAAgB,cAAc,6CAA6C,+CAA+C;AAAA,EACrJ;AAED,MAAI,kBAAkB,OAAO,mBAAmB,UAAU;AACzD,aAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,EAAE,GAAG;AAC/C,UAAI,aAAa,SAAS,eAAe,CAAC,CAAC,GAAG;AAC7C,eAAO;AAAA,MACP;AAAA,IACD;AACD,WAAO;AAAA,EACP;AACD,SAAO,aAAa,SAAS,cAAc;AAC5C;AAEA,IAAI,OAAO;AAEX,IAAA,eAAiB,SAAS,OAAO,GAAG,aAAa;AAChD,SAAO,IAAI,MAAM,CAAC,KAAK,gBAAgB,aAAa,KAAK,CAAC,CAAC;AAC5D;","x_google_ignoreList":[0]}