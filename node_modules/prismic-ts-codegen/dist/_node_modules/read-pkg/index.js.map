{"version":3,"file":"index.js","sources":["../../../node_modules/read-pkg/index.js"],"sourcesContent":["import process from 'node:process';\nimport fs, {promises as fsPromises} from 'node:fs';\nimport path from 'node:path';\nimport {fileURLToPath} from 'node:url';\nimport parseJson from 'parse-json';\nimport normalizePackageData from 'normalize-package-data';\n\nconst toPath = urlOrPath => urlOrPath instanceof URL ? fileURLToPath(urlOrPath) : urlOrPath;\n\nexport async function readPackage({cwd, normalize = true} = {}) {\n\tcwd = toPath(cwd) || process.cwd();\n\tconst filePath = path.resolve(cwd, 'package.json');\n\tconst json = parseJson(await fsPromises.readFile(filePath, 'utf8'));\n\n\tif (normalize) {\n\t\tnormalizePackageData(json);\n\t}\n\n\treturn json;\n}\n\nexport function readPackageSync({cwd, normalize = true} = {}) {\n\tcwd = toPath(cwd) || process.cwd();\n\tconst filePath = path.resolve(cwd, 'package.json');\n\tconst json = parseJson(fs.readFileSync(filePath, 'utf8'));\n\n\tif (normalize) {\n\t\tnormalizePackageData(json);\n\t}\n\n\treturn json;\n}\n"],"names":[],"mappings":";;;;;;AAOA,MAAM,SAAS,eAAa,qBAAqB,MAAM,cAAc,SAAS,IAAI;AAc3E,SAAS,gBAAgB,EAAC,KAAK,YAAY,KAAI,IAAI,CAAA,GAAI;AAC7D,QAAM,OAAO,GAAG,KAAK,QAAQ,IAAG;AAChC,QAAM,WAAW,KAAK,QAAQ,KAAK,cAAc;AACjD,QAAM,OAAO,UAAU,GAAG,aAAa,UAAU,MAAM,CAAC;AAExD,MAAI,WAAW;AACd,yBAAqB,IAAI;AAAA,EACzB;AAED,SAAO;AACR;","x_google_ignoreList":[0]}