"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const repositories = "'repositories' (plural) Not supported. Please pick one as the 'repository' field";
const missingRepository = "No repository field.";
const brokenGitUrl = "Probably broken git url: %s";
const nonObjectScripts = "scripts must be an object";
const nonStringScript = "script values must be string commands";
const nonArrayFiles = "Invalid 'files' member";
const invalidFilename = "Invalid filename in 'files' list: %s";
const nonArrayBundleDependencies = "Invalid 'bundleDependencies' list. Must be array of package names";
const nonStringBundleDependency = "Invalid bundleDependencies member: %s";
const nonDependencyBundleDependency = "Non-dependency in bundleDependencies: %s";
const nonObjectDependencies = "%s field must be an object";
const nonStringDependency = "Invalid dependency: %s %s";
const deprecatedArrayDependencies = "specifying %s as array is deprecated";
const deprecatedModules = "modules field is deprecated";
const nonArrayKeywords = "keywords should be an array of strings";
const nonStringKeyword = "keywords should be an array of strings";
const conflictingName = "%s is also the name of a node core module.";
const nonStringDescription = "'description' field should be a string";
const missingDescription = "No description";
const missingReadme = "No README data";
const missingLicense = "No license field.";
const nonEmailUrlBugsString = "Bug string field must be url, email, or {email,url}";
const nonUrlBugsUrlField = "bugs.url field must be a string url. Deleted.";
const nonEmailBugsEmailField = "bugs.email field must be a string email. Deleted.";
const emptyNormalizedBugs = "Normalized value of bugs field is an empty object. Deleted.";
const nonUrlHomepage = "homepage field must be a string url. Deleted.";
const invalidLicense = "license should be a valid SPDX license expression";
const typo = "%s should probably be %s.";
const require$$1 = {
  repositories,
  missingRepository,
  brokenGitUrl,
  nonObjectScripts,
  nonStringScript,
  nonArrayFiles,
  invalidFilename,
  nonArrayBundleDependencies,
  nonStringBundleDependency,
  nonDependencyBundleDependency,
  nonObjectDependencies,
  nonStringDependency,
  deprecatedArrayDependencies,
  deprecatedModules,
  nonArrayKeywords,
  nonStringKeyword,
  conflictingName,
  nonStringDescription,
  missingDescription,
  missingReadme,
  missingLicense,
  nonEmailUrlBugsString,
  nonUrlBugsUrlField,
  nonEmailBugsEmailField,
  emptyNormalizedBugs,
  nonUrlHomepage,
  invalidLicense,
  typo
};
exports.brokenGitUrl = brokenGitUrl;
exports.conflictingName = conflictingName;
exports.default = require$$1;
exports.deprecatedArrayDependencies = deprecatedArrayDependencies;
exports.deprecatedModules = deprecatedModules;
exports.emptyNormalizedBugs = emptyNormalizedBugs;
exports.invalidFilename = invalidFilename;
exports.invalidLicense = invalidLicense;
exports.missingDescription = missingDescription;
exports.missingLicense = missingLicense;
exports.missingReadme = missingReadme;
exports.missingRepository = missingRepository;
exports.nonArrayBundleDependencies = nonArrayBundleDependencies;
exports.nonArrayFiles = nonArrayFiles;
exports.nonArrayKeywords = nonArrayKeywords;
exports.nonDependencyBundleDependency = nonDependencyBundleDependency;
exports.nonEmailBugsEmailField = nonEmailBugsEmailField;
exports.nonEmailUrlBugsString = nonEmailUrlBugsString;
exports.nonObjectDependencies = nonObjectDependencies;
exports.nonObjectScripts = nonObjectScripts;
exports.nonStringBundleDependency = nonStringBundleDependency;
exports.nonStringDependency = nonStringDependency;
exports.nonStringDescription = nonStringDescription;
exports.nonStringKeyword = nonStringKeyword;
exports.nonStringScript = nonStringScript;
exports.nonUrlBugsUrlField = nonUrlBugsUrlField;
exports.nonUrlHomepage = nonUrlHomepage;
exports.repositories = repositories;
exports.typo = typo;
//# sourceMappingURL=warning_messages.json.cjs.map
