{"version":3,"file":"index.js","sources":["../../../node_modules/chalk/index.js"],"sourcesContent":["'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` â†’ `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n"],"names":["escapeStringRegexp","require$$0","require$$1","require$$2","require$$3","chalk"],"mappings":"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","x_google_ignoreList":[0]}