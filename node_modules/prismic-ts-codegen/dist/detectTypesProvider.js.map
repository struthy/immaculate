{"version":3,"file":"detectTypesProvider.js","sources":["../../src/detectTypesProvider.ts"],"sourcesContent":["import { createRequire } from \"node:module\";\n\nimport { TypesProvider } from \"./generateTypes\";\n\nexport type DetectTypesProviderConfig = {\n\tcwd?: string;\n};\n\n/**\n * Detects which types provider should be used for a project.\n *\n * @param config - Configures the detection.\n *\n * @returns The types provider identifier to use, or `undefined` if on cannot be\n *   determined.\n */\nexport const detectTypesProvider = async (\n\tconfig: DetectTypesProviderConfig = {},\n): Promise<TypesProvider | undefined> => {\n\tconst cwd = config.cwd || process.cwd();\n\n\tconst require = createRequire(cwd.endsWith(\"/\") ? cwd : cwd + \"/\");\n\n\ttry {\n\t\tif (\n\t\t\tNumber.parseInt(\n\t\t\t\trequire(\"@prismicio/client/package.json\").version.split(\".\")[0],\n\t\t\t) >= 7\n\t\t) {\n\t\t\treturn \"@prismicio/client\";\n\t\t}\n\t} catch {\n\t\t// noop\n\t}\n\n\ttry {\n\t\trequire.resolve(\"@prismicio/types\");\n\n\t\treturn \"@prismicio/types\";\n\t} catch {\n\t\t// noop\n\t}\n};\n"],"names":["require"],"mappings":";AAgBO,MAAM,sBAAsB,OAClC,SAAoC,OACG;AACvC,QAAM,MAAM,OAAO,OAAO,QAAQ,IAAG;AAE/B,QAAAA,WAAU,cAAc,IAAI,SAAS,GAAG,IAAI,MAAM,MAAM,GAAG;AAE7D,MAAA;AACH,QACC,OAAO,SACNA,SAAQ,gCAAgC,EAAE,QAAQ,MAAM,GAAG,EAAE,CAAC,CAAC,KAC3D,GACJ;AACM,aAAA;AAAA,IACP;AAAA,EAAA,QACA;AAAA,EAED;AAEG,MAAA;AACH,IAAAA,SAAQ,QAAQ,kBAAkB;AAE3B,WAAA;AAAA,EAAA,QACN;AAAA,EAED;AACF;"}