import * as prettier from "prettier";
import { SliceMachineConfig, SliceMachineProject } from "./types";
type UpdateSliceMachineConfigOptions = {
    format?: boolean;
};
type FormatOptions = {
    prettier?: prettier.Options;
    /**
     * Determines if a newline is included at the end of the formatted result.
     *
     * @defaultValue `true`
     */
    includeNewlineAtEnd?: boolean;
};
/**
 * Creates Slice Machine helpers.
 *
 * @internal
 */
export declare const createSliceMachineHelpers: (project: SliceMachineProject) => SliceMachineHelpers;
/**
 * Slice Machine helpers shared to plugins and hooks.
 */
export declare class SliceMachineHelpers {
    /**
     * The Slice Machine project's metadata.
     *
     * @internal
     */
    private _project;
    constructor(project: SliceMachineProject);
    getProject: () => Promise<SliceMachineProject>;
    updateSliceMachineConfig: (sliceMachineConfig: SliceMachineConfig, options?: UpdateSliceMachineConfigOptions) => Promise<void>;
    format: (source: string, filePath?: string, options?: FormatOptions) => Promise<string>;
    joinPathFromRoot: (...paths: string[]) => string;
}
export {};
