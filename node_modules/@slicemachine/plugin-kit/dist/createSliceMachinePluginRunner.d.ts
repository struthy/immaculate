import { HookSystem } from "./lib/HookSystem";
import { SliceMachinePlugin } from "./defineSliceMachinePlugin";
import { SliceMachineHookTypes, SliceMachineHooks, SliceMachineProject } from "./types";
import { SliceMachineActions } from "./createSliceMachineActions";
import { SliceMachineHelpers } from "./createSliceMachineHelpers";
/**
 * @internal
 */
export declare const REQUIRED_ADAPTER_HOOKS: SliceMachineHookTypes[];
/**
 * @internal
 */
export declare const ADAPTER_ONLY_HOOKS: SliceMachineHookTypes[];
type SliceMachinePluginRunnerConstructorArgs = {
    project: SliceMachineProject;
    hookSystem: HookSystem<SliceMachineHooks>;
    nativePlugins?: Record<string, SliceMachinePlugin>;
};
/**
 * @internal
 */
export declare class SliceMachinePluginRunner {
    private _project;
    private _hookSystem;
    private _nativePlugins;
    /**
     * Slice Machine actions provided to hooks.
     *
     * IMPORTANT: Prefer creating your own abstraction over using `rawActions`
     * directly to prevent code breakage if this internal API changes.
     *
     * @internal
     */
    rawActions: SliceMachineActions;
    /**
     * Slice Machine helpers provided to hooks.
     *
     * IMPORTANT: Prefer creating your own abstraction over using `rawHelpers`
     * directly to prevent code breakage if this internal API changes.
     *
     * @internal
     */
    rawHelpers: SliceMachineHelpers;
    callHook: HookSystem<SliceMachineHooks>["callHook"];
    hooksForOwner: HookSystem<SliceMachineHooks>["hooksForOwner"];
    hooksForType: HookSystem<SliceMachineHooks>["hooksForType"];
    createScope: HookSystem<SliceMachineHooks>["createScope"];
    constructor({ project, hookSystem, nativePlugins, }: SliceMachinePluginRunnerConstructorArgs);
    private _loadPlugin;
    private _setupPlugin;
    private _validateAdapter;
    init(): Promise<void>;
}
type CreateSliceMachinePluginRunnerArgs = {
    project: SliceMachineProject;
    nativePlugins?: Record<string, SliceMachinePlugin>;
};
/**
 * @internal
 */
export declare const createSliceMachinePluginRunner: ({ project, nativePlugins, }: CreateSliceMachinePluginRunnerArgs) => SliceMachinePluginRunner;
export {};
