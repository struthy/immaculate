import * as t from "io-ts";
import { decode } from "./decode.js";
const SliceMachineConfigPluginRegistrationCodec = t.union([
  t.string,
  t.intersection([
    t.type({
      resolve: t.string
    }),
    t.partial({
      options: t.UnknownRecord
    })
  ])
]);
const SliceMachineConfigCodec = t.intersection([
  t.type({
    repositoryName: t.string,
    adapter: SliceMachineConfigPluginRegistrationCodec
  }),
  t.partial({
    apiEndpoint: t.string,
    libraries: t.array(t.string),
    localSliceSimulatorURL: t.string,
    plugins: t.array(SliceMachineConfigPluginRegistrationCodec),
    labs: t.partial({ legacySliceUpgrader: t.boolean })
  })
]);
const decodeSliceMachineConfig = (input) => {
  return decode(SliceMachineConfigCodec, input);
};
export {
  decodeSliceMachineConfig
};
//# sourceMappingURL=decodeSliceMachineConfig.js.map
