import { generateTypes, detectTypesProvider } from "prismic-ts-codegen";
import { writeProjectFile } from "./writeProjectFile.js";
import { GLOBAL_TYPESCRIPT_TYPES_FILENAME, NON_EDITABLE_FILE_BANNER } from "./constants.js";
const upsertGlobalTypeScriptTypes = async (args) => {
  const project = await args.helpers.getProject();
  const [customTypeModelDescriptors, sharedSliceModelDescriptors] = await Promise.all([
    args.actions.readAllCustomTypeModels(),
    args.actions.readAllSliceModels()
  ]);
  const customTypeModels = customTypeModelDescriptors.map((customTypeModelDescriptors2) => {
    return customTypeModelDescriptors2.model;
  });
  const sharedSliceModels = sharedSliceModelDescriptors.map((sharedSliceModelDescriptors2) => {
    return sharedSliceModelDescriptors2.model;
  });
  let contents = generateTypes({
    customTypeModels,
    sharedSliceModels,
    clientIntegration: {
      includeCreateClientInterface: true,
      includeContentNamespace: true
    },
    typesProvider: await detectTypesProvider({ cwd: project.root })
  });
  contents = `${NON_EDITABLE_FILE_BANNER}

${contents}`;
  return await writeProjectFile({
    ...args,
    filename: args.filename || GLOBAL_TYPESCRIPT_TYPES_FILENAME,
    contents
  });
};
export {
  upsertGlobalTypeScriptTypes
};
//# sourceMappingURL=upsertGlobalTypeScriptTypes.js.map
