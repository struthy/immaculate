"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const fs = require("node:fs/promises");
const index = require('./../../_node_modules/p-limit/index.cjs');
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const fs__namespace = /* @__PURE__ */ _interopNamespaceDefault(fs);
const SM_FS_LIMIT = Number.isNaN(Number(process.env.SM_FS_LIMIT)) ? void 0 : Number(process.env.SM_FS_LIMIT);
const CONCURRENT_FILE_DESCRIPTORS_LIMIT = SM_FS_LIMIT ?? 1024;
const fsLimit = index(CONCURRENT_FILE_DESCRIPTORS_LIMIT);
const wrapWithFSLimit = (fn) => {
  return (...args) => fsLimit(() => fn(...args));
};
const access = wrapWithFSLimit(fs__namespace.access);
const mkdir = wrapWithFSLimit(fs__namespace.mkdir);
const readFile = wrapWithFSLimit(fs__namespace.readFile);
const readdir = wrapWithFSLimit(fs__namespace.readdir);
const rm = wrapWithFSLimit(fs__namespace.rm);
const writeFile = wrapWithFSLimit(fs__namespace.writeFile);
exports.access = access;
exports.mkdir = mkdir;
exports.readFile = readFile;
exports.readdir = readdir;
exports.rm = rm;
exports.writeFile = writeFile;
//# sourceMappingURL=fsLimit.cjs.map
