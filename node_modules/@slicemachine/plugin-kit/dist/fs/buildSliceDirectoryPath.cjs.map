{"version":3,"file":"buildSliceDirectoryPath.cjs","sources":["../../../src/fs/buildSliceDirectoryPath.ts"],"sourcesContent":["import * as path from \"node:path\";\n\nimport { pascalCase } from \"./lib/pascalCase\";\nimport {\n\tresolveSliceModel,\n\tResolveSliceModelArgs,\n} from \"./lib/resolveSliceModel\";\n\nimport {\n\tbuildSliceLibraryDirectoryPath,\n\tBuildSliceLibraryDirectoryPathArgs,\n} from \"./buildSliceLibraryDirectoryPath\";\n\nexport type BuildSliceDirectoryPathArgs = BuildSliceLibraryDirectoryPathArgs &\n\tResolveSliceModelArgs;\n\nexport const buildSliceDirectoryPath = async (\n\targs: BuildSliceDirectoryPathArgs,\n): Promise<string> => {\n\tconst model = await resolveSliceModel(args);\n\n\treturn path.join(\n\t\tbuildSliceLibraryDirectoryPath(args),\n\t\tpascalCase(model.name),\n\t);\n};\n"],"names":["resolveSliceModel","path","buildSliceLibraryDirectoryPath","pascalCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAgBa,MAAA,0BAA0B,OACtC,SACoB;AACd,QAAA,QAAQ,MAAMA,oCAAkB,IAAI;AAEnC,SAAAC,gBAAK,KACXC,8DAA+B,IAAI,GACnCC,sBAAW,MAAM,IAAI,CAAC;AAExB;;"}