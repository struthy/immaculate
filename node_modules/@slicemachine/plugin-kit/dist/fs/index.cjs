"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const checkIsTypeScriptProject = require("./checkIsTypeScriptProject.cjs");
const upsertGlobalTypeScriptTypes = require("./upsertGlobalTypeScriptTypes.cjs");
const checkHasProjectFile = require("./checkHasProjectFile.cjs");
const writeProjectFile = require("./writeProjectFile.cjs");
const readProjectFile = require("./readProjectFile.cjs");
const deleteProjectFile = require("./deleteProjectFile.cjs");
const readProjectEnvironment = require("./readProjectEnvironment.cjs");
const writeProjectEnvironment = require("./writeProjectEnvironment.cjs");
const buildSliceDirectoryPath = require("./buildSliceDirectoryPath.cjs");
const buildSliceFilePath = require("./buildSliceFilePath.cjs");
const buildSliceLibraryDirectoryPath = require("./buildSliceLibraryDirectoryPath.cjs");
const readSliceLibrary = require("./readSliceLibrary.cjs");
const writeSliceFile = require("./writeSliceFile.cjs");
const writeSliceModel = require("./writeSliceModel.cjs");
const readSliceFile = require("./readSliceFile.cjs");
const readSliceModel = require("./readSliceModel.cjs");
const renameSlice = require("./renameSlice.cjs");
const deleteSliceFile = require("./deleteSliceFile.cjs");
const deleteSliceDirectory = require("./deleteSliceDirectory.cjs");
const buildCustomTypeDirectoryPath = require("./buildCustomTypeDirectoryPath.cjs");
const buildCustomTypeFilePath = require("./buildCustomTypeFilePath.cjs");
const buildCustomTypeLibraryDirectoryPath = require("./buildCustomTypeLibraryDirectoryPath.cjs");
const readCustomTypeLibrary = require("./readCustomTypeLibrary.cjs");
const writeCustomTypeFile = require("./writeCustomTypeFile.cjs");
const writeCustomTypeModel = require("./writeCustomTypeModel.cjs");
const readCustomTypeFile = require("./readCustomTypeFile.cjs");
const readCustomTypeModel = require("./readCustomTypeModel.cjs");
const renameCustomType = require("./renameCustomType.cjs");
const deleteCustomTypeFile = require("./deleteCustomTypeFile.cjs");
const deleteCustomTypeDirectory = require("./deleteCustomTypeDirectory.cjs");
const readSliceTemplateLibrary = require("./readSliceTemplateLibrary.cjs");
exports.checkIsTypeScriptProject = checkIsTypeScriptProject.checkIsTypeScriptProject;
exports.upsertGlobalTypeScriptTypes = upsertGlobalTypeScriptTypes.upsertGlobalTypeScriptTypes;
exports.checkHasProjectFile = checkHasProjectFile.checkHasProjectFile;
exports.writeProjectFile = writeProjectFile.writeProjectFile;
exports.readProjectFile = readProjectFile.readProjectFile;
exports.deleteProjectFile = deleteProjectFile.deleteProjectFile;
exports.readProjectEnvironment = readProjectEnvironment.readProjectEnvironment;
exports.writeProjectEnvironment = writeProjectEnvironment.writeProjectEnvironment;
exports.buildSliceDirectoryPath = buildSliceDirectoryPath.buildSliceDirectoryPath;
exports.buildSliceFilePath = buildSliceFilePath.buildSliceFilePath;
exports.buildSliceLibraryDirectoryPath = buildSliceLibraryDirectoryPath.buildSliceLibraryDirectoryPath;
exports.readSliceLibrary = readSliceLibrary.readSliceLibrary;
exports.writeSliceFile = writeSliceFile.writeSliceFile;
exports.writeSliceModel = writeSliceModel.writeSliceModel;
exports.readSliceFile = readSliceFile.readSliceFile;
exports.readSliceModel = readSliceModel.readSliceModel;
exports.renameSlice = renameSlice.renameSlice;
exports.deleteSliceFile = deleteSliceFile.deleteSliceFile;
exports.deleteSliceDirectory = deleteSliceDirectory.deleteSliceDirectory;
exports.buildCustomTypeDirectoryPath = buildCustomTypeDirectoryPath.buildCustomTypeDirectoryPath;
exports.buildCustomTypeFilePath = buildCustomTypeFilePath.buildCustomTypeFilePath;
exports.buildCustomTypeLibraryDirectoryPath = buildCustomTypeLibraryDirectoryPath.buildCustomTypeLibraryDirectoryPath;
exports.readCustomTypeLibrary = readCustomTypeLibrary.readCustomTypeLibrary;
exports.writeCustomTypeFile = writeCustomTypeFile.writeCustomTypeFile;
exports.writeCustomTypeModel = writeCustomTypeModel.writeCustomTypeModel;
exports.readCustomTypeFile = readCustomTypeFile.readCustomTypeFile;
exports.readCustomTypeModel = readCustomTypeModel.readCustomTypeModel;
exports.renameCustomType = renameCustomType.renameCustomType;
exports.deleteCustomTypeFile = deleteCustomTypeFile.deleteCustomTypeFile;
exports.deleteCustomTypeDirectory = deleteCustomTypeDirectory.deleteCustomTypeDirectory;
exports.readSliceTemplateLibrary = readSliceTemplateLibrary.readSliceTemplateLibrary;
//# sourceMappingURL=index.cjs.map
