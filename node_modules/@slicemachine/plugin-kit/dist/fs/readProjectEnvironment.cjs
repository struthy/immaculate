"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const dotenv = require("dotenv");
const checkHasProjectFile = require("./checkHasProjectFile.cjs");
const readProjectFile = require("./readProjectFile.cjs");
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const dotenv__namespace = /* @__PURE__ */ _interopNamespaceDefault(dotenv);
const readProjectEnvironment = async (args) => {
  let vars = {};
  for (const filename of args.filenames) {
    const hasProjectFile = await checkHasProjectFile.checkHasProjectFile({
      filename,
      helpers: args.helpers
    });
    if (!hasProjectFile) {
      continue;
    }
    const contents = await readProjectFile.readProjectFile({
      filename,
      helpers: args.helpers
    });
    vars = {
      ...vars,
      ...dotenv__namespace.parse(contents)
    };
  }
  return {
    environment: vars[args.variableName]
  };
};
exports.readProjectEnvironment = readProjectEnvironment;
//# sourceMappingURL=readProjectEnvironment.cjs.map
