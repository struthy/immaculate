{"version":3,"file":"writeProjectEnvironment.cjs","sources":["../../../src/fs/writeProjectEnvironment.ts"],"sourcesContent":["import * as dotenv from \"dotenv\";\n\nimport {\n\tcheckHasProjectFile,\n\tCheckHasProjectFileArgs,\n} from \"./checkHasProjectFile\";\nimport { readProjectFile, ReadProjectFileArgs } from \"./readProjectFile\";\nimport { writeProjectFile, WriteProjectFileArgs } from \"./writeProjectFile\";\n\nexport type WriteProjectEnvironmentArgs = {\n\tvariableName: string;\n\tenvironment: string | undefined;\n} & Omit<CheckHasProjectFileArgs, \"filename\"> &\n\tOmit<ReadProjectFileArgs, \"filename\"> &\n\tOmit<WriteProjectFileArgs, \"contents\" | \"format\" | \"formatOptions\">;\n\nexport const writeProjectEnvironment = async (\n\targs: WriteProjectEnvironmentArgs,\n): Promise<string | undefined> => {\n\tconst hasEnvironmentVariableFile = await checkHasProjectFile({\n\t\tfilename: args.filename,\n\t\thelpers: args.helpers,\n\t});\n\n\tif (!hasEnvironmentVariableFile && args.environment === undefined) {\n\t\treturn;\n\t}\n\n\tlet contents = hasEnvironmentVariableFile\n\t\t? await readProjectFile({\n\t\t\t\tfilename: args.filename,\n\t\t\t\thelpers: args.helpers,\n\t\t\t\tencoding: \"utf8\",\n\t\t  })\n\t\t: \"\";\n\n\tconst variableLine = `${args.variableName}=${args.environment}\\n`;\n\n\tconst hasExistingVariable = args.variableName in dotenv.parse(contents);\n\n\tif (hasExistingVariable) {\n\t\t// TODO: This regexp/replace is not working.\n\t\tcontents = contents.replace(\n\t\t\tnew RegExp(`^${args.variableName}=.*\\n?$`, \"m\"),\n\t\t\targs.environment === undefined ? \"\" : variableLine,\n\t\t);\n\t} else {\n\t\tif (!contents.endsWith(\"\\n\")) {\n\t\t\tcontents += \"\\n\";\n\t\t}\n\n\t\tcontents += variableLine;\n\t}\n\n\tawait writeProjectFile({\n\t\tfilename: args.filename,\n\t\tcontents,\n\t\tformat: false,\n\t\thelpers: args.helpers,\n\t});\n\n\treturn args.filename;\n};\n"],"names":["checkHasProjectFile","readProjectFile","dotenv","writeProjectFile"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAgBa,MAAA,0BAA0B,OACtC,SACgC;AAC1B,QAAA,6BAA6B,MAAMA,wCAAoB;AAAA,IAC5D,UAAU,KAAK;AAAA,IACf,SAAS,KAAK;AAAA,EAAA,CACd;AAED,MAAI,CAAC,8BAA8B,KAAK,gBAAgB,QAAW;AAClE;AAAA,EACA;AAEG,MAAA,WAAW,6BACZ,MAAMC,gCAAgB;AAAA,IACtB,UAAU,KAAK;AAAA,IACf,SAAS,KAAK;AAAA,IACd,UAAU;AAAA,EACT,CAAA,IACD;AAEH,QAAM,eAAe,GAAG,KAAK,gBAAgB,KAAK;AAAA;AAElD,QAAM,sBAAsB,KAAK,gBAAgBC,kBAAO,MAAM,QAAQ;AAEtE,MAAI,qBAAqB;AAExB,eAAW,SAAS,QACnB,IAAI,OAAO,IAAI,KAAK;AAAA,KAAuB,GAAG,GAC9C,KAAK,gBAAgB,SAAY,KAAK,YAAY;AAAA,EAAA,OAE7C;AACN,QAAI,CAAC,SAAS,SAAS,IAAI,GAAG;AACjB,kBAAA;AAAA,IACZ;AAEW,gBAAA;AAAA,EACZ;AAED,QAAMC,kCAAiB;AAAA,IACtB,UAAU,KAAK;AAAA,IACf;AAAA,IACA,QAAQ;AAAA,IACR,SAAS,KAAK;AAAA,EAAA,CACd;AAED,SAAO,KAAK;AACb;;"}