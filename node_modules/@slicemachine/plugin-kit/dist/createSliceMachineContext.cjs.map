{"version":3,"file":"createSliceMachineContext.cjs","sources":["../../src/createSliceMachineContext.ts"],"sourcesContent":["import { SliceMachineActions } from \"./createSliceMachineActions\";\nimport { SliceMachineHelpers } from \"./createSliceMachineHelpers\";\nimport { LoadedSliceMachinePlugin } from \"./defineSliceMachinePlugin\";\nimport { SliceMachineProject } from \"./types\";\n\n/**\n * Slice Machine context shared to plugins and hooks.\n */\nexport type SliceMachineContext<\n\tTPluginOptions extends Record<string, unknown>,\n> = {\n\tactions: SliceMachineActions;\n\thelpers: SliceMachineHelpers;\n\tproject: SliceMachineProject;\n\toptions: TPluginOptions;\n};\n\n/**\n * Arguments for `createSliceMachineContext()`.\n *\n * @typeParam TPluginOptions - Options for the plugin's context.\n */\ntype CreateSliceMachineContextArgs<\n\tTPluginOptions extends Record<string, unknown>,\n> = {\n\tactions: SliceMachineActions;\n\thelpers: SliceMachineHelpers;\n\tproject: SliceMachineProject;\n\tplugin: LoadedSliceMachinePlugin<TPluginOptions>;\n};\n\n/**\n * Creates Slice Machine context.\n *\n * @internal\n */\nexport const createSliceMachineContext = <\n\tTPluginOptions extends Record<string, unknown>,\n>({\n\tactions,\n\thelpers,\n\tproject,\n\tplugin,\n}: CreateSliceMachineContextArgs<TPluginOptions>): SliceMachineContext<TPluginOptions> => {\n\treturn {\n\t\tactions,\n\t\thelpers,\n\t\tproject,\n\t\toptions: plugin.options,\n\t};\n};\n"],"names":[],"mappings":";;AAoCO,MAAM,4BAA4B,CAEvC,EACD,SACA,SACA,SACA,aACwF;AACjF,SAAA;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS,OAAO;AAAA,EAAA;AAElB;;"}