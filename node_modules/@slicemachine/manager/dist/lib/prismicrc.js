import * as path from "node:path";
import * as t from "io-ts";
import * as rc9 from "rc9";
import { decode } from "./decode.js";
const PRISMICRC = ".prismicrc";
const Prismicrc = t.partial({
  telemetry: t.boolean
});
const readRawPrismicrc = (dir) => {
  const rawPrismicrc = dir ? rc9.read({ dir, name: PRISMICRC }) : rc9.readUser(PRISMICRC);
  const { value: prismicrc, error } = decode(Prismicrc, rawPrismicrc);
  if (error) {
    throw new Error(`Failed to parse ${dir ? path.resolve(dir, PRISMICRC) : `~/${PRISMICRC}`}: ${error.errors.join(", ")}`);
  }
  return prismicrc;
};
const readPrismicrc = (dir) => {
  const userPrismicrc = readRawPrismicrc();
  const projectPrismicrc = readRawPrismicrc(dir);
  return {
    ...userPrismicrc,
    ...projectPrismicrc
  };
};
export {
  readPrismicrc,
  readRawPrismicrc
};
//# sourceMappingURL=prismicrc.js.map
