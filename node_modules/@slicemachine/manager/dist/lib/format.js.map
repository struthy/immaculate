{"version":3,"file":"format.js","sources":["../../../src/lib/format.ts"],"sourcesContent":["import prettier from \"prettier\";\nimport { stripIndent } from \"common-tags\";\n\ntype FormatOptions = {\n\tprettier?: prettier.Options;\n\t/**\n\t * Determines if a newline is included at the end of the formatted result.\n\t *\n\t * @defaultValue `true`\n\t */\n\tincludeNewlineAtEnd?: boolean;\n};\n\nexport const format = async (\n\tsource: string,\n\tfilePath: string,\n\toptions?: FormatOptions,\n): Promise<string> => {\n\tlet formatted = stripIndent(source);\n\n\tconst prettierOptions = await prettier.resolveConfig(filePath);\n\n\tformatted = await prettier.format(formatted, {\n\t\t...prettierOptions,\n\t\tfilepath: filePath,\n\t\t...(options?.prettier ?? {}),\n\t});\n\n\tif (options?.includeNewlineAtEnd === false) {\n\t\tformatted.replace(/[\\r\\n]+$/, \"\");\n\t}\n\n\treturn formatted;\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAaO,MAAM,SAAS,OACrB,QACA,UACA,YACoB;AAChB,MAAA,YAAY,YAAY,MAAM;AAElC,QAAM,kBAAkB,MAAM,SAAS,cAAc,QAAQ;AAEjD,cAAA,MAAM,SAAS,OAAO,WAAW;AAAA,IAC5C,GAAG;AAAA,IACH,UAAU;AAAA,IACV,IAAI,mCAAS,aAAY;GACzB;AAEG,OAAA,mCAAS,yBAAwB,OAAO;AACjC,cAAA,QAAQ,YAAY,EAAE;AAAA,EAChC;AAEM,SAAA;AACR;"}