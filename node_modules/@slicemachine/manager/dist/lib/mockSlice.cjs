"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const mocks = require("@prismicio/mocks");
const mockSlice = (args) => {
  const { model, mocks: mocks$1, diff } = args;
  return model.variations.map((variation) => {
    const variationMock = mocks$1 == null ? void 0 : mocks$1.find((m) => m.variation === variation.id);
    const mockConfig = {
      type: "SharedSlice",
      variation: variation.id
    };
    if (!variationMock) {
      return mocks.SharedSliceMock.generate(model, mockConfig);
    }
    if (!diff) {
      return variationMock;
    }
    if (Object.keys(variation.items || {}).length && variationMock.items.length === 0) {
      variationMock.items.push({ __TYPE__: "GroupItemContent", value: [] });
    }
    const patched = mocks.SharedSliceMock.patch(diff, variationMock, mockConfig);
    if (!patched.ok) {
      return variationMock;
    }
    if (!patched.result) {
      return mocks.SharedSliceMock.generate(model, mockConfig);
    }
    return patched.result;
  });
};
exports.mockSlice = mockSlice;
//# sourceMappingURL=mockSlice.cjs.map
