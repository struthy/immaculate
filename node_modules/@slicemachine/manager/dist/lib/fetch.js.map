{"version":3,"file":"fetch.js","sources":["../../../src/lib/fetch.ts"],"sourcesContent":["// This temporary wrapper around `node-fetch` fixes an issue where quick\n// consecutive network requests cause failed requests.\n//\n// See https://github.com/node-fetch/node-fetch/issues/1735 for more details.\n//\n// TODO: Remove this wrapper and replace all imports with `node-fetch` if https://github.com/node-fetch/node-fetch/pull/1736 is merged.\n\nimport * as http from \"node:http\";\nimport * as https from \"node:https\";\nimport baseFetch from \"node-fetch\";\n\nexport * from \"node-fetch\";\n\n/**\n * The default HTTP Agent with `keepAlive: true` used in `fetch()` requests.\n */\nconst DEFAULT_HTTP_AGENT = new http.Agent({ keepAlive: true });\n\n/**\n * The default HTTPS Agent with `keepAlive: true` used in `fetch()` requests.\n */\nconst DEFAULT_HTTPS_AGENT = new https.Agent({ keepAlive: true });\n\n/**\n * Patched `fetch()` from `node-fetch` that fixes a bug where quick consecutive\n * network requests cause failed requests.\n *\n * Use this `fetch()` in place of `node-fetch`'s `fetch()`.\n *\n * @remarks\n * `fetch()` is patched by setting an HTTP/HTTPS Agent with `keepAlive: true`.\n * If you need to assign an Agent, be sure to retain the `keepAlive: true`\n * option.\n */\nconst fetch: typeof baseFetch = (url, init) => {\n\treturn baseFetch(url, {\n\t\tagent: (parsedURL) => {\n\t\t\treturn parsedURL.protocol === \"http:\"\n\t\t\t\t? DEFAULT_HTTP_AGENT\n\t\t\t\t: DEFAULT_HTTPS_AGENT;\n\t\t},\n\t\t...init,\n\t});\n};\n\nexport default fetch;\n"],"names":["baseFetch"],"mappings":";;;AAgBA,MAAM,qBAAqB,IAAI,KAAK,MAAM,EAAE,WAAW,MAAM;AAK7D,MAAM,sBAAsB,IAAI,MAAM,MAAM,EAAE,WAAW,MAAM;AAa/D,MAAM,QAA0B,CAAC,KAAK,SAAQ;AAC7C,SAAOA,QAAU,KAAK;AAAA,IACrB,OAAO,CAAC,cAAa;AACb,aAAA,UAAU,aAAa,UAC3B,qBACA;AAAA,IACJ;AAAA,IACA,GAAG;AAAA,EAAA,CACH;AACF;AAEA,MAAA,UAAe;"}