{"version":3,"file":"decode.js","sources":["../../../src/lib/decode.ts"],"sourcesContent":["import * as t from \"io-ts\";\nimport * as E from \"fp-ts/Either\";\nimport { pipe } from \"fp-ts/function\";\n\nimport { DecodeError } from \"./DecodeError\";\n\nexport type DecodeReturnType<A, _O, I> =\n\t| {\n\t\t\tvalue: A;\n\t\t\terror?: never;\n\t  }\n\t| {\n\t\t\tvalue?: never;\n\t\t\terror: DecodeError<I>;\n\t  };\n\nexport const decode = <A, O, I>(\n\tcodec: t.Type<A, O, I>,\n\tinput: I,\n): DecodeReturnType<A, O, I> => {\n\treturn pipe(\n\t\tcodec.decode(input),\n\t\tE.foldW(\n\t\t\t(errors) => {\n\t\t\t\treturn {\n\t\t\t\t\terror: new DecodeError({ input, errors }),\n\t\t\t\t};\n\t\t\t},\n\t\t\t(value) => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue,\n\t\t\t\t};\n\t\t\t},\n\t\t),\n\t);\n};\n"],"names":["E.foldW"],"mappings":";;;AAgBa,MAAA,SAAS,CACrB,OACA,UAC8B;AACvB,SAAA,KACN,MAAM,OAAO,KAAK,GAClBA,MACC,CAAC,WAAU;AACH,WAAA;AAAA,MACN,OAAO,IAAI,YAAY,EAAE,OAAO,QAAQ;AAAA,IAAA;AAAA,EAE1C,GACA,CAAC,UAAS;AACF,WAAA;AAAA,MACN;AAAA,IAAA;AAAA,EAED,CAAA,CACD;AAEH;"}