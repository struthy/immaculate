import { HookError } from "@slicemachine/plugin-kit";
export declare class SliceMachineError extends Error {
    name: string;
}
export declare class UnauthorizedError extends SliceMachineError {
    name: "SMUnauthorizedError";
}
export declare class UnauthenticatedError extends SliceMachineError {
    name: "SMUnauthenticatedError";
    message: string;
}
export declare class NotFoundError extends SliceMachineError {
    name: "SMNotFoundError";
}
export declare class UnexpectedDataError extends SliceMachineError {
    name: "SMUnexpectedDataError";
}
export declare class InternalError extends SliceMachineError {
    name: "SMInternalError";
}
export declare class PluginError extends SliceMachineError {
    name: "SMPluginError";
}
export declare class PluginHookResultError extends SliceMachineError {
    name: "SMPluginHookResultError";
    constructor(errors: HookError[]);
}
export declare class InvalidActiveEnvironmentError extends SliceMachineError {
    name: "SMInvalidActiveEnvironmentError";
}
export declare class UnsupportedError extends SliceMachineError {
    name: "SMUnsupportedError";
}
type SliceMachineErrorNames = "SMSliceMachineError" | UnauthorizedError["name"] | UnauthenticatedError["name"] | NotFoundError["name"] | UnexpectedDataError["name"] | InternalError["name"] | PluginError["name"] | PluginHookResultError["name"] | InvalidActiveEnvironmentError["name"] | UnsupportedError["name"];
type ShallowSliceMachineError<TName extends SliceMachineErrorNames> = Error & {
    name: TName;
};
export declare const isSliceMachineError: <TName extends SliceMachineErrorNames>(error: unknown, name?: TName | undefined) => error is TName extends string ? ShallowSliceMachineError<TName> : Error;
export declare const isUnauthorizedError: (error: unknown) => error is ShallowSliceMachineError<"SMUnauthorizedError">;
export declare const isUnauthenticatedError: (error: unknown) => error is ShallowSliceMachineError<"SMUnauthenticatedError">;
export declare const isNotFoundError: (error: unknown) => error is ShallowSliceMachineError<"SMNotFoundError">;
export declare const isUnexpectedDataError: (error: unknown) => error is ShallowSliceMachineError<"SMUnexpectedDataError">;
export declare const isInternalError: (error: unknown) => error is ShallowSliceMachineError<"SMInternalError">;
export declare const isPluginError: (error: unknown) => error is ShallowSliceMachineError<"SMPluginError">;
export declare const isInvalidActiveEnvironmentError: (error: unknown) => error is ShallowSliceMachineError<"SMInvalidActiveEnvironmentError">;
export declare const isUnsupportedError: (error: unknown) => error is ShallowSliceMachineError<"SMUnsupportedError">;
export {};
