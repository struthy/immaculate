{"version":3,"file":"replaceLeaves.cjs","sources":["../../../../../../../node_modules/r19/dist/lib/replaceLeaves.js"],"sourcesContent":["const isPlainObject = (value) => {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n};\nconst replaceLeaves = async (input, replacer) => {\n  if (Array.isArray(input)) {\n    const preparedProcedureArgs = [];\n    for (let i = 0; i < input.length; i++) {\n      preparedProcedureArgs[i] = await replaceLeaves(input[i], replacer);\n    }\n    return preparedProcedureArgs;\n  }\n  if (isPlainObject(input)) {\n    const preparedProcedureArgs = {};\n    for (const key in input) {\n      preparedProcedureArgs[key] = await replaceLeaves(input[key], replacer);\n    }\n    return preparedProcedureArgs;\n  }\n  return await replacer(input);\n};\nexport {\n  replaceLeaves\n};\n//# sourceMappingURL=replaceLeaves.js.map\n"],"names":[],"mappings":";;AAAA,MAAM,gBAAgB,CAAC,UAAU;AAC/B,MAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAC/C,WAAO;AAAA,EACR;AACD,QAAM,YAAY,OAAO,eAAe,KAAK;AAC7C,UAAQ,cAAc,QAAQ,cAAc,OAAO,aAAa,OAAO,eAAe,SAAS,MAAM,SAAS,EAAE,OAAO,eAAe,UAAU,EAAE,OAAO,YAAY;AACvK;AACK,MAAC,gBAAgB,OAAO,OAAO,aAAa;AAC/C,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,UAAM,wBAAwB,CAAA;AAC9B,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,4BAAsB,CAAC,IAAI,MAAM,cAAc,MAAM,CAAC,GAAG,QAAQ;AAAA,IAClE;AACD,WAAO;AAAA,EACR;AACD,MAAI,cAAc,KAAK,GAAG;AACxB,UAAM,wBAAwB,CAAA;AAC9B,eAAW,OAAO,OAAO;AACvB,4BAAsB,GAAG,IAAI,MAAM,cAAc,MAAM,GAAG,GAAG,QAAQ;AAAA,IACtE;AACD,WAAO;AAAA,EACR;AACD,SAAO,MAAM,SAAS,KAAK;AAC7B;;","x_google_ignoreList":[0]}