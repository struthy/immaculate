{"version":3,"file":"resolveCommand.cjs","sources":["../../../../../../../node_modules/cross-spawn/lib/util/resolveCommand.js"],"sourcesContent":["'use strict';\n\nconst path = require('path');\nconst which = require('which');\nconst getPathKey = require('path-key');\n\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n    const env = parsed.options.env || process.env;\n    const cwd = process.cwd();\n    const hasCustomCwd = parsed.options.cwd != null;\n    // Worker threads do not have process.chdir()\n    const shouldSwitchCwd = hasCustomCwd && process.chdir !== undefined && !process.chdir.disabled;\n\n    // If a custom `cwd` was specified, we need to change the process cwd\n    // because `which` will do stat calls but does not support a custom cwd\n    if (shouldSwitchCwd) {\n        try {\n            process.chdir(parsed.options.cwd);\n        } catch (err) {\n            /* Empty */\n        }\n    }\n\n    let resolved;\n\n    try {\n        resolved = which.sync(parsed.command, {\n            path: env[getPathKey({ env })],\n            pathExt: withoutPathExt ? path.delimiter : undefined,\n        });\n    } catch (e) {\n        /* Empty */\n    } finally {\n        if (shouldSwitchCwd) {\n            process.chdir(cwd);\n        }\n    }\n\n    // If we successfully resolved, ensure that an absolute path is returned\n    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n    if (resolved) {\n        resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n    }\n\n    return resolved;\n}\n\nfunction resolveCommand(parsed) {\n    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\n\nmodule.exports = resolveCommand;\n"],"names":["require$$1","require$$2"],"mappings":";;;;;AAEA,MAAM,OAAO;AACb,MAAM,QAAQA,QAAAA;AACd,MAAM,aAAaC,MAAAA;AAEnB,SAAS,sBAAsB,QAAQ,gBAAgB;AACnD,QAAM,MAAM,OAAO,QAAQ,OAAO,QAAQ;AAC1C,QAAM,MAAM,QAAQ;AACpB,QAAM,eAAe,OAAO,QAAQ,OAAO;AAE3C,QAAM,kBAAkB,gBAAgB,QAAQ,UAAU,UAAa,CAAC,QAAQ,MAAM;AAItF,MAAI,iBAAiB;AACjB,QAAI;AACA,cAAQ,MAAM,OAAO,QAAQ,GAAG;AAAA,IACnC,SAAQ,KAAP;AAAA,IAED;AAAA,EACJ;AAED,MAAI;AAEJ,MAAI;AACA,eAAW,MAAM,KAAK,OAAO,SAAS;AAAA,MAClC,MAAM,IAAI,WAAW,EAAE,IAAK,CAAA,CAAC;AAAA,MAC7B,SAAS,iBAAiB,KAAK,YAAY;AAAA,IACvD,CAAS;AAAA,EACJ,SAAQ,GAAP;AAAA,EAEN,UAAc;AACN,QAAI,iBAAiB;AACjB,cAAQ,MAAM,GAAG;AAAA,IACpB;AAAA,EACJ;AAID,MAAI,UAAU;AACV,eAAW,KAAK,QAAQ,eAAe,OAAO,QAAQ,MAAM,IAAI,QAAQ;AAAA,EAC3E;AAED,SAAO;AACX;AAEA,SAAS,eAAe,QAAQ;AAC5B,SAAO,sBAAsB,MAAM,KAAK,sBAAsB,QAAQ,IAAI;AAC9E;AAEA,IAAA,mBAAiB;;","x_google_ignoreList":[0]}