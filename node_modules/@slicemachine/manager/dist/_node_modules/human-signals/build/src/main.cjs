"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const os = require("node:os");
const realtime = require("./realtime.cjs");
const signals = require("./signals.cjs");
const getSignalsByName = () => {
  const signals$1 = signals.getSignals();
  return Object.fromEntries(signals$1.map(getSignalByName));
};
const getSignalByName = ({
  name,
  number,
  description,
  supported,
  action,
  forced,
  standard
}) => [name, { name, number, description, supported, action, forced, standard }];
const signalsByName = getSignalsByName();
const getSignalsByNumber = () => {
  const signals$1 = signals.getSignals();
  const length = realtime.SIGRTMAX + 1;
  const signalsA = Array.from({ length }, (value, number) => getSignalByNumber(number, signals$1));
  return Object.assign({}, ...signalsA);
};
const getSignalByNumber = (number, signals2) => {
  const signal = findSignalByNumber(number, signals2);
  if (signal === void 0) {
    return {};
  }
  const { name, description, supported, action, forced, standard } = signal;
  return {
    [number]: {
      name,
      number,
      description,
      supported,
      action,
      forced,
      standard
    }
  };
};
const findSignalByNumber = (number, signals2) => {
  const signal = signals2.find(({ name }) => os.constants.signals[name] === number);
  if (signal !== void 0) {
    return signal;
  }
  return signals2.find((signalA) => signalA.number === number);
};
getSignalsByNumber();
exports.signalsByName = signalsByName;
//# sourceMappingURL=main.cjs.map
