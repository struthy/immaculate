{"version":3,"file":"decode.cjs","sources":["../../../../../../../node_modules/@msgpack/msgpack/dist.es5+esm/decode.mjs"],"sourcesContent":["import { Decoder } from \"./Decoder.mjs\";\nexport var defaultDecodeOptions = {};\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode(buffer, options) {\n    if (options === void 0) { options = defaultDecodeOptions; }\n    var decoder = new Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decode(buffer);\n}\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti(buffer, options) {\n    if (options === void 0) { options = defaultDecodeOptions; }\n    var decoder = new Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decodeMulti(buffer);\n}\n//# sourceMappingURL=decode.mjs.map"],"names":["Decoder"],"mappings":";;;AACU,IAAC,uBAAuB,CAAG;AAU9B,SAAS,OAAO,QAAQ,SAAS;AACpC,MAAI,YAAY,QAAQ;AAAE,cAAU;AAAA,EAAuB;AAC3D,MAAI,UAAU,IAAIA,gBAAQ,QAAQ,gBAAgB,QAAQ,SAAS,QAAQ,cAAc,QAAQ,cAAc,QAAQ,gBAAgB,QAAQ,cAAc,QAAQ,YAAY;AACjL,SAAO,QAAQ,OAAO,MAAM;AAChC;;;","x_google_ignoreList":[0]}