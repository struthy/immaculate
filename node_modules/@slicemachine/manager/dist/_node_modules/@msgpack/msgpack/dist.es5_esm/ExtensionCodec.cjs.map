{"version":3,"file":"ExtensionCodec.cjs","sources":["../../../../../../../node_modules/@msgpack/msgpack/dist.es5+esm/ExtensionCodec.mjs"],"sourcesContent":["// ExtensionCodec to handle MessagePack extensions\nimport { ExtData } from \"./ExtData.mjs\";\nimport { timestampExtension } from \"./timestamp.mjs\";\nvar ExtensionCodec = /** @class */ (function () {\n    function ExtensionCodec() {\n        // built-in extensions\n        this.builtInEncoders = [];\n        this.builtInDecoders = [];\n        // custom extensions\n        this.encoders = [];\n        this.decoders = [];\n        this.register(timestampExtension);\n    }\n    ExtensionCodec.prototype.register = function (_a) {\n        var type = _a.type, encode = _a.encode, decode = _a.decode;\n        if (type >= 0) {\n            // custom extensions\n            this.encoders[type] = encode;\n            this.decoders[type] = decode;\n        }\n        else {\n            // built-in extensions\n            var index = 1 + type;\n            this.builtInEncoders[index] = encode;\n            this.builtInDecoders[index] = decode;\n        }\n    };\n    ExtensionCodec.prototype.tryToEncode = function (object, context) {\n        // built-in extensions\n        for (var i = 0; i < this.builtInEncoders.length; i++) {\n            var encodeExt = this.builtInEncoders[i];\n            if (encodeExt != null) {\n                var data = encodeExt(object, context);\n                if (data != null) {\n                    var type = -1 - i;\n                    return new ExtData(type, data);\n                }\n            }\n        }\n        // custom extensions\n        for (var i = 0; i < this.encoders.length; i++) {\n            var encodeExt = this.encoders[i];\n            if (encodeExt != null) {\n                var data = encodeExt(object, context);\n                if (data != null) {\n                    var type = i;\n                    return new ExtData(type, data);\n                }\n            }\n        }\n        if (object instanceof ExtData) {\n            // to keep ExtData as is\n            return object;\n        }\n        return null;\n    };\n    ExtensionCodec.prototype.decode = function (data, type, context) {\n        var decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n        if (decodeExt) {\n            return decodeExt(data, type, context);\n        }\n        else {\n            // decode() does not fail, returns ExtData instead.\n            return new ExtData(type, data);\n        }\n    };\n    ExtensionCodec.defaultCodec = new ExtensionCodec();\n    return ExtensionCodec;\n}());\nexport { ExtensionCodec };\n//# sourceMappingURL=ExtensionCodec.mjs.map"],"names":["ExtensionCodec","timestampExtension","ExtData"],"mappings":";;;;AAGG,IAAC;AAAA;AAAA,EAAgC,WAAY;AAC5C,aAASA,kBAAiB;AAEtB,WAAK,kBAAkB;AACvB,WAAK,kBAAkB;AAEvB,WAAK,WAAW;AAChB,WAAK,WAAW;AAChB,WAAK,SAASC,UAAAA,kBAAkB;AAAA,IACnC;AACD,IAAAD,gBAAe,UAAU,WAAW,SAAU,IAAI;AAC9C,UAAI,OAAO,GAAG,MAAM,SAAS,GAAG,QAAQ,SAAS,GAAG;AACpD,UAAI,QAAQ,GAAG;AAEX,aAAK,SAAS,IAAI,IAAI;AACtB,aAAK,SAAS,IAAI,IAAI;AAAA,MACzB,OACI;AAED,YAAI,QAAQ,IAAI;AAChB,aAAK,gBAAgB,KAAK,IAAI;AAC9B,aAAK,gBAAgB,KAAK,IAAI;AAAA,MACjC;AAAA,IACT;AACI,IAAAA,gBAAe,UAAU,cAAc,SAAU,QAAQ,SAAS;AAE9D,eAAS,IAAI,GAAG,IAAI,KAAK,gBAAgB,QAAQ,KAAK;AAClD,YAAI,YAAY,KAAK,gBAAgB,CAAC;AACtC,YAAI,aAAa,MAAM;AACnB,cAAI,OAAO,UAAU,QAAQ,OAAO;AACpC,cAAI,QAAQ,MAAM;AACd,gBAAI,OAAO,KAAK;AAChB,mBAAO,IAAIE,QAAO,QAAC,MAAM,IAAI;AAAA,UAChC;AAAA,QACJ;AAAA,MACJ;AAED,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,YAAI,YAAY,KAAK,SAAS,CAAC;AAC/B,YAAI,aAAa,MAAM;AACnB,cAAI,OAAO,UAAU,QAAQ,OAAO;AACpC,cAAI,QAAQ,MAAM;AACd,gBAAI,OAAO;AACX,mBAAO,IAAIA,QAAO,QAAC,MAAM,IAAI;AAAA,UAChC;AAAA,QACJ;AAAA,MACJ;AACD,UAAI,kBAAkBA,QAAAA,SAAS;AAE3B,eAAO;AAAA,MACV;AACD,aAAO;AAAA,IACf;AACI,IAAAF,gBAAe,UAAU,SAAS,SAAU,MAAM,MAAM,SAAS;AAC7D,UAAI,YAAY,OAAO,IAAI,KAAK,gBAAgB,KAAK,IAAI,IAAI,KAAK,SAAS,IAAI;AAC/E,UAAI,WAAW;AACX,eAAO,UAAU,MAAM,MAAM,OAAO;AAAA,MACvC,OACI;AAED,eAAO,IAAIE,QAAO,QAAC,MAAM,IAAI;AAAA,MAChC;AAAA,IACT;AACI,IAAAF,gBAAe,eAAe,IAAIA;AAClC,WAAOA;AAAA,EACX,EAAG;AAAA;;","x_google_ignoreList":[0]}