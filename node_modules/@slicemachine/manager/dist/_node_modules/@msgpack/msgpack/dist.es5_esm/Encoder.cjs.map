{"version":3,"file":"Encoder.cjs","sources":["../../../../../../../node_modules/@msgpack/msgpack/dist.es5+esm/Encoder.mjs"],"sourcesContent":["import { utf8EncodeJs, utf8Count, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8.mjs\";\nimport { ExtensionCodec } from \"./ExtensionCodec.mjs\";\nimport { setInt64, setUint64 } from \"./utils/int.mjs\";\nimport { ensureUint8Array } from \"./utils/typedArrays.mjs\";\nexport var DEFAULT_MAX_DEPTH = 100;\nexport var DEFAULT_INITIAL_BUFFER_SIZE = 2048;\nvar Encoder = /** @class */ (function () {\n    function Encoder(extensionCodec, context, maxDepth, initialBufferSize, sortKeys, forceFloat32, ignoreUndefined, forceIntegerToFloat) {\n        if (extensionCodec === void 0) { extensionCodec = ExtensionCodec.defaultCodec; }\n        if (context === void 0) { context = undefined; }\n        if (maxDepth === void 0) { maxDepth = DEFAULT_MAX_DEPTH; }\n        if (initialBufferSize === void 0) { initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE; }\n        if (sortKeys === void 0) { sortKeys = false; }\n        if (forceFloat32 === void 0) { forceFloat32 = false; }\n        if (ignoreUndefined === void 0) { ignoreUndefined = false; }\n        if (forceIntegerToFloat === void 0) { forceIntegerToFloat = false; }\n        this.extensionCodec = extensionCodec;\n        this.context = context;\n        this.maxDepth = maxDepth;\n        this.initialBufferSize = initialBufferSize;\n        this.sortKeys = sortKeys;\n        this.forceFloat32 = forceFloat32;\n        this.ignoreUndefined = ignoreUndefined;\n        this.forceIntegerToFloat = forceIntegerToFloat;\n        this.pos = 0;\n        this.view = new DataView(new ArrayBuffer(this.initialBufferSize));\n        this.bytes = new Uint8Array(this.view.buffer);\n    }\n    Encoder.prototype.reinitializeState = function () {\n        this.pos = 0;\n    };\n    /**\n     * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n     *\n     * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n     */\n    Encoder.prototype.encodeSharedRef = function (object) {\n        this.reinitializeState();\n        this.doEncode(object, 1);\n        return this.bytes.subarray(0, this.pos);\n    };\n    /**\n     * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n     */\n    Encoder.prototype.encode = function (object) {\n        this.reinitializeState();\n        this.doEncode(object, 1);\n        return this.bytes.slice(0, this.pos);\n    };\n    Encoder.prototype.doEncode = function (object, depth) {\n        if (depth > this.maxDepth) {\n            throw new Error(\"Too deep objects in depth \".concat(depth));\n        }\n        if (object == null) {\n            this.encodeNil();\n        }\n        else if (typeof object === \"boolean\") {\n            this.encodeBoolean(object);\n        }\n        else if (typeof object === \"number\") {\n            this.encodeNumber(object);\n        }\n        else if (typeof object === \"string\") {\n            this.encodeString(object);\n        }\n        else {\n            this.encodeObject(object, depth);\n        }\n    };\n    Encoder.prototype.ensureBufferSizeToWrite = function (sizeToWrite) {\n        var requiredSize = this.pos + sizeToWrite;\n        if (this.view.byteLength < requiredSize) {\n            this.resizeBuffer(requiredSize * 2);\n        }\n    };\n    Encoder.prototype.resizeBuffer = function (newSize) {\n        var newBuffer = new ArrayBuffer(newSize);\n        var newBytes = new Uint8Array(newBuffer);\n        var newView = new DataView(newBuffer);\n        newBytes.set(this.bytes);\n        this.view = newView;\n        this.bytes = newBytes;\n    };\n    Encoder.prototype.encodeNil = function () {\n        this.writeU8(0xc0);\n    };\n    Encoder.prototype.encodeBoolean = function (object) {\n        if (object === false) {\n            this.writeU8(0xc2);\n        }\n        else {\n            this.writeU8(0xc3);\n        }\n    };\n    Encoder.prototype.encodeNumber = function (object) {\n        if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n            if (object >= 0) {\n                if (object < 0x80) {\n                    // positive fixint\n                    this.writeU8(object);\n                }\n                else if (object < 0x100) {\n                    // uint 8\n                    this.writeU8(0xcc);\n                    this.writeU8(object);\n                }\n                else if (object < 0x10000) {\n                    // uint 16\n                    this.writeU8(0xcd);\n                    this.writeU16(object);\n                }\n                else if (object < 0x100000000) {\n                    // uint 32\n                    this.writeU8(0xce);\n                    this.writeU32(object);\n                }\n                else {\n                    // uint 64\n                    this.writeU8(0xcf);\n                    this.writeU64(object);\n                }\n            }\n            else {\n                if (object >= -0x20) {\n                    // negative fixint\n                    this.writeU8(0xe0 | (object + 0x20));\n                }\n                else if (object >= -0x80) {\n                    // int 8\n                    this.writeU8(0xd0);\n                    this.writeI8(object);\n                }\n                else if (object >= -0x8000) {\n                    // int 16\n                    this.writeU8(0xd1);\n                    this.writeI16(object);\n                }\n                else if (object >= -0x80000000) {\n                    // int 32\n                    this.writeU8(0xd2);\n                    this.writeI32(object);\n                }\n                else {\n                    // int 64\n                    this.writeU8(0xd3);\n                    this.writeI64(object);\n                }\n            }\n        }\n        else {\n            // non-integer numbers\n            if (this.forceFloat32) {\n                // float 32\n                this.writeU8(0xca);\n                this.writeF32(object);\n            }\n            else {\n                // float 64\n                this.writeU8(0xcb);\n                this.writeF64(object);\n            }\n        }\n    };\n    Encoder.prototype.writeStringHeader = function (byteLength) {\n        if (byteLength < 32) {\n            // fixstr\n            this.writeU8(0xa0 + byteLength);\n        }\n        else if (byteLength < 0x100) {\n            // str 8\n            this.writeU8(0xd9);\n            this.writeU8(byteLength);\n        }\n        else if (byteLength < 0x10000) {\n            // str 16\n            this.writeU8(0xda);\n            this.writeU16(byteLength);\n        }\n        else if (byteLength < 0x100000000) {\n            // str 32\n            this.writeU8(0xdb);\n            this.writeU32(byteLength);\n        }\n        else {\n            throw new Error(\"Too long string: \".concat(byteLength, \" bytes in UTF-8\"));\n        }\n    };\n    Encoder.prototype.encodeString = function (object) {\n        var maxHeaderSize = 1 + 4;\n        var strLength = object.length;\n        if (strLength > TEXT_ENCODER_THRESHOLD) {\n            var byteLength = utf8Count(object);\n            this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n            this.writeStringHeader(byteLength);\n            utf8EncodeTE(object, this.bytes, this.pos);\n            this.pos += byteLength;\n        }\n        else {\n            var byteLength = utf8Count(object);\n            this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n            this.writeStringHeader(byteLength);\n            utf8EncodeJs(object, this.bytes, this.pos);\n            this.pos += byteLength;\n        }\n    };\n    Encoder.prototype.encodeObject = function (object, depth) {\n        // try to encode objects with custom codec first of non-primitives\n        var ext = this.extensionCodec.tryToEncode(object, this.context);\n        if (ext != null) {\n            this.encodeExtension(ext);\n        }\n        else if (Array.isArray(object)) {\n            this.encodeArray(object, depth);\n        }\n        else if (ArrayBuffer.isView(object)) {\n            this.encodeBinary(object);\n        }\n        else if (typeof object === \"object\") {\n            this.encodeMap(object, depth);\n        }\n        else {\n            // symbol, function and other special object come here unless extensionCodec handles them.\n            throw new Error(\"Unrecognized object: \".concat(Object.prototype.toString.apply(object)));\n        }\n    };\n    Encoder.prototype.encodeBinary = function (object) {\n        var size = object.byteLength;\n        if (size < 0x100) {\n            // bin 8\n            this.writeU8(0xc4);\n            this.writeU8(size);\n        }\n        else if (size < 0x10000) {\n            // bin 16\n            this.writeU8(0xc5);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // bin 32\n            this.writeU8(0xc6);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large binary: \".concat(size));\n        }\n        var bytes = ensureUint8Array(object);\n        this.writeU8a(bytes);\n    };\n    Encoder.prototype.encodeArray = function (object, depth) {\n        var size = object.length;\n        if (size < 16) {\n            // fixarray\n            this.writeU8(0x90 + size);\n        }\n        else if (size < 0x10000) {\n            // array 16\n            this.writeU8(0xdc);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // array 32\n            this.writeU8(0xdd);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large array: \".concat(size));\n        }\n        for (var _i = 0, object_1 = object; _i < object_1.length; _i++) {\n            var item = object_1[_i];\n            this.doEncode(item, depth + 1);\n        }\n    };\n    Encoder.prototype.countWithoutUndefined = function (object, keys) {\n        var count = 0;\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            if (object[key] !== undefined) {\n                count++;\n            }\n        }\n        return count;\n    };\n    Encoder.prototype.encodeMap = function (object, depth) {\n        var keys = Object.keys(object);\n        if (this.sortKeys) {\n            keys.sort();\n        }\n        var size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n        if (size < 16) {\n            // fixmap\n            this.writeU8(0x80 + size);\n        }\n        else if (size < 0x10000) {\n            // map 16\n            this.writeU8(0xde);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // map 32\n            this.writeU8(0xdf);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large map object: \".concat(size));\n        }\n        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n            var key = keys_2[_i];\n            var value = object[key];\n            if (!(this.ignoreUndefined && value === undefined)) {\n                this.encodeString(key);\n                this.doEncode(value, depth + 1);\n            }\n        }\n    };\n    Encoder.prototype.encodeExtension = function (ext) {\n        var size = ext.data.length;\n        if (size === 1) {\n            // fixext 1\n            this.writeU8(0xd4);\n        }\n        else if (size === 2) {\n            // fixext 2\n            this.writeU8(0xd5);\n        }\n        else if (size === 4) {\n            // fixext 4\n            this.writeU8(0xd6);\n        }\n        else if (size === 8) {\n            // fixext 8\n            this.writeU8(0xd7);\n        }\n        else if (size === 16) {\n            // fixext 16\n            this.writeU8(0xd8);\n        }\n        else if (size < 0x100) {\n            // ext 8\n            this.writeU8(0xc7);\n            this.writeU8(size);\n        }\n        else if (size < 0x10000) {\n            // ext 16\n            this.writeU8(0xc8);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // ext 32\n            this.writeU8(0xc9);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large extension object: \".concat(size));\n        }\n        this.writeI8(ext.type);\n        this.writeU8a(ext.data);\n    };\n    Encoder.prototype.writeU8 = function (value) {\n        this.ensureBufferSizeToWrite(1);\n        this.view.setUint8(this.pos, value);\n        this.pos++;\n    };\n    Encoder.prototype.writeU8a = function (values) {\n        var size = values.length;\n        this.ensureBufferSizeToWrite(size);\n        this.bytes.set(values, this.pos);\n        this.pos += size;\n    };\n    Encoder.prototype.writeI8 = function (value) {\n        this.ensureBufferSizeToWrite(1);\n        this.view.setInt8(this.pos, value);\n        this.pos++;\n    };\n    Encoder.prototype.writeU16 = function (value) {\n        this.ensureBufferSizeToWrite(2);\n        this.view.setUint16(this.pos, value);\n        this.pos += 2;\n    };\n    Encoder.prototype.writeI16 = function (value) {\n        this.ensureBufferSizeToWrite(2);\n        this.view.setInt16(this.pos, value);\n        this.pos += 2;\n    };\n    Encoder.prototype.writeU32 = function (value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setUint32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeI32 = function (value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setInt32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeF32 = function (value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setFloat32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeF64 = function (value) {\n        this.ensureBufferSizeToWrite(8);\n        this.view.setFloat64(this.pos, value);\n        this.pos += 8;\n    };\n    Encoder.prototype.writeU64 = function (value) {\n        this.ensureBufferSizeToWrite(8);\n        setUint64(this.view, this.pos, value);\n        this.pos += 8;\n    };\n    Encoder.prototype.writeI64 = function (value) {\n        this.ensureBufferSizeToWrite(8);\n        setInt64(this.view, this.pos, value);\n        this.pos += 8;\n    };\n    return Encoder;\n}());\nexport { Encoder };\n//# sourceMappingURL=Encoder.mjs.map"],"names":["Encoder","ExtensionCodec","TEXT_ENCODER_THRESHOLD","utf8Count","utf8EncodeTE","utf8EncodeJs","ensureUint8Array","setUint64","setInt64"],"mappings":"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","x_google_ignoreList":[0]}