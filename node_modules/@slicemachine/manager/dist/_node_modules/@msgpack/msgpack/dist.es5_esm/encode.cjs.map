{"version":3,"file":"encode.cjs","sources":["../../../../../../../node_modules/@msgpack/msgpack/dist.es5+esm/encode.mjs"],"sourcesContent":["import { Encoder } from \"./Encoder.mjs\";\nvar defaultEncodeOptions = {};\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode(value, options) {\n    if (options === void 0) { options = defaultEncodeOptions; }\n    var encoder = new Encoder(options.extensionCodec, options.context, options.maxDepth, options.initialBufferSize, options.sortKeys, options.forceFloat32, options.ignoreUndefined, options.forceIntegerToFloat);\n    return encoder.encodeSharedRef(value);\n}\n//# sourceMappingURL=encode.mjs.map"],"names":["Encoder"],"mappings":";;;AACA,IAAI,uBAAuB,CAAA;AAOpB,SAAS,OAAO,OAAO,SAAS;AACnC,MAAI,YAAY,QAAQ;AAAE,cAAU;AAAA,EAAuB;AAC3D,MAAI,UAAU,IAAIA,QAAAA,QAAQ,QAAQ,gBAAgB,QAAQ,SAAS,QAAQ,UAAU,QAAQ,mBAAmB,QAAQ,UAAU,QAAQ,cAAc,QAAQ,iBAAiB,QAAQ,mBAAmB;AAC5M,SAAO,QAAQ,gBAAgB,KAAK;AACxC;;","x_google_ignoreList":[0]}