{"version":3,"file":"CachedKeyDecoder.js","sources":["../../../../../../../node_modules/@msgpack/msgpack/dist.es5+esm/CachedKeyDecoder.mjs"],"sourcesContent":["import { utf8DecodeJs } from \"./utils/utf8.mjs\";\nvar DEFAULT_MAX_KEY_LENGTH = 16;\nvar DEFAULT_MAX_LENGTH_PER_KEY = 16;\nvar CachedKeyDecoder = /** @class */ (function () {\n    function CachedKeyDecoder(maxKeyLength, maxLengthPerKey) {\n        if (maxKeyLength === void 0) { maxKeyLength = DEFAULT_MAX_KEY_LENGTH; }\n        if (maxLengthPerKey === void 0) { maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY; }\n        this.maxKeyLength = maxKeyLength;\n        this.maxLengthPerKey = maxLengthPerKey;\n        this.hit = 0;\n        this.miss = 0;\n        // avoid `new Array(N)`, which makes a sparse array,\n        // because a sparse array is typically slower than a non-sparse array.\n        this.caches = [];\n        for (var i = 0; i < this.maxKeyLength; i++) {\n            this.caches.push([]);\n        }\n    }\n    CachedKeyDecoder.prototype.canBeCached = function (byteLength) {\n        return byteLength > 0 && byteLength <= this.maxKeyLength;\n    };\n    CachedKeyDecoder.prototype.find = function (bytes, inputOffset, byteLength) {\n        var records = this.caches[byteLength - 1];\n        FIND_CHUNK: for (var _i = 0, records_1 = records; _i < records_1.length; _i++) {\n            var record = records_1[_i];\n            var recordBytes = record.bytes;\n            for (var j = 0; j < byteLength; j++) {\n                if (recordBytes[j] !== bytes[inputOffset + j]) {\n                    continue FIND_CHUNK;\n                }\n            }\n            return record.str;\n        }\n        return null;\n    };\n    CachedKeyDecoder.prototype.store = function (bytes, value) {\n        var records = this.caches[bytes.length - 1];\n        var record = { bytes: bytes, str: value };\n        if (records.length >= this.maxLengthPerKey) {\n            // `records` are full!\n            // Set `record` to an arbitrary position.\n            records[(Math.random() * records.length) | 0] = record;\n        }\n        else {\n            records.push(record);\n        }\n    };\n    CachedKeyDecoder.prototype.decode = function (bytes, inputOffset, byteLength) {\n        var cachedValue = this.find(bytes, inputOffset, byteLength);\n        if (cachedValue != null) {\n            this.hit++;\n            return cachedValue;\n        }\n        this.miss++;\n        var str = utf8DecodeJs(bytes, inputOffset, byteLength);\n        // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n        var slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n        this.store(slicedCopyOfBytes, str);\n        return str;\n    };\n    return CachedKeyDecoder;\n}());\nexport { CachedKeyDecoder };\n//# sourceMappingURL=CachedKeyDecoder.mjs.map"],"names":["CachedKeyDecoder"],"mappings":";AACA,IAAI,yBAAyB;AAC7B,IAAI,6BAA6B;AAC9B,IAAC;AAAA;AAAA,EAAkC,WAAY;AAC9C,aAASA,kBAAiB,cAAc,iBAAiB;AACrD,UAAI,iBAAiB,QAAQ;AAAE,uBAAe;AAAA,MAAyB;AACvE,UAAI,oBAAoB,QAAQ;AAAE,0BAAkB;AAAA,MAA6B;AACjF,WAAK,eAAe;AACpB,WAAK,kBAAkB;AACvB,WAAK,MAAM;AACX,WAAK,OAAO;AAGZ,WAAK,SAAS;AACd,eAAS,IAAI,GAAG,IAAI,KAAK,cAAc,KAAK;AACxC,aAAK,OAAO,KAAK,CAAA,CAAE;AAAA,MACtB;AAAA,IACJ;AACD,IAAAA,kBAAiB,UAAU,cAAc,SAAU,YAAY;AAC3D,aAAO,aAAa,KAAK,cAAc,KAAK;AAAA,IACpD;AACI,IAAAA,kBAAiB,UAAU,OAAO,SAAU,OAAO,aAAa,YAAY;AACxE,UAAI,UAAU,KAAK,OAAO,aAAa,CAAC;AACxC;AAAY,iBAAS,KAAK,GAAG,YAAY,SAAS,KAAK,UAAU,QAAQ,MAAM;AAC3E,cAAI,SAAS,UAAU,EAAE;AACzB,cAAI,cAAc,OAAO;AACzB,mBAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,gBAAI,YAAY,CAAC,MAAM,MAAM,cAAc,CAAC,GAAG;AAC3C,uBAAS;AAAA,YACZ;AAAA,UACJ;AACD,iBAAO,OAAO;AAAA,QACjB;AACD,aAAO;AAAA,IACf;AACI,IAAAA,kBAAiB,UAAU,QAAQ,SAAU,OAAO,OAAO;AACvD,UAAI,UAAU,KAAK,OAAO,MAAM,SAAS,CAAC;AAC1C,UAAI,SAAS,EAAE,OAAc,KAAK,MAAK;AACvC,UAAI,QAAQ,UAAU,KAAK,iBAAiB;AAGxC,gBAAS,KAAK,OAAQ,IAAG,QAAQ,SAAU,CAAC,IAAI;AAAA,MACnD,OACI;AACD,gBAAQ,KAAK,MAAM;AAAA,MACtB;AAAA,IACT;AACI,IAAAA,kBAAiB,UAAU,SAAS,SAAU,OAAO,aAAa,YAAY;AAC1E,UAAI,cAAc,KAAK,KAAK,OAAO,aAAa,UAAU;AAC1D,UAAI,eAAe,MAAM;AACrB,aAAK;AACL,eAAO;AAAA,MACV;AACD,WAAK;AACL,UAAI,MAAM,aAAa,OAAO,aAAa,UAAU;AAErD,UAAI,oBAAoB,WAAW,UAAU,MAAM,KAAK,OAAO,aAAa,cAAc,UAAU;AACpG,WAAK,MAAM,mBAAmB,GAAG;AACjC,aAAO;AAAA,IACf;AACI,WAAOA;AAAA,EACX,EAAG;AAAA;","x_google_ignoreList":[0]}