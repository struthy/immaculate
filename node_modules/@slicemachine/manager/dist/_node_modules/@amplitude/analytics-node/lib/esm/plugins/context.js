import { __assign } from "../../../../../tslib/tslib.es6.js";
import { VERSION } from "../version.js";
import { PluginType } from "../../../../analytics-types/lib/esm/plugin.js";
import { UUID } from "../../../../analytics-core/lib/esm/utils/uuid.js";
var Context = (
  /** @class */
  function() {
    function Context2() {
      this.name = "context";
      this.type = PluginType.BEFORE;
      this.eventId = 0;
      this.library = "amplitude-node-ts/".concat(VERSION);
    }
    Context2.prototype.setup = function(config) {
      this.config = config;
      return Promise.resolve(void 0);
    };
    Context2.prototype.execute = function(context) {
      var _this = this;
      return new Promise(function(resolve) {
        var time = (/* @__PURE__ */ new Date()).getTime();
        var contextEvent = __assign(__assign(__assign({ time, insert_id: UUID(), plan: _this.config.plan }, _this.config.ingestionMetadata && {
          ingestion_metadata: {
            source_name: _this.config.ingestionMetadata.sourceName,
            source_version: _this.config.ingestionMetadata.sourceVersion
          }
        }), context), { event_id: _this.eventId++, library: _this.library });
        return resolve(contextEvent);
      });
    };
    return Context2;
  }()
);
export {
  Context
};
//# sourceMappingURL=context.js.map
