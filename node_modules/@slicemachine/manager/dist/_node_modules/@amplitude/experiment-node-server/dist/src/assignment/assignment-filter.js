import { __exports as assignmentFilter } from "../../../../../../_virtual/assignment-filter.js";
import "../util/cache.js";
import "./assignment-service.js";
import { __exports as cache } from "../../../../../../_virtual/cache2.js";
import { __exports as assignmentService } from "../../../../../../_virtual/assignment-service.js";
Object.defineProperty(assignmentFilter, "__esModule", { value: true });
assignmentFilter.InMemoryAssignmentFilter = void 0;
const cache_1 = cache;
const assignment_service_1 = assignmentService;
class InMemoryAssignmentFilter {
  constructor(size, ttlMillis = assignment_service_1.DAY_MILLIS) {
    this.cache = new cache_1.Cache(size, ttlMillis);
  }
  shouldTrack(assignment) {
    if (Object.keys(assignment.results).length === 0) {
      return false;
    }
    const canonicalAssignment = assignment.canonicalize();
    const track = this.cache.get(canonicalAssignment) == void 0;
    if (track) {
      this.cache.put(canonicalAssignment, 0);
    }
    return track;
  }
}
assignmentFilter.InMemoryAssignmentFilter = InMemoryAssignmentFilter;
export {
  assignmentFilter as default
};
//# sourceMappingURL=assignment-filter.js.map
