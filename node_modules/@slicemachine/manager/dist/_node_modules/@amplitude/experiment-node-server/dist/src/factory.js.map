{"version":3,"file":"factory.js","sources":["../../../../../../../../node_modules/@amplitude/experiment-node-server/dist/src/factory.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Experiment = void 0;\nconst cache_1 = require(\"./local/cache\");\nconst client_1 = require(\"./local/client\");\nconst client_2 = require(\"./remote/client\");\nconst remoteEvaluationInstances = {};\nconst localEvaluationInstances = {};\n/**\n * Initializes a singleton {@link ExperimentClient} for remote evaluation.\n *\n * @param apiKey The environment API Key\n * @param config See {@link ExperimentConfig} for config options\n * @deprecated use initializeRemote\n */\nconst initialize = (apiKey, config) => {\n    return initializeRemote(apiKey, config);\n};\n/**\n * Initializes a remote evaluation client.\n *\n * @param apiKey The environment API Key\n * @param config See {@link ExperimentConfig} for config options\n */\nconst initializeRemote = (apiKey, config) => {\n    if (!remoteEvaluationInstances[apiKey]) {\n        remoteEvaluationInstances[apiKey] = new client_2.RemoteEvaluationClient(apiKey, config);\n    }\n    return remoteEvaluationInstances[apiKey];\n};\n/**\n * Initialize a local evaluation client.\n *\n * A local evaluation client can evaluate local flags or experiments for a user\n * without requiring a remote call to the amplitude evaluation server. In order\n * to best leverage local evaluation, all flags and experiments being evaluated\n * server side should be configured as local.\n *\n * @param apiKey The environment API Key\n * @param config See {@link ExperimentConfig} for config options\n * @returns The local evaluation client.\n */\nconst initializeLocal = (apiKey, config) => {\n    if (!localEvaluationInstances[apiKey]) {\n        localEvaluationInstances[apiKey] = new client_1.LocalEvaluationClient(apiKey, config, new cache_1.InMemoryFlagConfigCache());\n    }\n    return localEvaluationInstances[apiKey];\n};\n/**\n * Provides factory methods for storing singleton instances of\n * {@link ExperimentClient}.\n *\n * @category Core Usage\n */\nexports.Experiment = {\n    initialize,\n    initializeRemote,\n    initializeLocal,\n};\n"],"names":["require$$0","require$$1","require$$2"],"mappings":";;;;;;;AACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC1C,QAAA,aAAG;AACrB,MAAM,UAAUA;AAChB,MAAM,WAAWC;AACjB,MAAM,WAAWC;AACjB,MAAM,4BAA4B,CAAA;AAClC,MAAM,2BAA2B,CAAA;AAQjC,MAAM,aAAa,CAAC,QAAQ,WAAW;AACnC,SAAO,iBAAiB,QAAQ,MAAM;AAC1C;AAOA,MAAM,mBAAmB,CAAC,QAAQ,WAAW;AACzC,MAAI,CAAC,0BAA0B,MAAM,GAAG;AACpC,8BAA0B,MAAM,IAAI,IAAI,SAAS,uBAAuB,QAAQ,MAAM;AAAA,EACzF;AACD,SAAO,0BAA0B,MAAM;AAC3C;AAaA,MAAM,kBAAkB,CAAC,QAAQ,WAAW;AACxC,MAAI,CAAC,yBAAyB,MAAM,GAAG;AACnC,6BAAyB,MAAM,IAAI,IAAI,SAAS,sBAAsB,QAAQ,QAAQ,IAAI,QAAQ,wBAAuB,CAAE;AAAA,EAC9H;AACD,SAAO,yBAAyB,MAAM;AAC1C;AAOA,QAAA,aAAqB;AAAA,EACjB;AAAA,EACA;AAAA,EACA;AACJ;","x_google_ignoreList":[0]}