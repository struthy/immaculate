import { commonjsGlobal } from "../../../../../../_virtual/_commonjsHelpers.js";
import { __exports as backoff } from "../../../../../../_virtual/backoff.js";
import "./time.js";
import { __exports as time } from "../../../../../../_virtual/time.js";
var __awaiter = commonjsGlobal && commonjsGlobal.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
Object.defineProperty(backoff, "__esModule", { value: true });
backoff.doWithBackoff = void 0;
const time_1 = time;
function doWithBackoff(action, backoffPolicy) {
  return __awaiter(this, void 0, void 0, function* () {
    let delay = backoffPolicy.min;
    for (let i = 0; i < backoffPolicy.attempts; i++) {
      try {
        return yield action();
      } catch (e) {
        yield (0, time_1.sleep)(delay);
        delay = Math.min(delay * backoffPolicy.scalar, backoffPolicy.max);
      }
    }
  });
}
backoff.doWithBackoff = doWithBackoff;
export {
  backoff as default
};
//# sourceMappingURL=backoff.js.map
