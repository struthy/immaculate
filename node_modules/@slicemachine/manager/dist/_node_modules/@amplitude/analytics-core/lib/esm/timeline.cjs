"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const tslib_es6 = require("../../../../tslib/tslib.es6.cjs");
const resultBuilder = require("./utils/result-builder.cjs");
const plugin = require("../../../analytics-types/lib/esm/plugin.cjs");
var Timeline = (
  /** @class */
  function() {
    function Timeline2(client) {
      this.client = client;
      this.queue = [];
      this.applying = false;
      this.plugins = [];
    }
    Timeline2.prototype.register = function(plugin2, config) {
      return tslib_es6.__awaiter(this, void 0, void 0, function() {
        return tslib_es6.__generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              return [4, plugin2.setup(config, this.client)];
            case 1:
              _a.sent();
              this.plugins.push(plugin2);
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    Timeline2.prototype.deregister = function(pluginName) {
      var _a;
      return tslib_es6.__awaiter(this, void 0, void 0, function() {
        var index, plugin2;
        return tslib_es6.__generator(this, function(_b) {
          switch (_b.label) {
            case 0:
              index = this.plugins.findIndex(function(plugin3) {
                return plugin3.name === pluginName;
              });
              plugin2 = this.plugins[index];
              this.plugins.splice(index, 1);
              return [4, (_a = plugin2.teardown) === null || _a === void 0 ? void 0 : _a.call(plugin2)];
            case 1:
              _b.sent();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    Timeline2.prototype.reset = function(client) {
      this.applying = false;
      var plugins = this.plugins;
      plugins.map(function(plugin2) {
        var _a;
        return (_a = plugin2.teardown) === null || _a === void 0 ? void 0 : _a.call(plugin2);
      });
      this.plugins = [];
      this.client = client;
    };
    Timeline2.prototype.push = function(event) {
      var _this = this;
      return new Promise(function(resolve) {
        _this.queue.push([event, resolve]);
        _this.scheduleApply(0);
      });
    };
    Timeline2.prototype.scheduleApply = function(timeout) {
      var _this = this;
      if (this.applying)
        return;
      this.applying = true;
      setTimeout(function() {
        void _this.apply(_this.queue.shift()).then(function() {
          _this.applying = false;
          if (_this.queue.length > 0) {
            _this.scheduleApply(0);
          }
        });
      }, timeout);
    };
    Timeline2.prototype.apply = function(item) {
      return tslib_es6.__awaiter(this, void 0, void 0, function() {
        var _a, event, _b, resolve, before, before_1, before_1_1, plugin$1, e, e_1_1, enrichment, enrichment_1, enrichment_1_1, plugin$1, e, e_2_1, destination, executeDestinations;
        var e_1, _c, e_2, _d;
        return tslib_es6.__generator(this, function(_e) {
          switch (_e.label) {
            case 0:
              if (!item) {
                return [
                  2
                  /*return*/
                ];
              }
              _a = tslib_es6.__read(item, 1), event = _a[0];
              _b = tslib_es6.__read(item, 2), resolve = _b[1];
              before = this.plugins.filter(function(plugin$12) {
                return plugin$12.type === plugin.PluginType.BEFORE;
              });
              _e.label = 1;
            case 1:
              _e.trys.push([1, 6, 7, 8]);
              before_1 = tslib_es6.__values(before), before_1_1 = before_1.next();
              _e.label = 2;
            case 2:
              if (!!before_1_1.done)
                return [3, 5];
              plugin$1 = before_1_1.value;
              return [4, plugin$1.execute(tslib_es6.__assign({}, event))];
            case 3:
              e = _e.sent();
              if (e === null) {
                resolve({ event, code: 0, message: "" });
                return [
                  2
                  /*return*/
                ];
              } else {
                event = e;
              }
              _e.label = 4;
            case 4:
              before_1_1 = before_1.next();
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              e_1_1 = _e.sent();
              e_1 = { error: e_1_1 };
              return [3, 8];
            case 7:
              try {
                if (before_1_1 && !before_1_1.done && (_c = before_1.return))
                  _c.call(before_1);
              } finally {
                if (e_1)
                  throw e_1.error;
              }
              return [
                7
                /*endfinally*/
              ];
            case 8:
              enrichment = this.plugins.filter(function(plugin$12) {
                return plugin$12.type === plugin.PluginType.ENRICHMENT;
              });
              _e.label = 9;
            case 9:
              _e.trys.push([9, 14, 15, 16]);
              enrichment_1 = tslib_es6.__values(enrichment), enrichment_1_1 = enrichment_1.next();
              _e.label = 10;
            case 10:
              if (!!enrichment_1_1.done)
                return [3, 13];
              plugin$1 = enrichment_1_1.value;
              return [4, plugin$1.execute(tslib_es6.__assign({}, event))];
            case 11:
              e = _e.sent();
              if (e === null) {
                resolve({ event, code: 0, message: "" });
                return [
                  2
                  /*return*/
                ];
              } else {
                event = e;
              }
              _e.label = 12;
            case 12:
              enrichment_1_1 = enrichment_1.next();
              return [3, 10];
            case 13:
              return [3, 16];
            case 14:
              e_2_1 = _e.sent();
              e_2 = { error: e_2_1 };
              return [3, 16];
            case 15:
              try {
                if (enrichment_1_1 && !enrichment_1_1.done && (_d = enrichment_1.return))
                  _d.call(enrichment_1);
              } finally {
                if (e_2)
                  throw e_2.error;
              }
              return [
                7
                /*endfinally*/
              ];
            case 16:
              destination = this.plugins.filter(function(plugin$12) {
                return plugin$12.type === plugin.PluginType.DESTINATION;
              });
              executeDestinations = destination.map(function(plugin2) {
                var eventClone = tslib_es6.__assign({}, event);
                return plugin2.execute(eventClone).catch(function(e2) {
                  return resultBuilder.buildResult(eventClone, 0, String(e2));
                });
              });
              void Promise.all(executeDestinations).then(function(_a2) {
                var _b2 = tslib_es6.__read(_a2, 1), result = _b2[0];
                resolve(result);
              });
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    Timeline2.prototype.flush = function() {
      return tslib_es6.__awaiter(this, void 0, void 0, function() {
        var queue, destination, executeDestinations;
        var _this = this;
        return tslib_es6.__generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              queue = this.queue;
              this.queue = [];
              return [4, Promise.all(queue.map(function(item) {
                return _this.apply(item);
              }))];
            case 1:
              _a.sent();
              destination = this.plugins.filter(function(plugin$1) {
                return plugin$1.type === plugin.PluginType.DESTINATION;
              });
              executeDestinations = destination.map(function(plugin2) {
                return plugin2.flush && plugin2.flush();
              });
              return [4, Promise.all(executeDestinations)];
            case 2:
              _a.sent();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    return Timeline2;
  }()
);
exports.Timeline = Timeline;
//# sourceMappingURL=timeline.cjs.map
