{"version":3,"file":"config.cjs","sources":["../../../../../../../../node_modules/@amplitude/analytics-core/lib/esm/config.js"],"sourcesContent":["import { LogLevel, ServerZone, } from '@amplitude/analytics-types';\nimport { AMPLITUDE_SERVER_URL, AMPLITUDE_BATCH_SERVER_URL, EU_AMPLITUDE_SERVER_URL, EU_AMPLITUDE_BATCH_SERVER_URL, } from './constants';\nimport { Logger } from './logger';\nexport var getDefaultConfig = function () { return ({\n    flushMaxRetries: 12,\n    flushQueueSize: 200,\n    flushIntervalMillis: 10000,\n    instanceName: '$default_instance',\n    logLevel: LogLevel.Warn,\n    loggerProvider: new Logger(),\n    optOut: false,\n    serverUrl: AMPLITUDE_SERVER_URL,\n    serverZone: ServerZone.US,\n    useBatch: false,\n}); };\nvar Config = /** @class */ (function () {\n    function Config(options) {\n        var _a, _b, _c, _d;\n        this._optOut = false;\n        var defaultConfig = getDefaultConfig();\n        this.apiKey = options.apiKey;\n        this.flushIntervalMillis = (_a = options.flushIntervalMillis) !== null && _a !== void 0 ? _a : defaultConfig.flushIntervalMillis;\n        this.flushMaxRetries = options.flushMaxRetries || defaultConfig.flushMaxRetries;\n        this.flushQueueSize = options.flushQueueSize || defaultConfig.flushQueueSize;\n        this.instanceName = options.instanceName || defaultConfig.instanceName;\n        this.loggerProvider = options.loggerProvider || defaultConfig.loggerProvider;\n        this.logLevel = (_b = options.logLevel) !== null && _b !== void 0 ? _b : defaultConfig.logLevel;\n        this.minIdLength = options.minIdLength;\n        this.plan = options.plan;\n        this.ingestionMetadata = options.ingestionMetadata;\n        this.optOut = (_c = options.optOut) !== null && _c !== void 0 ? _c : defaultConfig.optOut;\n        this.serverUrl = options.serverUrl;\n        this.serverZone = options.serverZone || defaultConfig.serverZone;\n        this.storageProvider = options.storageProvider;\n        this.transportProvider = options.transportProvider;\n        this.useBatch = (_d = options.useBatch) !== null && _d !== void 0 ? _d : defaultConfig.useBatch;\n        this.loggerProvider.enable(this.logLevel);\n        var serverConfig = createServerConfig(options.serverUrl, options.serverZone, options.useBatch);\n        this.serverZone = serverConfig.serverZone;\n        this.serverUrl = serverConfig.serverUrl;\n    }\n    Object.defineProperty(Config.prototype, \"optOut\", {\n        get: function () {\n            return this._optOut;\n        },\n        set: function (optOut) {\n            this._optOut = optOut;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Config;\n}());\nexport { Config };\nexport var getServerUrl = function (serverZone, useBatch) {\n    if (serverZone === ServerZone.EU) {\n        return useBatch ? EU_AMPLITUDE_BATCH_SERVER_URL : EU_AMPLITUDE_SERVER_URL;\n    }\n    return useBatch ? AMPLITUDE_BATCH_SERVER_URL : AMPLITUDE_SERVER_URL;\n};\nexport var createServerConfig = function (serverUrl, serverZone, useBatch) {\n    if (serverUrl === void 0) { serverUrl = ''; }\n    if (serverZone === void 0) { serverZone = getDefaultConfig().serverZone; }\n    if (useBatch === void 0) { useBatch = getDefaultConfig().useBatch; }\n    if (serverUrl) {\n        return { serverUrl: serverUrl, serverZone: undefined };\n    }\n    var _serverZone = ['US', 'EU'].includes(serverZone) ? serverZone : getDefaultConfig().serverZone;\n    return {\n        serverZone: _serverZone,\n        serverUrl: getServerUrl(_serverZone, useBatch),\n    };\n};\n//# sourceMappingURL=config.js.map"],"names":["LogLevel","Logger","AMPLITUDE_SERVER_URL","ServerZone","Config","serverZone","EU_AMPLITUDE_BATCH_SERVER_URL","EU_AMPLITUDE_SERVER_URL","AMPLITUDE_BATCH_SERVER_URL"],"mappings":";;;;;;AAGU,IAAC,mBAAmB,WAAY;AAAE,SAAQ;AAAA,IAChD,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,qBAAqB;AAAA,IACrB,cAAc;AAAA,IACd,UAAUA,OAAQ,SAAC;AAAA,IACnB,gBAAgB,IAAIC,SAAAA,OAAQ;AAAA,IAC5B,QAAQ;AAAA,IACR,WAAWC,UAAoB;AAAA,IAC/B,YAAYC,WAAU,WAAC;AAAA,IACvB,UAAU;AAAA,EACd;AAAM;AACH,IAAC;AAAA;AAAA,EAAwB,WAAY;AACpC,aAASC,QAAO,SAAS;AACrB,UAAI,IAAI,IAAI,IAAI;AAChB,WAAK,UAAU;AACf,UAAI,gBAAgB;AACpB,WAAK,SAAS,QAAQ;AACtB,WAAK,uBAAuB,KAAK,QAAQ,yBAAyB,QAAQ,OAAO,SAAS,KAAK,cAAc;AAC7G,WAAK,kBAAkB,QAAQ,mBAAmB,cAAc;AAChE,WAAK,iBAAiB,QAAQ,kBAAkB,cAAc;AAC9D,WAAK,eAAe,QAAQ,gBAAgB,cAAc;AAC1D,WAAK,iBAAiB,QAAQ,kBAAkB,cAAc;AAC9D,WAAK,YAAY,KAAK,QAAQ,cAAc,QAAQ,OAAO,SAAS,KAAK,cAAc;AACvF,WAAK,cAAc,QAAQ;AAC3B,WAAK,OAAO,QAAQ;AACpB,WAAK,oBAAoB,QAAQ;AACjC,WAAK,UAAU,KAAK,QAAQ,YAAY,QAAQ,OAAO,SAAS,KAAK,cAAc;AACnF,WAAK,YAAY,QAAQ;AACzB,WAAK,aAAa,QAAQ,cAAc,cAAc;AACtD,WAAK,kBAAkB,QAAQ;AAC/B,WAAK,oBAAoB,QAAQ;AACjC,WAAK,YAAY,KAAK,QAAQ,cAAc,QAAQ,OAAO,SAAS,KAAK,cAAc;AACvF,WAAK,eAAe,OAAO,KAAK,QAAQ;AACxC,UAAI,eAAe,mBAAmB,QAAQ,WAAW,QAAQ,YAAY,QAAQ,QAAQ;AAC7F,WAAK,aAAa,aAAa;AAC/B,WAAK,YAAY,aAAa;AAAA,IACjC;AACD,WAAO,eAAeA,QAAO,WAAW,UAAU;AAAA,MAC9C,KAAK,WAAY;AACb,eAAO,KAAK;AAAA,MACf;AAAA,MACD,KAAK,SAAU,QAAQ;AACnB,aAAK,UAAU;AAAA,MAClB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IACtB,CAAK;AACD,WAAOA;AAAA,EACX;;AAEU,IAAC,eAAe,SAAUC,cAAY,UAAU;AACtD,MAAIA,iBAAeF,WAAU,WAAC,IAAI;AAC9B,WAAO,WAAWG,UAA6B,gCAAGC;EACrD;AACD,SAAO,WAAWC,UAA0B,6BAAGN;AACnD;AACU,IAAC,qBAAqB,SAAU,WAAWG,aAAY,UAAU;AACvE,MAAI,cAAc,QAAQ;AAAE,gBAAY;AAAA,EAAK;AAC7C,MAAIA,gBAAe,QAAQ;AAAE,IAAAA,cAAa,iBAAgB,EAAG;AAAA,EAAa;AAC1E,MAAI,aAAa,QAAQ;AAAE,eAAW,iBAAgB,EAAG;AAAA,EAAW;AACpE,MAAI,WAAW;AACX,WAAO,EAAE,WAAsB,YAAY,OAAS;AAAA,EACvD;AACD,MAAI,cAAc,CAAC,MAAM,IAAI,EAAE,SAASA,WAAU,IAAIA,cAAa,iBAAkB,EAAC;AACtF,SAAO;AAAA,IACH,YAAY;AAAA,IACZ,WAAW,aAAa,aAAa,QAAQ;AAAA,EACrD;AACA;;;;;","x_google_ignoreList":[0]}