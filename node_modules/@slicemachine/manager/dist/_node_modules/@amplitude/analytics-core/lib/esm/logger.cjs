"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const logger = require("../../../analytics-types/lib/esm/logger.cjs");
var PREFIX = "Amplitude Logger ";
var Logger = (
  /** @class */
  function() {
    function Logger2() {
      this.logLevel = logger.LogLevel.None;
    }
    Logger2.prototype.disable = function() {
      this.logLevel = logger.LogLevel.None;
    };
    Logger2.prototype.enable = function(logLevel) {
      if (logLevel === void 0) {
        logLevel = logger.LogLevel.Warn;
      }
      this.logLevel = logLevel;
    };
    Logger2.prototype.log = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      if (this.logLevel < logger.LogLevel.Verbose) {
        return;
      }
      console.log("".concat(PREFIX, "[Log]: ").concat(args.join(" ")));
    };
    Logger2.prototype.warn = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      if (this.logLevel < logger.LogLevel.Warn) {
        return;
      }
      console.warn("".concat(PREFIX, "[Warn]: ").concat(args.join(" ")));
    };
    Logger2.prototype.error = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      if (this.logLevel < logger.LogLevel.Error) {
        return;
      }
      console.error("".concat(PREFIX, "[Error]: ").concat(args.join(" ")));
    };
    Logger2.prototype.debug = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      if (this.logLevel < logger.LogLevel.Debug) {
        return;
      }
      console.log("".concat(PREFIX, "[Debug]: ").concat(args.join(" ")));
    };
    return Logger2;
  }()
);
exports.Logger = Logger;
//# sourceMappingURL=logger.cjs.map
