{"version":3,"file":"debug.js","sources":["../../../../../../../../../node_modules/@amplitude/analytics-core/lib/esm/utils/debug.js"],"sourcesContent":["import { __assign, __values } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { LogLevel } from '@amplitude/analytics-types';\nexport var getStacktrace = function (ignoreDepth) {\n    if (ignoreDepth === void 0) { ignoreDepth = 0; }\n    var trace = new Error().stack || '';\n    return trace\n        .split('\\n')\n        .slice(2 + ignoreDepth)\n        .map(function (text) { return text.trim(); });\n};\n// This hook makes sure we always get the latest logger and logLevel.\nexport var getClientLogConfig = function (client) { return function () {\n    var _a = __assign({}, client.config), logger = _a.loggerProvider, logLevel = _a.logLevel;\n    return {\n        logger: logger,\n        logLevel: logLevel,\n    };\n}; };\n// This is a convenient function to get the attribute from object with string path, similar to lodash '#get'.\nexport var getValueByStringPath = function (obj, path) {\n    var e_1, _a;\n    path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n    path = path.replace(/^\\./, ''); // strip a leading dot\n    try {\n        for (var _b = __values(path.split('.')), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var attr = _c.value;\n            if (attr in obj) {\n                obj = obj[attr];\n            }\n            else {\n                return;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return obj;\n};\nexport var getClientStates = function (client, paths) { return function () {\n    var e_2, _a;\n    var res = {};\n    try {\n        for (var paths_1 = __values(paths), paths_1_1 = paths_1.next(); !paths_1_1.done; paths_1_1 = paths_1.next()) {\n            var path = paths_1_1.value;\n            res[path] = getValueByStringPath(client, path);\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (paths_1_1 && !paths_1_1.done && (_a = paths_1.return)) _a.call(paths_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n}; };\nexport var debugWrapper = function (fn, fnName, getLogConfig, getStates, fnContext) {\n    if (fnContext === void 0) { fnContext = null; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a = getLogConfig(), logger = _a.logger, logLevel = _a.logLevel;\n        // return early if possible to reduce overhead\n        if ((logLevel && logLevel < LogLevel.Debug) || !logLevel || !logger) {\n            return fn.apply(fnContext, args);\n        }\n        var debugContext = {\n            type: 'invoke public method',\n            name: fnName,\n            args: args,\n            stacktrace: getStacktrace(1),\n            time: {\n                start: new Date().toISOString(),\n            },\n            states: {},\n        };\n        if (getStates && debugContext.states) {\n            debugContext.states.before = getStates();\n        }\n        var result = fn.apply(fnContext, args);\n        if (result && result.promise) {\n            // if result is a promise, add the callback\n            result.promise.then(function () {\n                if (getStates && debugContext.states) {\n                    debugContext.states.after = getStates();\n                }\n                if (debugContext.time) {\n                    debugContext.time.end = new Date().toISOString();\n                }\n                logger.debug(JSON.stringify(debugContext, null, 2));\n            });\n        }\n        else {\n            if (getStates && debugContext.states) {\n                debugContext.states.after = getStates();\n            }\n            if (debugContext.time) {\n                debugContext.time.end = new Date().toISOString();\n            }\n            logger.debug(JSON.stringify(debugContext, null, 2));\n        }\n        return result;\n    };\n};\n//# sourceMappingURL=debug.js.map"],"names":[],"mappings":"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","x_google_ignoreList":[0]}