{"version":3,"file":"core.js","sources":["../../../../../../node_modules/strtok3/lib/core.js"],"sourcesContent":["import { ReadStreamTokenizer } from './ReadStreamTokenizer.js';\nimport { BufferTokenizer } from './BufferTokenizer.js';\nexport { EndOfStreamError } from 'peek-readable';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param stream - Read from Node.js Stream.Readable\n * @param fileInfo - Pass the file information, like size and MIME-type of the corresponding stream.\n * @returns ReadStreamTokenizer\n */\nexport function fromStream(stream, fileInfo) {\n    fileInfo = fileInfo ? fileInfo : {};\n    return new ReadStreamTokenizer(stream, fileInfo);\n}\n/**\n * Construct ReadStreamTokenizer from given Buffer.\n * @param uint8Array - Uint8Array to tokenize\n * @param fileInfo - Pass additional file information to the tokenizer\n * @returns BufferTokenizer\n */\nexport function fromBuffer(uint8Array, fileInfo) {\n    return new BufferTokenizer(uint8Array, fileInfo);\n}\n"],"names":[],"mappings":";;AAoBO,SAAS,WAAW,YAAY,UAAU;AAC7C,SAAO,IAAI,gBAAgB,YAAY,QAAQ;AACnD;","x_google_ignoreList":[0]}