{"version":3,"file":"buffer-stream.js","sources":["../../../../../node_modules/get-stream/buffer-stream.js"],"sourcesContent":["'use strict';\nconst {PassThrough: PassThroughStream} = require('stream');\n\nmodule.exports = options => {\n\toptions = {...options};\n\n\tconst {array} = options;\n\tlet {encoding} = options;\n\tconst isBuffer = encoding === 'buffer';\n\tlet objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || isBuffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (isBuffer) {\n\t\tencoding = null;\n\t}\n\n\tconst stream = new PassThroughStream({objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tlet length = 0;\n\tconst chunks = [];\n\n\tstream.on('data', chunk => {\n\t\tchunks.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlength = chunks.length;\n\t\t} else {\n\t\t\tlength += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = () => {\n\t\tif (array) {\n\t\t\treturn chunks;\n\t\t}\n\n\t\treturn isBuffer ? Buffer.concat(chunks, length) : chunks.join('');\n\t};\n\n\tstream.getBufferedLength = () => length;\n\n\treturn stream;\n};\n"],"names":[],"mappings":";AACA,MAAM,EAAC,aAAa,kBAAiB,IAAI;IAEzC,eAAiB,aAAW;AAC3B,YAAU,EAAC,GAAG,QAAO;AAErB,QAAM,EAAC,MAAK,IAAI;AAChB,MAAI,EAAC,SAAQ,IAAI;AACjB,QAAM,WAAW,aAAa;AAC9B,MAAI,aAAa;AAEjB,MAAI,OAAO;AACV,iBAAa,EAAE,YAAY;AAAA,EAC7B,OAAQ;AACN,eAAW,YAAY;AAAA,EACvB;AAED,MAAI,UAAU;AACb,eAAW;AAAA,EACX;AAED,QAAM,SAAS,IAAI,kBAAkB,EAAC,WAAU,CAAC;AAEjD,MAAI,UAAU;AACb,WAAO,YAAY,QAAQ;AAAA,EAC3B;AAED,MAAI,SAAS;AACb,QAAM,SAAS,CAAA;AAEf,SAAO,GAAG,QAAQ,WAAS;AAC1B,WAAO,KAAK,KAAK;AAEjB,QAAI,YAAY;AACf,eAAS,OAAO;AAAA,IACnB,OAAS;AACN,gBAAU,MAAM;AAAA,IAChB;AAAA,EACH,CAAE;AAED,SAAO,mBAAmB,MAAM;AAC/B,QAAI,OAAO;AACV,aAAO;AAAA,IACP;AAED,WAAO,WAAW,OAAO,OAAO,QAAQ,MAAM,IAAI,OAAO,KAAK,EAAE;AAAA,EAClE;AAEC,SAAO,oBAAoB,MAAM;AAEjC,SAAO;AACR;","x_google_ignoreList":[0]}