{"version":3,"file":"BaseManager.js","sources":["../../../src/managers/BaseManager.ts"],"sourcesContent":["import { SliceMachinePluginRunner } from \"@slicemachine/plugin-kit\";\nimport { PrismicAuthManager } from \"../auth/PrismicAuthManager\";\n\nimport { SliceMachineManager } from \"./SliceMachineManager\";\n\nimport { UserManager } from \"./user/UserManager\";\nimport { PrismicRepositoryManager } from \"./prismicRepository/PrismicRepositoryManager\";\n\nimport { PluginsManager } from \"./plugins/PluginsManager\";\n\nimport { ProjectManager } from \"./project/ProjectManager\";\nimport { CustomTypesManager } from \"./customTypes/CustomTypesManager\";\nimport { SlicesManager } from \"./slices/SlicesManager\";\nimport { SnippetsManager } from \"./snippets/SnippetsManager\";\nimport { ScreenshotsManager } from \"./screenshots/ScreenshotsManager\";\nimport { SimulatorManager } from \"./simulator/SimulatorManager\";\n\nimport { VersionsManager } from \"./versions/VersionsManager\";\nimport { TelemetryManager } from \"./telemetry/TelemetryManager\";\nimport { DocumentationManager } from \"./documentation/DocumentationManager\";\nimport { SliceTemplateLibraryManager } from \"./sliceTemplateLibrary/SliceTemplateLibraryManager\";\n\nexport abstract class BaseManager {\n\tprivate _sliceMachineManager: SliceMachineManager;\n\n\tconstructor(sliceMachineManager: SliceMachineManager) {\n\t\tthis._sliceMachineManager = sliceMachineManager;\n\t}\n\n\tprotected get prismicAuthManager(): PrismicAuthManager {\n\t\treturn this._sliceMachineManager.getPrismicAuthManager();\n\t}\n\n\tprotected get sliceMachinePluginRunner():\n\t\t| SliceMachinePluginRunner\n\t\t| undefined {\n\t\treturn this._sliceMachineManager.getSliceMachinePluginRunner();\n\t}\n\n\tprotected set sliceMachinePluginRunner(\n\t\tsliceMachinePluginRunner: SliceMachinePluginRunner | undefined,\n\t) {\n\t\t// @ts-expect-error - _sliceMachinePluginRunner is private. We\n\t\t// are intentially ignoring its privacy to allow Manager\n\t\t// classes to access a shared plugin runner via protected\n\t\t// getters and setters.\n\t\tthis._sliceMachineManager._sliceMachinePluginRunner =\n\t\t\tsliceMachinePluginRunner;\n\t}\n\n\tprotected get cwd(): string {\n\t\treturn this._sliceMachineManager.cwd;\n\t}\n\n\t// Protected instance prevents circular intellisense\n\t// e.g. sliceMachineManager.user.user.user\n\tprotected get user(): UserManager {\n\t\treturn this._sliceMachineManager.user;\n\t}\n\tprotected get prismicRepository(): PrismicRepositoryManager {\n\t\treturn this._sliceMachineManager.prismicRepository;\n\t}\n\n\tprotected get plugins(): PluginsManager {\n\t\treturn this._sliceMachineManager.plugins;\n\t}\n\n\tprotected get project(): ProjectManager {\n\t\treturn this._sliceMachineManager.project;\n\t}\n\tprotected get customTypes(): CustomTypesManager {\n\t\treturn this._sliceMachineManager.customTypes;\n\t}\n\tprotected get slices(): SlicesManager {\n\t\treturn this._sliceMachineManager.slices;\n\t}\n\tprotected get snippets(): SnippetsManager {\n\t\treturn this._sliceMachineManager.snippets;\n\t}\n\tprotected get screenshots(): ScreenshotsManager {\n\t\treturn this._sliceMachineManager.screenshots;\n\t}\n\tprotected get simulator(): SimulatorManager {\n\t\treturn this._sliceMachineManager.simulator;\n\t}\n\tprotected get documentation(): DocumentationManager {\n\t\treturn this._sliceMachineManager.documentation;\n\t}\n\tprotected get sliceTemplateLibrary(): SliceTemplateLibraryManager {\n\t\treturn this._sliceMachineManager.sliceTemplateLibrary;\n\t}\n\n\tprotected get versions(): VersionsManager {\n\t\treturn this._sliceMachineManager.versions;\n\t}\n\n\tprotected get telemetry(): TelemetryManager {\n\t\treturn this._sliceMachineManager.telemetry;\n\t}\n}\n"],"names":[],"mappings":";;;;;;MAsBsB,YAAW;AAAA,EAGhC,YAAY,qBAAwC;AAF5C;AAGP,SAAK,uBAAuB;AAAA,EAC7B;AAAA,EAEA,IAAc,qBAAkB;AACxB,WAAA,KAAK,qBAAqB;EAClC;AAAA,EAEA,IAAc,2BAAwB;AAG9B,WAAA,KAAK,qBAAqB;EAClC;AAAA,EAEA,IAAc,yBACb,0BAA8D;AAM9D,SAAK,qBAAqB,4BACzB;AAAA,EACF;AAAA,EAEA,IAAc,MAAG;AAChB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA;AAAA;AAAA,EAIA,IAAc,OAAI;AACjB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EACA,IAAc,oBAAiB;AAC9B,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,IAAc,UAAO;AACpB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,IAAc,UAAO;AACpB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EACA,IAAc,cAAW;AACxB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EACA,IAAc,SAAM;AACnB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EACA,IAAc,WAAQ;AACrB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EACA,IAAc,cAAW;AACxB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EACA,IAAc,YAAS;AACtB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EACA,IAAc,gBAAa;AAC1B,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EACA,IAAc,uBAAoB;AACjC,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,IAAc,WAAQ;AACrB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,IAAc,YAAS;AACtB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AACA;"}