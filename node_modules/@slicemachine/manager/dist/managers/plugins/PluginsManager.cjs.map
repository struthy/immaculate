{"version":3,"file":"PluginsManager.cjs","sources":["../../../../src/managers/plugins/PluginsManager.ts"],"sourcesContent":["import {\n\tcreateSliceMachinePluginRunner,\n\tSliceMachinePlugin,\n\tSliceMachinePluginRunner,\n} from \"@slicemachine/plugin-kit\";\n\nimport { assertPluginsInitialized } from \"../../lib/assertPluginsInitialized\";\n\nimport { BaseManager } from \"../BaseManager\";\nimport { SliceMachineManager } from \"../SliceMachineManager\";\n\ntype PluginsManagerConfig = {\n\tnativePlugins?: Record<string, SliceMachinePlugin>;\n};\n\nexport class PluginsManager extends BaseManager {\n\tprivate _nativePlugins: Record<string, SliceMachinePlugin>;\n\n\tconstructor(\n\t\tsliceMachineManager: SliceMachineManager,\n\t\tconfig: PluginsManagerConfig,\n\t) {\n\t\tsuper(sliceMachineManager);\n\n\t\tthis._nativePlugins = config.nativePlugins ?? {};\n\t}\n\n\tasync initPlugins(): Promise<void> {\n\t\tconst projectRoot = await this.project.getRoot();\n\t\tconst sliceMachineConfig = await this.project.getSliceMachineConfig();\n\n\t\tthis.sliceMachinePluginRunner = createSliceMachinePluginRunner({\n\t\t\tproject: {\n\t\t\t\troot: projectRoot,\n\t\t\t\tconfig: sliceMachineConfig,\n\t\t\t},\n\t\t\tnativePlugins: this._nativePlugins,\n\t\t});\n\n\t\tawait this.sliceMachinePluginRunner.init();\n\t}\n\n\tdangerouslyCallHook: SliceMachinePluginRunner[\"callHook\"] = (...args) => {\n\t\tassertPluginsInitialized(this.sliceMachinePluginRunner);\n\n\t\treturn this.sliceMachinePluginRunner.callHook(...args);\n\t};\n}\n"],"names":["BaseManager","assertPluginsInitialized","createSliceMachinePluginRunner"],"mappings":";;;;;;;;;;;AAeM,MAAO,uBAAuBA,YAAAA,YAAW;AAAA,EAG9C,YACC,qBACA,QAA4B;AAE5B,UAAM,mBAAmB;AANlB;AA0BR,+CAA4D,IAAI,SAAQ;AACvEC,wDAAyB,KAAK,wBAAwB;AAEtD,aAAO,KAAK,yBAAyB,SAAS,GAAG,IAAI;AAAA,IAAA;AArBhD,SAAA,iBAAiB,OAAO,iBAAiB,CAAA;AAAA,EAC/C;AAAA,EAEA,MAAM,cAAW;AAChB,UAAM,cAAc,MAAM,KAAK,QAAQ,QAAO;AAC9C,UAAM,qBAAqB,MAAM,KAAK,QAAQ,sBAAqB;AAEnE,SAAK,2BAA2BC,yCAA+B;AAAA,MAC9D,SAAS;AAAA,QACR,MAAM;AAAA,QACN,QAAQ;AAAA,MACR;AAAA,MACD,eAAe,KAAK;AAAA,IAAA,CACpB;AAEK,UAAA,KAAK,yBAAyB;EACrC;AAOA;;"}