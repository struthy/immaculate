import { GitHubReleaseMetadata } from "../../lib/fetchGitHubReleaseBodyForRelease";
import { BaseManager } from "../BaseManager";
import { Version } from "./types";
type SliceMachineManagerGetReleaseNotesForVersionArgs = {
    version: string;
};
export declare class VersionsManager extends BaseManager {
    /**
     * Record of version numbers mapped to their GitHub release metadata.
     */
    gitHubSliceMachineReleaseMetadataCache: Record<string, GitHubReleaseMetadata | undefined>;
    getRunningSliceMachineVersion(): Promise<string>;
    getAllStableSliceMachineVersions(): Promise<string[]>;
    getAllStableSliceMachineVersionsWithKind(): Promise<Version[]>;
    getLatestNonBreakingSliceMachineVersion(): Promise<string | undefined>;
    checkIsSliceMachineUpdateAvailable(): Promise<boolean>;
    getRunningAdapterVersion(): Promise<string>;
    getAllStableAdapterVersions(): Promise<string[]>;
    checkIsAdapterUpdateAvailable(): Promise<boolean>;
    getSliceMachineReleaseNotesForVersion(args: SliceMachineManagerGetReleaseNotesForVersionArgs): Promise<string | undefined>;
}
export {};
