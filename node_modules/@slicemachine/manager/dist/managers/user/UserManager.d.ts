import { BaseManager } from "../BaseManager";
import { SliceMachineManager } from "../SliceMachineManager";
export declare class UserManager extends BaseManager {
    constructor(sliceMachineManager: SliceMachineManager);
    login: (args: {
        email: string;
        cookies: string[];
    }) => Promise<void>;
    getLoginSessionInfo: () => Promise<{
        port: number;
        url: string;
    }>;
    nodeLoginSession: (args: {
        port: number;
        onListenCallback?: (() => void) | undefined;
    }) => Promise<void>;
    logout: () => Promise<void>;
    checkIsLoggedIn: () => Promise<boolean>;
    refreshAuthenticationToken: () => Promise<void>;
    getAuthenticationToken: () => Promise<string>;
    getAuthenticationCookies: () => Promise<{
        "prismic-auth"?: string | undefined;
        SESSION?: string | undefined;
    } & {
        [x: string]: string;
    } & Required<Pick<{
        "prismic-auth"?: string | undefined;
        SESSION?: string | undefined;
    } & {
        [x: string]: string;
    }, "prismic-auth" | "SESSION">>>;
    getProfile: () => Promise<{
        userId: string;
        shortId: string;
        intercomHash: string;
        email: string;
        firstName: string;
        lastName: string;
    }>;
}
