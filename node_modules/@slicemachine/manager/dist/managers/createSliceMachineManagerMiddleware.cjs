"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const createRPCMiddleware = require('./../_node_modules/r19/dist/createRPCMiddleware.cjs');
const proceduresFromInstance = require('./../_node_modules/r19/dist/proceduresFromInstance.cjs');
const defineOmits = () => {
  return (omit) => {
    return omit;
  };
};
const omitProcedures = defineOmits()([
  "_sliceMachinePluginRunner",
  "_prismicAuthManager",
  "customTypes._sliceMachineManager",
  "plugins._sliceMachineManager",
  "prismicRepository._sliceMachineManager",
  "project._sliceMachineManager",
  "screenshots._sliceMachineManager",
  "simulator._sliceMachineManager",
  "slices._sliceMachineManager",
  "snippets._sliceMachineManager",
  "telemetry._sliceMachineManager",
  "user._sliceMachineManager",
  "versions._sliceMachineManager",
  "documentation._sliceMachineManager",
  "sliceTemplateLibrary._sliceMachineManager",
  "git._sliceMachineManager",
  "getSliceMachinePluginRunner",
  "getPrismicAuthManager"
]);
const getSliceMachineManagerProcedures = (args) => {
  return proceduresFromInstance.proceduresFromInstance(args.sliceMachineManager, {
    omit: omitProcedures
  });
};
const createSliceMachineManagerMiddleware = (args) => {
  return createRPCMiddleware.createRPCMiddleware({
    procedures: getSliceMachineManagerProcedures({
      sliceMachineManager: args.sliceMachineManager
    }),
    onError: args.onError
  });
};
exports.createSliceMachineManagerMiddleware = createSliceMachineManagerMiddleware;
exports.getSliceMachineManagerProcedures = getSliceMachineManagerProcedures;
//# sourceMappingURL=createSliceMachineManagerMiddleware.cjs.map
