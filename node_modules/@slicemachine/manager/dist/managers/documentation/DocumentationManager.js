import * as t from "io-ts";
import { BaseManager } from "../BaseManager.js";
import { assertPluginsInitialized } from "../../lib/assertPluginsInitialized.js";
import { decodeHookResult } from "../../lib/decodeHookResult.js";
const documentationCodec = t.intersection([
  t.type({ content: t.string }),
  t.partial({
    label: t.string
  })
]);
class DocumentationManager extends BaseManager {
  async read(args) {
    assertPluginsInitialized(this.sliceMachinePluginRunner);
    const hookResult = await this.sliceMachinePluginRunner.callHook("documentation:read", args);
    const { data, errors } = decodeHookResult(t.array(documentationCodec), hookResult);
    return {
      documentation: data.flat(),
      errors
    };
  }
}
export {
  DocumentationManager
};
//# sourceMappingURL=DocumentationManager.js.map
