import * as t from "io-ts";
const PrismicRepositoryUserAgent = {
  SliceMachine: "prismic-cli/sm",
  LegacyZero: "prismic-cli/0"
};
const PrismicRepositoryRole = {
  SuperUser: "SuperUser",
  Administrator: "Administrator",
  Owner: "Owner",
  Manager: "Manager",
  Publisher: "Publisher",
  Writer: "Writer",
  Readonly: "Readonly"
};
const PrismicRepository = t.type({
  domain: t.string,
  name: t.string,
  role: t.union([
    t.keyof(PrismicRepositoryRole),
    t.record(t.string, t.keyof(PrismicRepositoryRole))
  ])
});
var ChangeTypes;
(function(ChangeTypes2) {
  ChangeTypes2["SLICE_INSERT"] = "SLICE_INSERT";
  ChangeTypes2["SLICE_UPDATE"] = "SLICE_UPDATE";
  ChangeTypes2["SLICE_DELETE"] = "SLICE_DELETE";
  ChangeTypes2["CUSTOM_TYPE_INSERT"] = "CUSTOM_TYPE_INSERT";
  ChangeTypes2["CUSTOM_TYPE_UPDATE"] = "CUSTOM_TYPE_UPDATE";
  ChangeTypes2["CUSTOM_TYPE_DELETE"] = "CUSTOM_TYPE_DELETE";
})(ChangeTypes || (ChangeTypes = {}));
const PushChangesRawLimit = t.type({
  details: t.type({
    customTypes: t.array(t.type({
      id: t.string,
      numberOfDocuments: t.number,
      url: t.string
    }))
  })
});
var PushChangesLimitType;
(function(PushChangesLimitType2) {
  PushChangesLimitType2["SOFT"] = "SOFT";
  PushChangesLimitType2["HARD"] = "HARD";
})(PushChangesLimitType || (PushChangesLimitType = {}));
const Environment = t.type({
  kind: t.union([t.literal("prod"), t.literal("stage"), t.literal("dev")]),
  name: t.string,
  domain: t.string,
  users: t.array(t.type({
    id: t.string
  }))
});
export {
  ChangeTypes,
  Environment,
  PrismicRepository,
  PrismicRepositoryRole,
  PrismicRepositoryUserAgent,
  PushChangesLimitType,
  PushChangesRawLimit
};
//# sourceMappingURL=types.js.map
