"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const t = require("io-ts");
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const t__namespace = /* @__PURE__ */ _interopNamespaceDefault(t);
const PrismicRepositoryUserAgent = {
  SliceMachine: "prismic-cli/sm",
  LegacyZero: "prismic-cli/0"
};
const PrismicRepositoryRole = {
  SuperUser: "SuperUser",
  Administrator: "Administrator",
  Owner: "Owner",
  Manager: "Manager",
  Publisher: "Publisher",
  Writer: "Writer",
  Readonly: "Readonly"
};
const PrismicRepository = t__namespace.type({
  domain: t__namespace.string,
  name: t__namespace.string,
  role: t__namespace.union([
    t__namespace.keyof(PrismicRepositoryRole),
    t__namespace.record(t__namespace.string, t__namespace.keyof(PrismicRepositoryRole))
  ])
});
exports.ChangeTypes = void 0;
(function(ChangeTypes2) {
  ChangeTypes2["SLICE_INSERT"] = "SLICE_INSERT";
  ChangeTypes2["SLICE_UPDATE"] = "SLICE_UPDATE";
  ChangeTypes2["SLICE_DELETE"] = "SLICE_DELETE";
  ChangeTypes2["CUSTOM_TYPE_INSERT"] = "CUSTOM_TYPE_INSERT";
  ChangeTypes2["CUSTOM_TYPE_UPDATE"] = "CUSTOM_TYPE_UPDATE";
  ChangeTypes2["CUSTOM_TYPE_DELETE"] = "CUSTOM_TYPE_DELETE";
})(exports.ChangeTypes || (exports.ChangeTypes = {}));
const PushChangesRawLimit = t__namespace.type({
  details: t__namespace.type({
    customTypes: t__namespace.array(t__namespace.type({
      id: t__namespace.string,
      numberOfDocuments: t__namespace.number,
      url: t__namespace.string
    }))
  })
});
exports.PushChangesLimitType = void 0;
(function(PushChangesLimitType2) {
  PushChangesLimitType2["SOFT"] = "SOFT";
  PushChangesLimitType2["HARD"] = "HARD";
})(exports.PushChangesLimitType || (exports.PushChangesLimitType = {}));
const Environment = t__namespace.type({
  kind: t__namespace.union([t__namespace.literal("prod"), t__namespace.literal("stage"), t__namespace.literal("dev")]),
  name: t__namespace.string,
  domain: t__namespace.string,
  users: t__namespace.array(t__namespace.type({
    id: t__namespace.string
  }))
});
exports.Environment = Environment;
exports.PrismicRepository = PrismicRepository;
exports.PrismicRepositoryRole = PrismicRepositoryRole;
exports.PrismicRepositoryUserAgent = PrismicRepositoryUserAgent;
exports.PushChangesRawLimit = PushChangesRawLimit;
//# sourceMappingURL=types.cjs.map
