import { PropType, AllowedComponentProps, ComponentCustomProps, VNodeProps } from "vue";
import { SliceSimulatorProps as BaseSliceSimulatorProps } from "@prismicio/simulator/kit";
export type SliceSimulatorProps = Omit<BaseSliceSimulatorProps, "state">;
export declare const SliceSimulatorImpl: import("vue").DefineComponent<{
    zIndex: {
        type: PropType<Required<number | undefined>>;
        default: number;
        required: false;
    };
    background: {
        type: PropType<Required<string | undefined>>;
        default: string;
        required: false;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    zIndex: {
        type: PropType<Required<number | undefined>>;
        default: number;
        required: false;
    };
    background: {
        type: PropType<Required<string | undefined>>;
        default: string;
        required: false;
    };
}>>, {
    background: Required<string | undefined>;
    zIndex: Required<number | undefined>;
}>;
export declare const SliceSimulator: new () => {
    $props: AllowedComponentProps & ComponentCustomProps & VNodeProps & SliceSimulatorProps;
};
