{"version":3,"file":"SliceSimulator.cjs","sources":["../../../src/simulator/SliceSimulator.ts"],"sourcesContent":["import {\n\tdefineComponent,\n\tref,\n\tonMounted,\n\th,\n\tPropType,\n\tVNodeArrayChildren,\n\tAllowedComponentProps,\n\tComponentCustomProps,\n\tVNodeProps,\n\tonUnmounted,\n} from \"vue\";\n\nimport {\n\tgetDefaultProps,\n\tgetDefaultSlices,\n\tgetDefaultMessage,\n\tonClickHandler,\n\tdisableEventHandler,\n\tsimulatorClass,\n\tsimulatorRootClass,\n\tSliceSimulatorProps as BaseSliceSimulatorProps,\n\tStateEventType,\n\tSimulatorManager,\n} from \"@prismicio/simulator/kit\";\n\nexport type SliceSimulatorProps = Omit<BaseSliceSimulatorProps, \"state\">;\n\nconst simulatorManager = new SimulatorManager();\n\nexport const SliceSimulatorImpl = /*#__PURE__*/ defineComponent({\n\tname: \"SliceSimulator\",\n\tprops: {\n\t\tzIndex: {\n\t\t\ttype: Number as PropType<Required<SliceSimulatorProps[\"zIndex\"]>>,\n\t\t\tdefault: getDefaultProps().zIndex,\n\t\t\trequired: false,\n\t\t},\n\t\tbackground: {\n\t\t\ttype: String as PropType<Required<SliceSimulatorProps[\"background\"]>>,\n\t\t\tdefault: getDefaultProps().background,\n\t\t\trequired: false,\n\t\t},\n\t},\n\tsetup(props, { slots }) {\n\t\tconst slices = ref(getDefaultSlices());\n\t\tconst message = ref(getDefaultMessage());\n\n\t\tonMounted(() => {\n\t\t\tsimulatorManager.state.on(\n\t\t\t\tStateEventType.Slices,\n\t\t\t\t(_slices) => {\n\t\t\t\t\tslices.value = _slices;\n\t\t\t\t},\n\t\t\t\t\"simulator-slices\",\n\t\t\t);\n\t\t\tsimulatorManager.state.on(\n\t\t\t\tStateEventType.Message,\n\t\t\t\t(_message) => {\n\t\t\t\t\tmessage.value = _message;\n\t\t\t\t},\n\t\t\t\t\"simulator-message\",\n\t\t\t);\n\n\t\t\tsimulatorManager.init();\n\t\t});\n\n\t\tonUnmounted(() => {\n\t\t\tsimulatorManager.state.off(StateEventType.Slices, \"simulator-slices\");\n\n\t\t\tsimulatorManager.state.off(StateEventType.Message, \"simulator-message\");\n\t\t});\n\n\t\treturn () => {\n\t\t\tconst children: VNodeArrayChildren = [];\n\n\t\t\tif (message.value) {\n\t\t\t\tchildren.push(\n\t\t\t\t\th(\"article\", {\n\t\t\t\t\t\tinnerHTML: message.value,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} else if (slices.value.length && slots.default) {\n\t\t\t\tchildren.push(\n\t\t\t\t\th(\n\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: \"root\",\n\t\t\t\t\t\t\tclass: simulatorRootClass,\n\t\t\t\t\t\t\tonClickCapture: onClickHandler,\n\t\t\t\t\t\t\tonSubmitCapture: disableEventHandler,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tslots.default({\n\t\t\t\t\t\t\t\tslices: slices.value,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn h(\n\t\t\t\t\"div\",\n\t\t\t\t{\n\t\t\t\t\tclass: simulatorClass,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tzIndex: props.zIndex,\n\t\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\theight: \"100vh\",\n\t\t\t\t\t\toverflow: \"auto\",\n\t\t\t\t\t\tbackground: props.background,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tchildren,\n\t\t\t);\n\t\t};\n\t},\n});\n\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nexport const SliceSimulator = SliceSimulatorImpl as unknown as {\n\tnew (): {\n\t\t$props: AllowedComponentProps &\n\t\t\tComponentCustomProps &\n\t\t\tVNodeProps &\n\t\t\tSliceSimulatorProps;\n\t};\n};\n"],"names":["SimulatorManager","defineComponent","getDefaultProps","ref","getDefaultSlices","getDefaultMessage","onMounted","StateEventType","onUnmounted","h","simulatorRootClass","onClickHandler","disableEventHandler","simulatorClass"],"mappings":";;;;AA4BA,MAAM,mBAAmB,IAAIA,IAAAA;AAEtB,MAAM,qBAAmDC,oBAAAA,gBAAA;AAAA,EAC/D,MAAM;AAAA,EACN,OAAO;AAAA,IACN,QAAQ;AAAA,MACP,MAAM;AAAA,MACN,SAASC,sBAAkB;AAAA,MAC3B,UAAU;AAAA,IACV;AAAA,IACD,YAAY;AAAA,MACX,MAAM;AAAA,MACN,SAASA,sBAAkB;AAAA,MAC3B,UAAU;AAAA,IACV;AAAA,EACD;AAAA,EACD,MAAM,OAAO,EAAE,SAAO;AACf,UAAA,SAASC,IAAAA,IAAIC,IAAA,iBAAA,CAAkB;AAC/B,UAAA,UAAUD,IAAAA,IAAIE,IAAA,kBAAA,CAAmB;AAEvCC,QAAAA,UAAU,MAAK;AACd,uBAAiB,MAAM,GACtBC,IAAe,eAAA,QACf,CAAC,YAAW;AACX,eAAO,QAAQ;AAAA,SAEhB,kBAAkB;AAEnB,uBAAiB,MAAM,GACtBA,IAAe,eAAA,SACf,CAAC,aAAY;AACZ,gBAAQ,QAAQ;AAAA,SAEjB,mBAAmB;AAGpB,uBAAiB,KAAI;AAAA,IAAA,CACrB;AAEDC,QAAAA,YAAY,MAAK;AAChB,uBAAiB,MAAM,IAAID,IAAe,eAAA,QAAQ,kBAAkB;AAEpE,uBAAiB,MAAM,IAAIA,IAAe,eAAA,SAAS,mBAAmB;AAAA,IAAA,CACtE;AAED,WAAO,MAAK;AACX,YAAM,WAA+B,CAAA;AAErC,UAAI,QAAQ,OAAO;AACT,iBAAA,KACRE,MAAE,WAAW;AAAA,UACZ,WAAW,QAAQ;AAAA,QACnB,CAAA,CAAC;AAAA,MAEO,WAAA,OAAO,MAAM,UAAU,MAAM,SAAS;AACvC,iBAAA,KACRA,MACC,OACA;AAAA,UACC,IAAI;AAAA,UACJ,OAAOC,IAAA;AAAA,UACP,gBAAgBC,IAAA;AAAA,UAChB,iBAAiBC,IAAA;AAAA,QAAA,GAElB;AAAA,UACC,MAAM,QAAQ;AAAA,YACb,QAAQ,OAAO;AAAA,UAAA,CACf;AAAA,QACD,CAAA,CACD;AAAA,MAEF;AAED,aAAOH,IAAAA,EACN,OACA;AAAA,QACC,OAAOI,IAAA;AAAA,QACP,OAAO;AAAA,UACN,QAAQ,MAAM;AAAA,UACd,UAAU;AAAA,UACV,KAAK;AAAA,UACL,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,UAAU;AAAA,UACV,YAAY,MAAM;AAAA,QAClB;AAAA,SAEF,QAAQ;AAAA,IAAA;AAAA,EAGX;AACA,CAAA;AAIM,MAAM,iBAAiB;;;"}