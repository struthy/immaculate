"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const vue = require("vue");
const kit = require("@prismicio/simulator/kit");
const simulatorManager = new kit.SimulatorManager();
const SliceSimulatorImpl = /* @__PURE__ */ vue.defineComponent({
  name: "SliceSimulator",
  props: {
    zIndex: {
      type: Number,
      default: kit.getDefaultProps().zIndex,
      required: false
    },
    background: {
      type: String,
      default: kit.getDefaultProps().background,
      required: false
    }
  },
  setup(props, { slots }) {
    const slices = vue.ref(kit.getDefaultSlices());
    const message = vue.ref(kit.getDefaultMessage());
    vue.onMounted(() => {
      simulatorManager.state.on(kit.StateEventType.Slices, (_slices) => {
        slices.value = _slices;
      }, "simulator-slices");
      simulatorManager.state.on(kit.StateEventType.Message, (_message) => {
        message.value = _message;
      }, "simulator-message");
      simulatorManager.init();
    });
    vue.onUnmounted(() => {
      simulatorManager.state.off(kit.StateEventType.Slices, "simulator-slices");
      simulatorManager.state.off(kit.StateEventType.Message, "simulator-message");
    });
    return () => {
      const children = [];
      if (message.value) {
        children.push(vue.h("article", {
          innerHTML: message.value
        }));
      } else if (slices.value.length && slots.default) {
        children.push(vue.h("div", {
          id: "root",
          class: kit.simulatorRootClass,
          onClickCapture: kit.onClickHandler,
          onSubmitCapture: kit.disableEventHandler
        }, [
          slots.default({
            slices: slices.value
          })
        ]));
      }
      return vue.h("div", {
        class: kit.simulatorClass,
        style: {
          zIndex: props.zIndex,
          position: "fixed",
          top: 0,
          left: 0,
          width: "100%",
          height: "100vh",
          overflow: "auto",
          background: props.background
        }
      }, children);
    };
  }
});
const SliceSimulator = SliceSimulatorImpl;
exports.SliceSimulator = SliceSimulator;
exports.SliceSimulatorImpl = SliceSimulatorImpl;
//# sourceMappingURL=SliceSimulator.cjs.map
