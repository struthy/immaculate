{
  "resolvedId": "C:/webdev/Tutorials/nuxt-blog/node_modules/@prismicio/vue/dist/createPrismic.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createClient, filter, cookie, asText, asHTML, asLink, asLinkAttrs, asDate, asImageSrc, asImageWidthSrcSet, asImagePixelDensitySrcSet, isFilled, documentToLinkField } from \"@prismicio/client\";\nimport { prismicKey } from \"./injectionSymbols.js\";\nimport { PrismicLink } from \"./components/PrismicLink.js\";\nimport { PrismicEmbed } from \"./components/PrismicEmbed.js\";\nimport { PrismicImage } from \"./components/PrismicImage.js\";\nimport { PrismicText } from \"./components/PrismicText.js\";\nimport { PrismicRichText } from \"./components/PrismicRichText.js\";\nimport { SliceZone } from \"./components/SliceZone.js\";\nconst createPrismic = (options) => {\n  let client;\n  if (options.client) {\n    client = options.client;\n  } else {\n    client = createClient(options.endpoint, {\n      fetch: async (endpoint, options2) => {\n        let fetchFunction;\n        if (typeof globalThis.fetch === \"function\") {\n          fetchFunction = globalThis.fetch;\n        } else {\n          fetchFunction = (await import(\"isomorphic-unfetch\")).default;\n        }\n        return await fetchFunction(endpoint, options2);\n      },\n      ...options.clientConfig\n    });\n  }\n  const prismicClient = {\n    client,\n    filter,\n    cookie\n  };\n  const prismicHelpers = {\n    asText,\n    asHTML: (richTextField, ...config) => {\n      const [configOrLinkResolver, maybeHTMLSerializer] = config;\n      return asHTML(richTextField, typeof configOrLinkResolver === \"function\" || configOrLinkResolver == null ? {\n        linkResolver: configOrLinkResolver || options.linkResolver,\n        serializer: maybeHTMLSerializer || options.richTextSerializer || options.htmlSerializer\n      } : {\n        linkResolver: options.linkResolver,\n        serializer: options.richTextSerializer || options.htmlSerializer,\n        ...configOrLinkResolver\n      });\n    },\n    asLink: (linkField, config) => {\n      return asLink(linkField, typeof config === \"function\" ? { linkResolver: config } : {\n        linkResolver: options.linkResolver,\n        // TODO: For some reasons, TypeScript narrows the type to \"unknown\" where it's supposed to be a union\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ...config\n      });\n    },\n    asLinkAttrs: (linkField, config) => {\n      return asLinkAttrs(linkField, {\n        // TODO: We can't really retrieve the generic type here, this might cause some unexpected type error in some edge-case scenario\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        linkResolver: options.linkResolver,\n        ...config\n      });\n    },\n    asDate,\n    asImageSrc,\n    asImageWidthSrcSet,\n    asImagePixelDensitySrcSet,\n    isFilled,\n    documentToLinkField\n  };\n  const prismic = {\n    options,\n    ...prismicClient,\n    ...prismicHelpers,\n    install(app) {\n      app.provide(prismicKey, this);\n      app.config.globalProperties.$prismic = this;\n      if (options.injectComponents !== false) {\n        app.component(PrismicLink.name, PrismicLink);\n        app.component(PrismicEmbed.name, PrismicEmbed);\n        app.component(PrismicImage.name, PrismicImage);\n        app.component(PrismicText.name, PrismicText);\n        app.component(PrismicRichText.name, PrismicRichText);\n        app.component(SliceZone.name, SliceZone);\n      }\n    }\n  };\n  return prismic;\n};\nexport {\n  createPrismic\n};\n//# sourceMappingURL=createPrismic.js.map\n",
      "start": 1720103997413,
      "end": 1720103997521,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720103997521,
      "end": 1720103997521,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720103997521,
      "end": 1720103997522,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103997522,
      "end": 1720103997522,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720103997522,
      "end": 1720103997522,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createClient, filter, cookie, asText, asHTML, asLink, asLinkAttrs, asDate, asImageSrc, asImageWidthSrcSet, asImagePixelDensitySrcSet, isFilled, documentToLinkField } from \"@prismicio/client\";\nimport { prismicKey } from \"./injectionSymbols.js\";\nimport { PrismicLink } from \"./components/PrismicLink.js\";\nimport { PrismicEmbed } from \"./components/PrismicEmbed.js\";\nimport { PrismicImage } from \"./components/PrismicImage.js\";\nimport { PrismicText } from \"./components/PrismicText.js\";\nimport { PrismicRichText } from \"./components/PrismicRichText.js\";\nimport { SliceZone } from \"./components/SliceZone.js\";\nconst createPrismic = (options) => {\n  let client;\n  if (options.client) {\n    client = options.client;\n  } else {\n    client = createClient(options.endpoint, {\n      fetch: async (endpoint, options2) => {\n        let fetchFunction;\n        if (typeof globalThis.fetch === \"function\") {\n          fetchFunction = globalThis.fetch;\n        } else {\n          fetchFunction = (await import(\"isomorphic-unfetch\")).default;\n        }\n        return await fetchFunction(endpoint, options2);\n      },\n      ...options.clientConfig\n    });\n  }\n  const prismicClient = {\n    client,\n    filter,\n    cookie\n  };\n  const prismicHelpers = {\n    asText,\n    asHTML: (richTextField, ...config) => {\n      const [configOrLinkResolver, maybeHTMLSerializer] = config;\n      return asHTML(richTextField, typeof configOrLinkResolver === \"function\" || configOrLinkResolver == null ? {\n        linkResolver: configOrLinkResolver || options.linkResolver,\n        serializer: maybeHTMLSerializer || options.richTextSerializer || options.htmlSerializer\n      } : {\n        linkResolver: options.linkResolver,\n        serializer: options.richTextSerializer || options.htmlSerializer,\n        ...configOrLinkResolver\n      });\n    },\n    asLink: (linkField, config) => {\n      return asLink(linkField, typeof config === \"function\" ? { linkResolver: config } : {\n        linkResolver: options.linkResolver,\n        // TODO: For some reasons, TypeScript narrows the type to \"unknown\" where it's supposed to be a union\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ...config\n      });\n    },\n    asLinkAttrs: (linkField, config) => {\n      return asLinkAttrs(linkField, {\n        // TODO: We can't really retrieve the generic type here, this might cause some unexpected type error in some edge-case scenario\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        linkResolver: options.linkResolver,\n        ...config\n      });\n    },\n    asDate,\n    asImageSrc,\n    asImageWidthSrcSet,\n    asImagePixelDensitySrcSet,\n    isFilled,\n    documentToLinkField\n  };\n  const prismic = {\n    options,\n    ...prismicClient,\n    ...prismicHelpers,\n    install(app) {\n      app.provide(prismicKey, this);\n      app.config.globalProperties.$prismic = this;\n      if (options.injectComponents !== false) {\n        app.component(PrismicLink.name, PrismicLink);\n        app.component(PrismicEmbed.name, PrismicEmbed);\n        app.component(PrismicImage.name, PrismicImage);\n        app.component(PrismicText.name, PrismicText);\n        app.component(PrismicRichText.name, PrismicRichText);\n        app.component(SliceZone.name, SliceZone);\n      }\n    }\n  };\n  return prismic;\n};\nexport {\n  createPrismic\n};\n",
      "start": 1720103997522,
      "end": 1720103997573,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"C:/webdev/Tutorials/nuxt-blog/node_modules/@prismicio/vue/dist/createPrismic.js\"],\n  \"sourcesContent\": [\"import { createClient, filter, cookie, asText, asHTML, asLink, asLinkAttrs, asDate, asImageSrc, asImageWidthSrcSet, asImagePixelDensitySrcSet, isFilled, documentToLinkField } from \\\"@prismicio/client\\\";\\nimport { prismicKey } from \\\"./injectionSymbols.js\\\";\\nimport { PrismicLink } from \\\"./components/PrismicLink.js\\\";\\nimport { PrismicEmbed } from \\\"./components/PrismicEmbed.js\\\";\\nimport { PrismicImage } from \\\"./components/PrismicImage.js\\\";\\nimport { PrismicText } from \\\"./components/PrismicText.js\\\";\\nimport { PrismicRichText } from \\\"./components/PrismicRichText.js\\\";\\nimport { SliceZone } from \\\"./components/SliceZone.js\\\";\\nconst createPrismic = (options) => {\\n  let client;\\n  if (options.client) {\\n    client = options.client;\\n  } else {\\n    client = createClient(options.endpoint, {\\n      fetch: async (endpoint, options2) => {\\n        let fetchFunction;\\n        if (typeof globalThis.fetch === \\\"function\\\") {\\n          fetchFunction = globalThis.fetch;\\n        } else {\\n          fetchFunction = (await import(\\\"isomorphic-unfetch\\\")).default;\\n        }\\n        return await fetchFunction(endpoint, options2);\\n      },\\n      ...options.clientConfig\\n    });\\n  }\\n  const prismicClient = {\\n    client,\\n    filter,\\n    cookie\\n  };\\n  const prismicHelpers = {\\n    asText,\\n    asHTML: (richTextField, ...config) => {\\n      const [configOrLinkResolver, maybeHTMLSerializer] = config;\\n      return asHTML(richTextField, typeof configOrLinkResolver === \\\"function\\\" || configOrLinkResolver == null ? {\\n        linkResolver: configOrLinkResolver || options.linkResolver,\\n        serializer: maybeHTMLSerializer || options.richTextSerializer || options.htmlSerializer\\n      } : {\\n        linkResolver: options.linkResolver,\\n        serializer: options.richTextSerializer || options.htmlSerializer,\\n        ...configOrLinkResolver\\n      });\\n    },\\n    asLink: (linkField, config) => {\\n      return asLink(linkField, typeof config === \\\"function\\\" ? { linkResolver: config } : {\\n        linkResolver: options.linkResolver,\\n        // TODO: For some reasons, TypeScript narrows the type to \\\"unknown\\\" where it's supposed to be a union\\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\\n        ...config\\n      });\\n    },\\n    asLinkAttrs: (linkField, config) => {\\n      return asLinkAttrs(linkField, {\\n        // TODO: We can't really retrieve the generic type here, this might cause some unexpected type error in some edge-case scenario\\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\\n        linkResolver: options.linkResolver,\\n        ...config\\n      });\\n    },\\n    asDate,\\n    asImageSrc,\\n    asImageWidthSrcSet,\\n    asImagePixelDensitySrcSet,\\n    isFilled,\\n    documentToLinkField\\n  };\\n  const prismic = {\\n    options,\\n    ...prismicClient,\\n    ...prismicHelpers,\\n    install(app) {\\n      app.provide(prismicKey, this);\\n      app.config.globalProperties.$prismic = this;\\n      if (options.injectComponents !== false) {\\n        app.component(PrismicLink.name, PrismicLink);\\n        app.component(PrismicEmbed.name, PrismicEmbed);\\n        app.component(PrismicImage.name, PrismicImage);\\n        app.component(PrismicText.name, PrismicText);\\n        app.component(PrismicRichText.name, PrismicRichText);\\n        app.component(SliceZone.name, SliceZone);\\n      }\\n    }\\n  };\\n  return prismic;\\n};\\nexport {\\n  createPrismic\\n};\\n//# sourceMappingURL=createPrismic.js.map\\n\"],\n  \"mappings\": \"AAAA,SAAS,cAAc,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,aAAa,QAAQ,YAAY,oBAAoB,2BAA2B,UAAU,2BAA2B;AACpL,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAChC,SAAS,iBAAiB;AAC1B,MAAM,gBAAgB,CAAC,YAAY;AACjC,MAAI;AACJ,MAAI,QAAQ,QAAQ;AAClB,aAAS,QAAQ;AAAA,EACnB,OAAO;AACL,aAAS,aAAa,QAAQ,UAAU;AAAA,MACtC,OAAO,OAAO,UAAU,aAAa;AACnC,YAAI;AACJ,YAAI,OAAO,WAAW,UAAU,YAAY;AAC1C,0BAAgB,WAAW;AAAA,QAC7B,OAAO;AACL,2BAAiB,MAAM,OAAO,oBAAoB,GAAG;AAAA,QACvD;AACA,eAAO,MAAM,cAAc,UAAU,QAAQ;AAAA,MAC/C;AAAA,MACA,GAAG,QAAQ;AAAA,IACb,CAAC;AAAA,EACH;AACA,QAAM,gBAAgB;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,iBAAiB;AAAA,IACrB;AAAA,IACA,QAAQ,CAAC,kBAAkB,WAAW;AACpC,YAAM,CAAC,sBAAsB,mBAAmB,IAAI;AACpD,aAAO,OAAO,eAAe,OAAO,yBAAyB,cAAc,wBAAwB,OAAO;AAAA,QACxG,cAAc,wBAAwB,QAAQ;AAAA,QAC9C,YAAY,uBAAuB,QAAQ,sBAAsB,QAAQ;AAAA,MAC3E,IAAI;AAAA,QACF,cAAc,QAAQ;AAAA,QACtB,YAAY,QAAQ,sBAAsB,QAAQ;AAAA,QAClD,GAAG;AAAA,MACL,CAAC;AAAA,IACH;AAAA,IACA,QAAQ,CAAC,WAAW,WAAW;AAC7B,aAAO,OAAO,WAAW,OAAO,WAAW,aAAa,EAAE,cAAc,OAAO,IAAI;AAAA,QACjF,cAAc,QAAQ;AAAA;AAAA;AAAA,QAGtB,GAAG;AAAA,MACL,CAAC;AAAA,IACH;AAAA,IACA,aAAa,CAAC,WAAW,WAAW;AAClC,aAAO,YAAY,WAAW;AAAA;AAAA;AAAA,QAG5B,cAAc,QAAQ;AAAA,QACtB,GAAG;AAAA,MACL,CAAC;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,UAAU;AAAA,IACd;AAAA,IACA,GAAG;AAAA,IACH,GAAG;AAAA,IACH,QAAQ,KAAK;AACX,UAAI,QAAQ,YAAY,IAAI;AAC5B,UAAI,OAAO,iBAAiB,WAAW;AACvC,UAAI,QAAQ,qBAAqB,OAAO;AACtC,YAAI,UAAU,YAAY,MAAM,WAAW;AAC3C,YAAI,UAAU,aAAa,MAAM,YAAY;AAC7C,YAAI,UAAU,aAAa,MAAM,YAAY;AAC7C,YAAI,UAAU,YAAY,MAAM,WAAW;AAC3C,YAAI,UAAU,gBAAgB,MAAM,eAAe;AACnD,YAAI,UAAU,UAAU,MAAM,SAAS;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AACA;AAAA,EACE;AAAA;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1720103997573,
      "end": 1720103997573,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720103997573,
      "end": 1720103997573,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720103997573,
      "end": 1720103997573,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720103997573,
      "end": 1720103997573,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720103997574,
      "end": 1720103997574,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720103997575,
      "end": 1720103997575,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720103997575,
      "end": 1720103997575,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720103997575,
      "end": 1720103997575,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720103997575,
      "end": 1720103997575,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720103997575,
      "end": 1720103997576,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720103997575,
      "end": 1720103997576,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720103997577,
      "end": 1720103997577,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720103997577,
      "end": 1720103997577,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720103997577,
      "end": 1720103997577,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720103997577,
      "end": 1720103997577,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1720103997577,
      "end": 1720103997577,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720103997577,
      "end": 1720103997577,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720103997577,
      "end": 1720103997577,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720103997577,
      "end": 1720103997578,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720103997580,
      "end": 1720103997580,
      "order": "normal"
    }
  ]
}
