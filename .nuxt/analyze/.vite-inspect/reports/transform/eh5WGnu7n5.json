{
  "resolvedId": "C:/webdev/Tutorials/nuxt-blog/node_modules/@prismicio/client/dist/helpers/mapSliceZone.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function mapSliceZone(sliceZone, mappers, context) {\n  return Promise.all(sliceZone.map(async (slice, index, slices) => {\n    const isRestSliceType = \"slice_type\" in slice;\n    const sliceType = isRestSliceType ? slice.slice_type : slice.type;\n    const mapper = mappers[sliceType];\n    if (!mapper) {\n      return slice;\n    }\n    const mapperArgs = { slice, slices, index, context };\n    let result = await mapper(\n      // @ts-expect-error - I don't know how to fix this type\n      mapperArgs\n    );\n    if (\n      // `mapper.length < 1` ensures the given\n      // function is something of the form:\n      // `() => import(...)`\n      mapper.length < 1 && (typeof result === \"function\" || typeof result === \"object\" && \"default\" in result)\n    ) {\n      result = \"default\" in result ? result.default : result;\n      result = await result(mapperArgs);\n    }\n    if (isRestSliceType) {\n      return {\n        __mapped: true,\n        id: slice.id,\n        slice_type: sliceType,\n        ...result\n      };\n    } else {\n      return {\n        __mapped: true,\n        type: sliceType,\n        ...result\n      };\n    }\n  }));\n}\nexport {\n  mapSliceZone\n};\n//# sourceMappingURL=mapSliceZone.js.map\n",
      "start": 1720103994612,
      "end": 1720103994869,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720103994869,
      "end": 1720103994869,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720103994870,
      "end": 1720103994870,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720103994870,
      "end": 1720103994870,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720103994870,
      "end": 1720103994870,
      "order": "normal"
    }
  ]
}
