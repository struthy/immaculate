{
  "resolvedId": "C:/webdev/Tutorials/nuxt-blog/node_modules/@prismicio/client/dist/helpers/asHTML.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { serializeStandardTag, serializePreFormatted, serializeImage, serializeEmbed, serializeHyperlink, serializeSpan } from \"../lib/serializerHelpers.js\";\nimport { serialize } from \"../richtext/serialize.js\";\nimport { wrapMapSerializer } from \"../richtext/wrapMapSerializer.js\";\nimport { composeSerializers } from \"../richtext/composeSerializers.js\";\nconst createHTMLRichTextSerializer = (linkResolver, serializer) => {\n  const useSerializerOrDefault = (nodeSerializerOrShorthand, defaultWithShorthand) => {\n    if (typeof nodeSerializerOrShorthand === \"function\") {\n      return (payload) => {\n        return nodeSerializerOrShorthand(payload) || defaultWithShorthand(payload);\n      };\n    }\n    return defaultWithShorthand;\n  };\n  const mapSerializer = {\n    heading1: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading1, serializeStandardTag(\"h1\", serializer == null ? void 0 : serializer.heading1)),\n    heading2: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading2, serializeStandardTag(\"h2\", serializer == null ? void 0 : serializer.heading2)),\n    heading3: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading3, serializeStandardTag(\"h3\", serializer == null ? void 0 : serializer.heading3)),\n    heading4: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading4, serializeStandardTag(\"h4\", serializer == null ? void 0 : serializer.heading4)),\n    heading5: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading5, serializeStandardTag(\"h5\", serializer == null ? void 0 : serializer.heading5)),\n    heading6: useSerializerOrDefault(serializer == null ? void 0 : serializer.heading6, serializeStandardTag(\"h6\", serializer == null ? void 0 : serializer.heading6)),\n    paragraph: useSerializerOrDefault(serializer == null ? void 0 : serializer.paragraph, serializeStandardTag(\"p\", serializer == null ? void 0 : serializer.paragraph)),\n    preformatted: useSerializerOrDefault(serializer == null ? void 0 : serializer.preformatted, serializePreFormatted(serializer == null ? void 0 : serializer.preformatted)),\n    strong: useSerializerOrDefault(serializer == null ? void 0 : serializer.strong, serializeStandardTag(\"strong\", serializer == null ? void 0 : serializer.strong)),\n    em: useSerializerOrDefault(serializer == null ? void 0 : serializer.em, serializeStandardTag(\"em\", serializer == null ? void 0 : serializer.em)),\n    listItem: useSerializerOrDefault(serializer == null ? void 0 : serializer.listItem, serializeStandardTag(\"li\", serializer == null ? void 0 : serializer.listItem)),\n    oListItem: useSerializerOrDefault(serializer == null ? void 0 : serializer.oListItem, serializeStandardTag(\"li\", serializer == null ? void 0 : serializer.oListItem)),\n    list: useSerializerOrDefault(serializer == null ? void 0 : serializer.list, serializeStandardTag(\"ul\", serializer == null ? void 0 : serializer.list)),\n    oList: useSerializerOrDefault(serializer == null ? void 0 : serializer.oList, serializeStandardTag(\"ol\", serializer == null ? void 0 : serializer.oList)),\n    image: useSerializerOrDefault(serializer == null ? void 0 : serializer.image, serializeImage(linkResolver, serializer == null ? void 0 : serializer.image)),\n    embed: useSerializerOrDefault(serializer == null ? void 0 : serializer.embed, serializeEmbed(serializer == null ? void 0 : serializer.embed)),\n    hyperlink: useSerializerOrDefault(serializer == null ? void 0 : serializer.hyperlink, serializeHyperlink(linkResolver, serializer == null ? void 0 : serializer.hyperlink)),\n    label: useSerializerOrDefault(serializer == null ? void 0 : serializer.label, serializeStandardTag(\"span\", serializer == null ? void 0 : serializer.label)),\n    span: useSerializerOrDefault(serializer == null ? void 0 : serializer.span, serializeSpan())\n  };\n  return wrapMapSerializerWithStringChildren(mapSerializer);\n};\nconst wrapMapSerializerWithStringChildren = (mapSerializer) => {\n  const modifiedMapSerializer = {};\n  for (const tag in mapSerializer) {\n    const tagSerializer = mapSerializer[tag];\n    if (tagSerializer) {\n      modifiedMapSerializer[tag] = (payload) => {\n        return tagSerializer({\n          ...payload,\n          // @ts-expect-error - merging blockSerializer types causes TS to bail to a never type\n          children: payload.children.join(\"\")\n        });\n      };\n    }\n  }\n  return wrapMapSerializer(modifiedMapSerializer);\n};\nconst asHTML = (richTextField, ...configObjectOrTuple) => {\n  if (richTextField) {\n    const [configObjectOrLinkResolver, maybeSerializer] = configObjectOrTuple;\n    let config;\n    if (typeof configObjectOrLinkResolver === \"function\" || configObjectOrLinkResolver == null) {\n      config = {\n        linkResolver: configObjectOrLinkResolver,\n        serializer: maybeSerializer\n      };\n    } else {\n      config = { ...configObjectOrLinkResolver };\n    }\n    let serializer;\n    if (config.serializer) {\n      if (typeof config.serializer === \"function\") {\n        serializer = composeSerializers((type, node, text, children, key) => (\n          // TypeScript doesn't narrow the type correctly here since it is now in a callback function, so we have to cast it here.\n          config.serializer(type, node, text, children.join(\"\"), key)\n        ), createHTMLRichTextSerializer(config.linkResolver));\n      } else {\n        serializer = createHTMLRichTextSerializer(config.linkResolver, config.serializer);\n      }\n    } else {\n      serializer = createHTMLRichTextSerializer(config.linkResolver);\n    }\n    return serialize(richTextField, serializer).join(\"\");\n  } else {\n    return null;\n  }\n};\nexport {\n  asHTML\n};\n//# sourceMappingURL=asHTML.js.map\n",
      "start": 1720177711022,
      "end": 1720177711058,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720177711059,
      "end": 1720177711059,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720177711059,
      "end": 1720177711060,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720177711060,
      "end": 1720177711060,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720177711060,
      "end": 1720177711060,
      "order": "normal"
    }
  ]
}
