{
  "resolvedId": "C:/webdev/Tutorials/nuxt-blog/node_modules/@prismicio/simulator/dist/channel/messages.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import statuses from \"statuses\";\nlet requestID = 0;\nconst createRequestMessage = (type, data, prefix = \"\") => {\n  return {\n    requestID: `${prefix}${requestID++}`,\n    type,\n    data\n  };\n};\nconst createSuccessResponseMessage = (requestID2, data, status = 200) => {\n  var _a;\n  if (status >= 400) {\n    throw new TypeError(`Invalid success status code, expected status to be within \\`[100;400[\\`, got \\`${status}\\``);\n  }\n  return {\n    requestID: requestID2,\n    status,\n    msg: ((_a = statuses.message[status]) == null ? void 0 : _a.replace(/\\.$/, \"\").toLowerCase()) ?? \"\",\n    data\n  };\n};\nconst createErrorResponseMessage = (requestID2, error, status = 400) => {\n  var _a;\n  if (status < 400) {\n    throw new TypeError(`Invalid error status code, expected status to be within \\`[500;600[\\`, got \\`${status}\\``);\n  }\n  return {\n    requestID: requestID2,\n    status,\n    msg: ((_a = statuses.message[status]) == null ? void 0 : _a.replace(/\\.$/, \"\").toLowerCase()) ?? \"\",\n    error\n  };\n};\nconst validateMessage = (message) => {\n  if (typeof message !== \"object\" || message === null) {\n    throw new TypeError(`Invalid message received, expected message to be of type \\`object\\`, got \\`${typeof message}\\``);\n  } else if (!Object.keys(message).every((key) => [\"requestID\", \"type\", \"data\", \"status\", \"msg\", \"error\"].includes(key))) {\n    throw new TypeError(`Invalid message received: ${JSON.stringify(message)}`);\n  } else if (typeof message.requestID !== \"string\") {\n    throw new TypeError(`Invalid message received, expected \\`message.requestID\\` to be of type \\`string\\`, got \\`${typeof message.id}\\``);\n  }\n  return message;\n};\nconst isRequestMessage = (message) => {\n  return \"type\" in message;\n};\nconst isResponseMessage = (message) => {\n  return !(\"type\" in message);\n};\nconst isSuccessResponseMessage = (message) => {\n  return isResponseMessage(message) && !(\"error\" in message);\n};\nconst isErrorResponseMessage = (message) => {\n  return isResponseMessage(message) && !(\"data\" in message);\n};\nexport {\n  createErrorResponseMessage,\n  createRequestMessage,\n  createSuccessResponseMessage,\n  isErrorResponseMessage,\n  isRequestMessage,\n  isResponseMessage,\n  isSuccessResponseMessage,\n  validateMessage\n};\n//# sourceMappingURL=messages.js.map\n",
      "start": 1720177711522,
      "end": 1720177711526,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720177711526,
      "end": 1720177711526,
      "order": "normal"
    }
  ]
}
