{
  "resolvedId": "C:/webdev/Tutorials/nuxt-blog/node_modules/@prismicio/client/dist/buildQueryURL.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { castArray } from \"./lib/castArray.js\";\nimport { devMsg } from \"./lib/devMsg.js\";\nconst RENAMED_PARAMS = {\n  accessToken: \"access_token\"\n};\nconst castOrderingToString = (ordering) => {\n  if (typeof ordering === \"string\") {\n    if (process.env.NODE_ENV === \"development\") {\n      const [field, direction] = ordering.split(\" \");\n      const objectForm = direction === \"desc\" ? `{ field: \"${field}\", direction: \"desc\" }` : `{ field: \"${field}\" }`;\n      console.warn(`[@prismicio/client] A string value was provided to the \\`orderings\\` query parameter. Strings are deprecated. Please convert it to the object form: ${objectForm}. For more details, see ${devMsg(\"orderings-must-be-an-array-of-objects\")}`);\n    }\n    return ordering;\n  }\n  return ordering.direction === \"desc\" ? `${ordering.field} desc` : ordering.field;\n};\nconst buildQueryURL = (endpoint, args) => {\n  const { filters, predicates, ...params } = args;\n  const url = new URL(`documents/search`, `${endpoint}/`);\n  if (filters) {\n    if (process.env.NODE_ENV === \"development\" && !Array.isArray(filters)) {\n      console.warn(`[@prismicio/client] A non-array value was provided to the \\`filters\\` query parameter (\\`${filters}\\`). Non-array values are deprecated. Please convert it to an array. For more details, see ${devMsg(\"filters-must-be-an-array\")}`);\n    }\n    for (const filter of castArray(filters)) {\n      url.searchParams.append(\"q\", `[${filter}]`);\n    }\n  }\n  if (predicates) {\n    for (const predicate of castArray(predicates)) {\n      url.searchParams.append(\"q\", `[${predicate}]`);\n    }\n  }\n  for (const k in params) {\n    const name = RENAMED_PARAMS[k] || k;\n    let value = params[k];\n    if (name === \"orderings\") {\n      const scopedValue = params[name];\n      if (scopedValue != null) {\n        if (process.env.NODE_ENV === \"development\" && typeof scopedValue === \"string\") {\n          console.warn(`[@prismicio/client] A string value was provided to the \\`orderings\\` query parameter. Strings are deprecated. Please convert it to an array of objects. For more details, see ${devMsg(\"orderings-must-be-an-array-of-objects\")}`);\n        }\n        const v = castArray(scopedValue).map((ordering) => castOrderingToString(ordering)).join(\",\");\n        value = `[${v}]`;\n      }\n    } else if (name === \"routes\") {\n      if (typeof params[name] === \"object\") {\n        value = JSON.stringify(castArray(params[name]));\n      }\n    }\n    if (value != null) {\n      url.searchParams.set(name, castArray(value).join(\",\"));\n    }\n  }\n  return url.toString();\n};\nexport {\n  buildQueryURL\n};\n//# sourceMappingURL=buildQueryURL.js.map\n",
      "start": 1720103994646,
      "end": 1720103994914,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720103994914,
      "end": 1720103994914,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { castArray } from \"./lib/castArray.js\";\nimport { devMsg } from \"./lib/devMsg.js\";\nconst RENAMED_PARAMS = {\n  accessToken: \"access_token\"\n};\nconst castOrderingToString = (ordering) => {\n  if (typeof ordering === \"string\") {\n    if (false) {\n      const [field, direction] = ordering.split(\" \");\n      const objectForm = direction === \"desc\" ? `{ field: \"${field}\", direction: \"desc\" }` : `{ field: \"${field}\" }`;\n      console.warn(`[@prismicio/client] A string value was provided to the \\`orderings\\` query parameter. Strings are deprecated. Please convert it to the object form: ${objectForm}. For more details, see ${devMsg(\"orderings-must-be-an-array-of-objects\")}`);\n    }\n    return ordering;\n  }\n  return ordering.direction === \"desc\" ? `${ordering.field} desc` : ordering.field;\n};\nconst buildQueryURL = (endpoint, args) => {\n  const { filters, predicates, ...params } = args;\n  const url = new URL(`documents/search`, `${endpoint}/`);\n  if (filters) {\n    if (false) {\n      console.warn(`[@prismicio/client] A non-array value was provided to the \\`filters\\` query parameter (\\`${filters}\\`). Non-array values are deprecated. Please convert it to an array. For more details, see ${devMsg(\"filters-must-be-an-array\")}`);\n    }\n    for (const filter of castArray(filters)) {\n      url.searchParams.append(\"q\", `[${filter}]`);\n    }\n  }\n  if (predicates) {\n    for (const predicate of castArray(predicates)) {\n      url.searchParams.append(\"q\", `[${predicate}]`);\n    }\n  }\n  for (const k in params) {\n    const name = RENAMED_PARAMS[k] || k;\n    let value = params[k];\n    if (name === \"orderings\") {\n      const scopedValue = params[name];\n      if (scopedValue != null) {\n        if (false) {\n          console.warn(`[@prismicio/client] A string value was provided to the \\`orderings\\` query parameter. Strings are deprecated. Please convert it to an array of objects. For more details, see ${devMsg(\"orderings-must-be-an-array-of-objects\")}`);\n        }\n        const v = castArray(scopedValue).map((ordering) => castOrderingToString(ordering)).join(\",\");\n        value = `[${v}]`;\n      }\n    } else if (name === \"routes\") {\n      if (typeof params[name] === \"object\") {\n        value = JSON.stringify(castArray(params[name]));\n      }\n    }\n    if (value != null) {\n      url.searchParams.set(name, castArray(value).join(\",\"));\n    }\n  }\n  return url.toString();\n};\nexport {\n  buildQueryURL\n};\n",
      "start": 1720103994914,
      "end": 1720103994918,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1720103994918,
      "end": 1720103994918,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720103994918,
      "end": 1720103994918,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720103994918,
      "end": 1720103994918,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720103994918,
      "end": 1720103994918,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720103994921,
      "end": 1720103994921,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720103994921,
      "end": 1720103994921,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720103994921,
      "end": 1720103994921,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720103994922,
      "end": 1720103994922,
      "order": "normal"
    }
  ]
}
