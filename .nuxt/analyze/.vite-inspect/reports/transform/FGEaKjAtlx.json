{
  "resolvedId": "C:/webdev/Tutorials/nuxt-blog/pages/[uid].vue?macro=true&vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { components } from '~/slices'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: '[uid]',\n  setup(__props) {\n\nconst prismic = usePrismic()\nconst route = useRoute()\nconst { data: page } = useAsyncData(route.params.uid as string, () =>\n  prismic.client.getByUID('page', route.params.uid as string)\n)\nconst settings = useSettings()\n\ndefinePageMeta({\n  withHeaderProfile: true,\n  withHeaderDivider: true,\n  withFooterSignUpForm: true\n})\n\nuseHead({\n  title: computed(() => `${prismic.asText(page.value?.data.title)} | ${prismic.asText(settings.value?.data.name)}`)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_SliceZone = _resolveComponent(\"SliceZone\")!\n\n  return (_openBlock(), _createBlock(_component_SliceZone, {\n    wrapper: \"main\",\n    slices: _unref(page)?.data.slices ?? [],\n    components: _unref(components)\n  }, null, 8, [\"slices\", \"components\"]))\n}\n}\n\n})",
      "start": 1720103995122,
      "end": 1720103995122
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720103995122,
      "end": 1720103995122,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720103995122,
      "end": 1720103995122,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720103995122,
      "end": 1720103995122,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720103995122,
      "end": 1720103995122,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport { components } from \"~/slices\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"[uid]\",\n  setup(__props) {\n    const prismic = usePrismic();\n    const route = useRoute();\n    const { data: page } = useAsyncData(\n      route.params.uid,\n      () => prismic.client.getByUID(\"page\", route.params.uid)\n    );\n    const settings = useSettings();\n    definePageMeta({\n      withHeaderProfile: true,\n      withHeaderDivider: true,\n      withFooterSignUpForm: true\n    });\n    useHead({\n      title: computed(() => `${prismic.asText(page.value?.data.title)} | ${prismic.asText(settings.value?.data.name)}`)\n    });\n    return (_ctx, _cache) => {\n      const _component_SliceZone = _resolveComponent(\"SliceZone\");\n      return _openBlock(), _createBlock(_component_SliceZone, {\n        wrapper: \"main\",\n        slices: _unref(page)?.data.slices ?? [],\n        components: _unref(components)\n      }, null, 8, [\"slices\", \"components\"]);\n    };\n  }\n});\n",
      "start": 1720103995122,
      "end": 1720103995237,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/webdev/Tutorials/nuxt-blog/pages/[uid].vue?macro=true&vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { components } from '~/slices'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: '[uid]',\n  setup(__props) {\n\nconst prismic = usePrismic()\nconst route = useRoute()\nconst { data: page } = useAsyncData(route.params.uid as string, () =>\n  prismic.client.getByUID('page', route.params.uid as string)\n)\nconst settings = useSettings()\n\ndefinePageMeta({\n  withHeaderProfile: true,\n  withHeaderDivider: true,\n  withFooterSignUpForm: true\n})\n\nuseHead({\n  title: computed(() => `${prismic.asText(page.value?.data.title)} | ${prismic.asText(settings.value?.data.name)}`)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_SliceZone = _resolveComponent(\"SliceZone\")!\n\n  return (_openBlock(), _createBlock(_component_SliceZone, {\n    wrapper: \"main\",\n    slices: _unref(page)?.data.slices ?? [],\n    components: _unref(components)\n  }, null, 8, [\"slices\", \"components\"]))\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,SAAS,QAAQ,oBAAoB,mBAAmB,aAAa,YAAY,eAAe,oBAAoB;AAE7H,SAAS,kBAAkB;AAG3B,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,MAAM,SAAS;AAEjB,UAAM,UAAU,WAAW;AAC3B,UAAM,QAAQ,SAAS;AACvB,UAAM,EAAE,MAAM,KAAK,IAAI;AAAA,MAAa,MAAM,OAAO;AAAA,MAAe,MAC9D,QAAQ,OAAO,SAAS,QAAQ,MAAM,OAAO,GAAa;AAAA,IAC5D;AACA,UAAM,WAAW,YAAY;AAE7B,mBAAe;AAAA,MACb,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,sBAAsB;AAAA,IACxB,CAAC;AAED,YAAQ;AAAA,MACN,OAAO,SAAS,MAAM,GAAG,QAAQ,OAAO,KAAK,OAAO,KAAK,KAAK,CAAC,MAAM,QAAQ,OAAO,SAAS,OAAO,KAAK,IAAI,CAAC,EAAE;AAAA,IAClH,CAAC;AAED,WAAO,CAAC,MAAU,WAAgB;AAChC,YAAM,uBAAuB,kBAAkB,WAAW;AAE1D,aAAQ,WAAW,GAAG,aAAa,sBAAsB;AAAA,QACvD,SAAS;AAAA,QACT,QAAQ,OAAO,IAAI,GAAG,KAAK,UAAU,CAAC;AAAA,QACtC,YAAY,OAAO,UAAU;AAAA,MAC/B,GAAG,MAAM,GAAG,CAAC,UAAU,YAAY,CAAC;AAAA,IACtC;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1720103995237,
      "end": 1720103995237,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720103995237,
      "end": 1720103995237,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720103995237,
      "end": 1720103995237,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720103995237,
      "end": 1720103995237,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103995237,
      "end": 1720103995237,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720103995237,
      "end": 1720103995237,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1720103995237,
      "end": 1720103995237,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720103995237,
      "end": 1720103995237,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720103995238,
      "end": 1720103995238,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720103995240,
      "end": 1720103995242,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { usePrismic } from '@prismicio/vue';\nimport { useRoute } from '#app/composables/router';\nimport { useAsyncData } from '#app/composables/asyncData';\nimport { useSettings } from 'C:/webdev/Tutorials/nuxt-blog/composables/useSettings.ts';\nimport { definePageMeta } from 'C:/webdev/Tutorials/nuxt-blog/node_modules/nuxt/dist/pages/runtime/composables';\nimport { useHead } from '@unhead/vue';\nimport { computed } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport { components } from \"~/slices\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"[uid]\",\n  setup(__props) {\n    const prismic = usePrismic();\n    const route = useRoute();\n    const { data: page } = useAsyncData(\n      route.params.uid,\n      () => prismic.client.getByUID(\"page\", route.params.uid)\n    );\n    const settings = useSettings();\n    definePageMeta({\n      withHeaderProfile: true,\n      withHeaderDivider: true,\n      withFooterSignUpForm: true\n    });\n    useHead({\n      title: computed(() => `${prismic.asText(page.value?.data.title)} | ${prismic.asText(settings.value?.data.name)}`)\n    });\n    return (_ctx, _cache) => {\n      const _component_SliceZone = _resolveComponent(\"SliceZone\");\n      return _openBlock(), _createBlock(_component_SliceZone, {\n        wrapper: \"main\",\n        slices: _unref(page)?.data.slices ?? [],\n        components: _unref(components)\n      }, null, 8, [\"slices\", \"components\"]);\n    };\n  }\n});\n",
      "start": 1720103995243,
      "end": 1720103995252,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbvH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1720103995254,
      "end": 1720103995256,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "const __nuxt_page_meta = {\n      withHeaderProfile: true,\n      withHeaderDivider: true,\n      withFooterSignUpForm: true\n    }\nexport default __nuxt_page_meta",
      "start": 1720103995260,
      "end": 1720103995263,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
      }
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1720103995265,
      "end": 1720103995265,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1720103995265,
      "end": 1720103995265,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720103995265,
      "end": 1720103995265,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720103995266,
      "end": 1720103995266,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720103995266,
      "end": 1720103995267,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720103995267,
      "end": 1720103995267,
      "order": "normal"
    }
  ]
}
