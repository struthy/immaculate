{
  "resolvedId": "C:/webdev/Tutorials/nuxt-blog/node_modules/@prismicio/simulator/dist/kit/State.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventEmitter } from \"../lib/EventEmitter.js\";\nimport { throttle } from \"../lib/throttle.js\";\nimport { StateEventType } from \"./types.js\";\nimport { getSliceZoneDOM, getActiveSliceDOM } from \"./domHelpers.js\";\nimport { getDefaultSlices } from \"./getDefault.js\";\nclass State extends EventEmitter {\n  constructor(args) {\n    super();\n    __publicField(this, \"_slices\");\n    __publicField(this, \"_activeSlice\");\n    __publicField(this, \"_message\");\n    __publicField(this, \"_mouse\");\n    __publicField(this, \"_setActiveSlice\", () => {\n      if (this.slices.length === 0) {\n        this.activeSlice = null;\n        return;\n      }\n      const $sliceZone = getSliceZoneDOM(this.slices.length);\n      if (!$sliceZone) {\n        this.activeSlice = null;\n        return;\n      }\n      const $activeSlice = getActiveSliceDOM($sliceZone, this._mouse);\n      if (!$activeSlice) {\n        this.activeSlice = null;\n        return;\n      }\n      const activeSliceIndex = Array.prototype.indexOf.call($sliceZone.children, $activeSlice);\n      this.activeSlice = {\n        rect: $activeSlice.getBoundingClientRect(),\n        sliceID: this.slices[activeSliceIndex].slice_type,\n        variationID: this.slices[activeSliceIndex].variation,\n        index: activeSliceIndex\n      };\n    });\n    __publicField(this, \"setActiveSlice\", throttle(this._setActiveSlice, 16));\n    this._slices = (args == null ? void 0 : args.slices) || getDefaultSlices();\n    this._activeSlice = null;\n    this._message = \"\";\n    this._mouse = { x: 0, y: 0 };\n  }\n  set slices(slices) {\n    this._slices = slices;\n    this.message = \"\";\n    this.emit(StateEventType.Slices, slices);\n  }\n  get slices() {\n    return this._slices;\n  }\n  set activeSlice(activeSlice) {\n    this._activeSlice = activeSlice;\n    this.emit(StateEventType.ActiveSlice, activeSlice);\n  }\n  get activeSlice() {\n    return this._activeSlice;\n  }\n  set message(message) {\n    this._message = message;\n    this.emit(StateEventType.Message, message);\n  }\n  get message() {\n    return this._message;\n  }\n  async init() {\n    window.addEventListener(\"mousemove\", (event) => {\n      this._mouse = { x: event.clientX, y: event.clientY };\n    });\n  }\n  setSliceZone(slices) {\n    this.slices = slices;\n  }\n}\nexport {\n  State\n};\n//# sourceMappingURL=State.js.map\n",
      "start": 1720177711462,
      "end": 1720177711469,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720177711469,
      "end": 1720177711469,
      "order": "normal"
    }
  ]
}
