{
  "resolvedId": "C:/webdev/Tutorials/nuxt-blog/components/ArticleListItem.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"grid grid-cols-1 items-start gap-6 md:grid-cols-3 md:gap-8\" }\nconst _hoisted_2 = { class: \"aspect-w-4 aspect-h-3 relative bg-gray-100\" }\nconst _hoisted_3 = { class: \"grid grid-cols-1 gap-3 md:col-span-2\" }\nconst _hoisted_4 = { class: \"font-serif italic tracking-tighter text-slate-500\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"font-serif leading-relaxed md:text-lg md:leading-relaxed\"\n}\n\nimport { type Content } from '@prismicio/client'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ArticleListItem',\n  props: {\n  article: {\n    type: Object as PropType<Content.ArticleDocument>,\n    required: true\n  }\n},\n  setup(__props) {\n\nconst props = __props\n\nconst dateFormatter = new Intl.DateTimeFormat('en-US', {\n  month: 'short',\n  day: 'numeric',\n  year: 'numeric'\n})\nconst prismic = usePrismic()\n\nconst featuredImage = computed(() => {\n  if (props.article.data.featuredImage.url) {\n    return props.article.data.featuredImage\n  }\n\n  const imageSlice = props.article.data.slices.find(slice => slice.slice_type === 'image') as Content.ImageSlice\n  if (imageSlice && imageSlice.primary.image.url) {\n    return imageSlice.primary.image\n  }\n  return null\n})\n\nconst formattedDate = computed(() => {\n  const date = prismic.asDate(props.article.data.publishDate || props.article.first_publication_date)\n\n  return dateFormatter.format(date || undefined)\n})\n\nconst excerpt = computed(() => {\n  const text = props.article.data.slices\n    .filter(slice => slice.slice_type === 'text')\n    .map((slice) => prismic.asText((slice as Content.TextSlice).primary.text))\n    .join(' ')\n  const excerpt = text.substring(0, 300)\n  if (text.length > 300) {\n    return excerpt.substring(0, excerpt.lastIndexOf(' ')) + '…'\n  } else {\n    return excerpt\n  }\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_PrismicImage = _resolveComponent(\"PrismicImage\")!\n  const _component_PrismicLink = _resolveComponent(\"PrismicLink\")!\n  const _component_Heading = _resolveComponent(\"Heading\")!\n\n  return (_openBlock(), _createElementBlock(\"li\", _hoisted_1, [\n    _createVNode(_component_PrismicLink, {\n      field: __props.article,\n      \"tab-index\": \"-1\"\n    }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_2, [\n          (_unref(featuredImage)?.url)\n            ? (_openBlock(), _createBlock(_component_PrismicImage, {\n                key: 0,\n                field: _unref(featuredImage),\n                class: \"object-cover\"\n              }, null, 8, [\"field\"]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"field\"]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createVNode(_component_Heading, { as: \"h2\" }, {\n        default: _withCtx(() => [\n          _createVNode(_component_PrismicLink, { field: __props.article }, {\n            default: _withCtx(() => [\n              _createTextVNode(_toDisplayString(_ctx.$prismic.asText(__props.article.data.title)), 1)\n            ]),\n            _: 1\n          }, 8, [\"field\"])\n        ]),\n        _: 1\n      }),\n      _createElementVNode(\"p\", _hoisted_4, _toDisplayString(_unref(formattedDate)), 1),\n      (_unref(excerpt))\n        ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(_unref(excerpt)), 1))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})",
      "start": 1720103995521,
      "end": 1720103995521
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720103995521,
      "end": 1720103995521,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720103995521,
      "end": 1720103995521,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720103995521,
      "end": 1720103995521,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720103995521,
      "end": 1720103995521,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = { class: \"grid grid-cols-1 items-start gap-6 md:grid-cols-3 md:gap-8\" };\nconst _hoisted_2 = { class: \"aspect-w-4 aspect-h-3 relative bg-gray-100\" };\nconst _hoisted_3 = { class: \"grid grid-cols-1 gap-3 md:col-span-2\" };\nconst _hoisted_4 = { class: \"font-serif italic tracking-tighter text-slate-500\" };\nconst _hoisted_5 = {\n  key: 0,\n  class: \"font-serif leading-relaxed md:text-lg md:leading-relaxed\"\n};\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ArticleListItem\",\n  props: {\n    article: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n      month: \"short\",\n      day: \"numeric\",\n      year: \"numeric\"\n    });\n    const prismic = usePrismic();\n    const featuredImage = computed(() => {\n      if (props.article.data.featuredImage.url) {\n        return props.article.data.featuredImage;\n      }\n      const imageSlice = props.article.data.slices.find((slice) => slice.slice_type === \"image\");\n      if (imageSlice && imageSlice.primary.image.url) {\n        return imageSlice.primary.image;\n      }\n      return null;\n    });\n    const formattedDate = computed(() => {\n      const date = prismic.asDate(props.article.data.publishDate || props.article.first_publication_date);\n      return dateFormatter.format(date || void 0);\n    });\n    const excerpt = computed(() => {\n      const text = props.article.data.slices.filter((slice) => slice.slice_type === \"text\").map((slice) => prismic.asText(slice.primary.text)).join(\" \");\n      const excerpt2 = text.substring(0, 300);\n      if (text.length > 300) {\n        return excerpt2.substring(0, excerpt2.lastIndexOf(\" \")) + \"…\";\n      } else {\n        return excerpt2;\n      }\n    });\n    return (_ctx, _cache) => {\n      const _component_PrismicImage = _resolveComponent(\"PrismicImage\");\n      const _component_PrismicLink = _resolveComponent(\"PrismicLink\");\n      const _component_Heading = _resolveComponent(\"Heading\");\n      return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [\n        _createVNode(_component_PrismicLink, {\n          field: __props.article,\n          \"tab-index\": \"-1\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_2, [\n              _unref(featuredImage)?.url ? (_openBlock(), _createBlock(_component_PrismicImage, {\n                key: 0,\n                field: _unref(featuredImage),\n                class: \"object-cover\"\n              }, null, 8, [\"field\"])) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"field\"]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_Heading, { as: \"h2\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_PrismicLink, { field: __props.article }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$prismic.asText(__props.article.data.title)), 1)\n                ]),\n                _: 1\n              }, 8, [\"field\"])\n            ]),\n            _: 1\n          }),\n          _createElementVNode(\"p\", _hoisted_4, _toDisplayString(_unref(formattedDate)), 1),\n          _unref(excerpt) ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(_unref(excerpt)), 1)) : _createCommentVNode(\"\", true)\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1720103995521,
      "end": 1720103995534,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/webdev/Tutorials/nuxt-blog/components/ArticleListItem.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"grid grid-cols-1 items-start gap-6 md:grid-cols-3 md:gap-8\" }\nconst _hoisted_2 = { class: \"aspect-w-4 aspect-h-3 relative bg-gray-100\" }\nconst _hoisted_3 = { class: \"grid grid-cols-1 gap-3 md:col-span-2\" }\nconst _hoisted_4 = { class: \"font-serif italic tracking-tighter text-slate-500\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"font-serif leading-relaxed md:text-lg md:leading-relaxed\"\n}\n\nimport { type Content } from '@prismicio/client'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ArticleListItem',\n  props: {\n  article: {\n    type: Object as PropType<Content.ArticleDocument>,\n    required: true\n  }\n},\n  setup(__props) {\n\nconst props = __props\n\nconst dateFormatter = new Intl.DateTimeFormat('en-US', {\n  month: 'short',\n  day: 'numeric',\n  year: 'numeric'\n})\nconst prismic = usePrismic()\n\nconst featuredImage = computed(() => {\n  if (props.article.data.featuredImage.url) {\n    return props.article.data.featuredImage\n  }\n\n  const imageSlice = props.article.data.slices.find(slice => slice.slice_type === 'image') as Content.ImageSlice\n  if (imageSlice && imageSlice.primary.image.url) {\n    return imageSlice.primary.image\n  }\n  return null\n})\n\nconst formattedDate = computed(() => {\n  const date = prismic.asDate(props.article.data.publishDate || props.article.first_publication_date)\n\n  return dateFormatter.format(date || undefined)\n})\n\nconst excerpt = computed(() => {\n  const text = props.article.data.slices\n    .filter(slice => slice.slice_type === 'text')\n    .map((slice) => prismic.asText((slice as Content.TextSlice).primary.text))\n    .join(' ')\n  const excerpt = text.substring(0, 300)\n  if (text.length > 300) {\n    return excerpt.substring(0, excerpt.lastIndexOf(' ')) + '…'\n  } else {\n    return excerpt\n  }\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_PrismicImage = _resolveComponent(\"PrismicImage\")!\n  const _component_PrismicLink = _resolveComponent(\"PrismicLink\")!\n  const _component_Heading = _resolveComponent(\"Heading\")!\n\n  return (_openBlock(), _createElementBlock(\"li\", _hoisted_1, [\n    _createVNode(_component_PrismicLink, {\n      field: __props.article,\n      \"tab-index\": \"-1\"\n    }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_2, [\n          (_unref(featuredImage)?.url)\n            ? (_openBlock(), _createBlock(_component_PrismicImage, {\n                key: 0,\n                field: _unref(featuredImage),\n                class: \"object-cover\"\n              }, null, 8, [\"field\"]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"field\"]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createVNode(_component_Heading, { as: \"h2\" }, {\n        default: _withCtx(() => [\n          _createVNode(_component_PrismicLink, { field: __props.article }, {\n            default: _withCtx(() => [\n              _createTextVNode(_toDisplayString(_ctx.$prismic.asText(__props.article.data.title)), 1)\n            ]),\n            _: 1\n          }, 8, [\"field\"])\n        ]),\n        _: 1\n      }),\n      _createElementVNode(\"p\", _hoisted_4, _toDisplayString(_unref(formattedDate)), 1),\n      (_unref(excerpt))\n        ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(_unref(excerpt)), 1))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": [
          "excerpt"
        ]
      }
    },
    {
      "name": "vite:json",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720103995534,
      "end": 1720103995534,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720103995534,
      "end": 1720103995535,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720103995535,
      "end": 1720103995535,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720103995535,
      "end": 1720103995535,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720103995535,
      "end": 1720103995535,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720103995535,
      "end": 1720103995535,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720103995535,
      "end": 1720103995535,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720103995535,
      "end": 1720103995535,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720103995535,
      "end": 1720103995535,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720103995535,
      "end": 1720103995535,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { usePrismic } from '@prismicio/vue';\nimport { computed } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = { class: \"grid grid-cols-1 items-start gap-6 md:grid-cols-3 md:gap-8\" };\nconst _hoisted_2 = { class: \"aspect-w-4 aspect-h-3 relative bg-gray-100\" };\nconst _hoisted_3 = { class: \"grid grid-cols-1 gap-3 md:col-span-2\" };\nconst _hoisted_4 = { class: \"font-serif italic tracking-tighter text-slate-500\" };\nconst _hoisted_5 = {\n  key: 0,\n  class: \"font-serif leading-relaxed md:text-lg md:leading-relaxed\"\n};\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ArticleListItem\",\n  props: {\n    article: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n      month: \"short\",\n      day: \"numeric\",\n      year: \"numeric\"\n    });\n    const prismic = usePrismic();\n    const featuredImage = computed(() => {\n      if (props.article.data.featuredImage.url) {\n        return props.article.data.featuredImage;\n      }\n      const imageSlice = props.article.data.slices.find((slice) => slice.slice_type === \"image\");\n      if (imageSlice && imageSlice.primary.image.url) {\n        return imageSlice.primary.image;\n      }\n      return null;\n    });\n    const formattedDate = computed(() => {\n      const date = prismic.asDate(props.article.data.publishDate || props.article.first_publication_date);\n      return dateFormatter.format(date || void 0);\n    });\n    const excerpt = computed(() => {\n      const text = props.article.data.slices.filter((slice) => slice.slice_type === \"text\").map((slice) => prismic.asText(slice.primary.text)).join(\" \");\n      const excerpt2 = text.substring(0, 300);\n      if (text.length > 300) {\n        return excerpt2.substring(0, excerpt2.lastIndexOf(\" \")) + \"…\";\n      } else {\n        return excerpt2;\n      }\n    });\n    return (_ctx, _cache) => {\n      const _component_PrismicImage = _resolveComponent(\"PrismicImage\");\n      const _component_PrismicLink = _resolveComponent(\"PrismicLink\");\n      const _component_Heading = _resolveComponent(\"Heading\");\n      return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [\n        _createVNode(_component_PrismicLink, {\n          field: __props.article,\n          \"tab-index\": \"-1\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_2, [\n              _unref(featuredImage)?.url ? (_openBlock(), _createBlock(_component_PrismicImage, {\n                key: 0,\n                field: _unref(featuredImage),\n                class: \"object-cover\"\n              }, null, 8, [\"field\"])) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"field\"]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_Heading, { as: \"h2\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_PrismicLink, { field: __props.article }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$prismic.asText(__props.article.data.title)), 1)\n                ]),\n                _: 1\n              }, 8, [\"field\"])\n            ]),\n            _: 1\n          }),\n          _createElementVNode(\"p\", _hoisted_4, _toDisplayString(_unref(formattedDate)), 1),\n          _unref(excerpt) ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(_unref(excerpt)), 1)) : _createCommentVNode(\"\", true)\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1720103995535,
      "end": 1720103995537,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpztE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtlE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbtJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1720103995537,
      "end": 1720103995537,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720103995537,
      "end": 1720103995537,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1720103995537,
      "end": 1720103995537,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1720103995537,
      "end": 1720103995538,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { PrismicImage as __nuxt_component_0 } from \"@prismicio/vue\";\nimport { PrismicLink as __nuxt_component_1 } from \"@prismicio/vue\";\nimport { default as __nuxt_component_2 } from \"C:/webdev/Tutorials/nuxt-blog/components/Heading.vue\";\nimport { usePrismic } from '@prismicio/vue';\nimport { computed } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = { class: \"grid grid-cols-1 items-start gap-6 md:grid-cols-3 md:gap-8\" };\nconst _hoisted_2 = { class: \"aspect-w-4 aspect-h-3 relative bg-gray-100\" };\nconst _hoisted_3 = { class: \"grid grid-cols-1 gap-3 md:col-span-2\" };\nconst _hoisted_4 = { class: \"font-serif italic tracking-tighter text-slate-500\" };\nconst _hoisted_5 = {\n  key: 0,\n  class: \"font-serif leading-relaxed md:text-lg md:leading-relaxed\"\n};\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ArticleListItem\",\n  props: {\n    article: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n      month: \"short\",\n      day: \"numeric\",\n      year: \"numeric\"\n    });\n    const prismic = usePrismic();\n    const featuredImage = computed(() => {\n      if (props.article.data.featuredImage.url) {\n        return props.article.data.featuredImage;\n      }\n      const imageSlice = props.article.data.slices.find((slice) => slice.slice_type === \"image\");\n      if (imageSlice && imageSlice.primary.image.url) {\n        return imageSlice.primary.image;\n      }\n      return null;\n    });\n    const formattedDate = computed(() => {\n      const date = prismic.asDate(props.article.data.publishDate || props.article.first_publication_date);\n      return dateFormatter.format(date || void 0);\n    });\n    const excerpt = computed(() => {\n      const text = props.article.data.slices.filter((slice) => slice.slice_type === \"text\").map((slice) => prismic.asText(slice.primary.text)).join(\" \");\n      const excerpt2 = text.substring(0, 300);\n      if (text.length > 300) {\n        return excerpt2.substring(0, excerpt2.lastIndexOf(\" \")) + \"…\";\n      } else {\n        return excerpt2;\n      }\n    });\n    return (_ctx, _cache) => {\n      const _component_PrismicImage = __nuxt_component_0;\n      const _component_PrismicLink = __nuxt_component_1;\n      const _component_Heading = __nuxt_component_2;\n      return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [\n        _createVNode(_component_PrismicLink, {\n          field: __props.article,\n          \"tab-index\": \"-1\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_2, [\n              _unref(featuredImage)?.url ? (_openBlock(), _createBlock(_component_PrismicImage, {\n                key: 0,\n                field: _unref(featuredImage),\n                class: \"object-cover\"\n              }, null, 8, [\"field\"])) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"field\"]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_Heading, { as: \"h2\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_PrismicLink, { field: __props.article }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$prismic.asText(__props.article.data.title)), 1)\n                ]),\n                _: 1\n              }, 8, [\"field\"])\n            ]),\n            _: 1\n          }),\n          _createElementVNode(\"p\", _hoisted_4, _toDisplayString(_unref(formattedDate)), 1),\n          _unref(excerpt) ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(_unref(excerpt)), 1)) : _createCommentVNode(\"\", true)\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1720103995538,
      "end": 1720103995538,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720103995538,
      "end": 1720103995538,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720103995538,
      "end": 1720103995538,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720103995538,
      "end": 1720103995538,
      "order": "normal"
    }
  ]
}
